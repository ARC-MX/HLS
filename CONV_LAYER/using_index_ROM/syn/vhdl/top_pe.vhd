-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_pe is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    weight_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_stream_V_empty_n : IN STD_LOGIC;
    weight_stream_V_read : OUT STD_LOGIC;
    pe_weight_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_weight_stream_V_full_n : IN STD_LOGIC;
    pe_weight_stream_V_write : OUT STD_LOGIC;
    pe_input_stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_V_V_full_n : IN STD_LOGIC;
    pe_input_stream_V_V_write : OUT STD_LOGIC;
    pe_input_stream_1_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_1_V_V_full_n : IN STD_LOGIC;
    pe_input_stream_1_V_V_write : OUT STD_LOGIC;
    pe_input_stream_2_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_2_V_V_full_n : IN STD_LOGIC;
    pe_input_stream_2_V_V_write : OUT STD_LOGIC;
    pe_input_stream_3_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_3_V_V_full_n : IN STD_LOGIC;
    pe_input_stream_3_V_V_write : OUT STD_LOGIC;
    pe_input_stream_4_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_4_V_V_full_n : IN STD_LOGIC;
    pe_input_stream_4_V_V_write : OUT STD_LOGIC;
    pe_input_stream_5_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_5_V_V_full_n : IN STD_LOGIC;
    pe_input_stream_5_V_V_write : OUT STD_LOGIC;
    pe_input_stream_6_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_6_V_V_full_n : IN STD_LOGIC;
    pe_input_stream_6_V_V_write : OUT STD_LOGIC;
    pe_input_stream_7_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_7_V_V_full_n : IN STD_LOGIC;
    pe_input_stream_7_V_V_write : OUT STD_LOGIC;
    pe_input_stream_8_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_8_V_V_full_n : IN STD_LOGIC;
    pe_input_stream_8_V_V_write : OUT STD_LOGIC );
end;


architecture behav of top_pe is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv7_24 : STD_LOGIC_VECTOR (6 downto 0) := "0100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal index_table_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_table_ce0 : STD_LOGIC;
    signal index_table_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_table_ce1 : STD_LOGIC;
    signal index_table_q1 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_table_ce2 : STD_LOGIC;
    signal index_table_q2 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_table_ce3 : STD_LOGIC;
    signal index_table_q3 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_address4 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_table_ce4 : STD_LOGIC;
    signal index_table_q4 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_address5 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_table_ce5 : STD_LOGIC;
    signal index_table_q5 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_address6 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_table_ce6 : STD_LOGIC;
    signal index_table_q6 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_address7 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_table_ce7 : STD_LOGIC;
    signal index_table_q7 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_address8 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_table_ce8 : STD_LOGIC;
    signal index_table_q8 : STD_LOGIC_VECTOR (5 downto 0);
    signal weight_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln53_reg_1966 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_reg_1966_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln55_3_reg_2013 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln55_3_reg_2013_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pe_weight_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal icmp_ln53_reg_1966_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pe_input_stream_V_V_blk_n : STD_LOGIC;
    signal pe_input_stream_1_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal pe_input_stream_2_V_V_blk_n : STD_LOGIC;
    signal pe_input_stream_3_V_V_blk_n : STD_LOGIC;
    signal pe_input_stream_4_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal pe_input_stream_5_V_V_blk_n : STD_LOGIC;
    signal pe_input_stream_6_V_V_blk_n : STD_LOGIC;
    signal pe_input_stream_7_V_V_blk_n : STD_LOGIC;
    signal icmp_ln53_reg_1966_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pe_input_stream_8_V_V_blk_n : STD_LOGIC;
    signal indvar_flatten124_reg_578 : STD_LOGIC_VECTOR (5 downto 0);
    signal output_x_reg_589 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten50_reg_600 : STD_LOGIC_VECTOR (5 downto 0);
    signal output_y_reg_611 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_reg_622 : STD_LOGIC_VECTOR (3 downto 0);
    signal table_index_reg_633 : STD_LOGIC_VECTOR (6 downto 0);
    signal kernel_y_reg_644 : STD_LOGIC_VECTOR (1 downto 0);
    signal table_index_1_reg_655 : STD_LOGIC_VECTOR (6 downto 0);
    signal kernel_x_reg_666 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_registers_V_2_2_3_reg_677 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_2_2_V_reg_689 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln53_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op144_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal inner_fifos_1_0_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_1_0_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_1_0_V_V_read : STD_LOGIC;
    signal select_ln58_3_reg_2057 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln58_3_reg_2057_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inner_fifos_1_1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_1_1_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_1_1_V_V_read : STD_LOGIC;
    signal and_ln74_reg_2088 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln74_reg_2088_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op713_read_state6 : BOOLEAN;
    signal inner_fifos_1_2_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_1_2_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_1_2_V_V_read : STD_LOGIC;
    signal ap_predicate_op722_read_state6 : BOOLEAN;
    signal inner_fifos_1_0_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_1_0_V_V_full_n : STD_LOGIC;
    signal inner_fifos_1_0_V_V_write : STD_LOGIC;
    signal select_ln58_4_reg_2063 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln58_4_reg_2063_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inner_fifos_1_1_V_V_full_n : STD_LOGIC;
    signal inner_fifos_1_1_V_V_write : STD_LOGIC;
    signal inner_fifos_1_2_V_V_full_n : STD_LOGIC;
    signal inner_fifos_1_2_V_V_write : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal inner_fifos_0_0_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_0_0_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_0_0_V_V_read : STD_LOGIC;
    signal select_ln58_3_reg_2057_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inner_fifos_0_1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_0_1_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_0_1_V_V_read : STD_LOGIC;
    signal and_ln74_reg_2088_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op756_read_state7 : BOOLEAN;
    signal inner_fifos_0_2_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_0_2_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_0_2_V_V_read : STD_LOGIC;
    signal ap_predicate_op763_read_state7 : BOOLEAN;
    signal inner_fifos_0_0_V_V_full_n : STD_LOGIC;
    signal inner_fifos_0_0_V_V_write : STD_LOGIC;
    signal select_ln58_4_reg_2063_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inner_fifos_0_1_V_V_full_n : STD_LOGIC;
    signal inner_fifos_0_1_V_V_write : STD_LOGIC;
    signal inner_fifos_0_2_V_V_full_n : STD_LOGIC;
    signal inner_fifos_0_2_V_V_write : STD_LOGIC;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln53_reg_1966_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_reg_1966_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln53_fu_1051_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln55_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_1975 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln53_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln53_reg_1983 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_reg_1988 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln53_1_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln53_1_reg_1993 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_3_fu_1115_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln55_fu_1129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_reg_2005 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln55_3_fu_1145_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln55_5_fu_1153_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln58_7_fu_1167_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln55_6_fu_1181_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln58_fu_1306_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln58_reg_2032 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln58_1_fu_1324_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln58_1_reg_2043 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln58_2_fu_1350_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln58_2_reg_2051 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln58_3_fu_1364_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln58_3_reg_2057_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln58_4_fu_1378_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln58_4_reg_2063_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln58_5_fu_1386_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal select_ln58_6_fu_1394_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln58_6_reg_2072 : STD_LOGIC_VECTOR (1 downto 0);
    signal cmp45_fu_1402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp45_reg_2078 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp45_reg_2078_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp45_reg_2078_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln109_fu_1408_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln109_reg_2083 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln109_reg_2083_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln74_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln74_reg_2088_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln61_fu_1431_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln69_1_fu_1437_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_1456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2107 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_fu_1463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_reg_2111 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_reg_2111_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_1_fu_1472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_1_reg_2116 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_1_reg_2116_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_1_reg_2116_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal index_table_load_reg_2123 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_load_reg_2123_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_load_reg_2123_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln74_1_fu_1494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln74_1_reg_2127 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln74_1_reg_2127_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln74_1_reg_2127_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln113_fu_1559_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln113_reg_2166 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln113_reg_2166_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln113_reg_2166_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal index_table_load_2_reg_2176 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal index_table_load_2_reg_2176_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_load_3_reg_2180 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_load_4_reg_2184 : STD_LOGIC_VECTOR (5 downto 0);
    signal index_table_load_5_reg_2188 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln75_fu_1583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln75_reg_2203 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln78_fu_1587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln78_reg_2209 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_table_load_1_reg_2214 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_condition_pp0_exit_iter3_state5 : STD_LOGIC;
    signal weight_registers_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_registers_V_ce0 : STD_LOGIC;
    signal weight_registers_V_we0 : STD_LOGIC;
    signal weight_registers_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_registers_V_ce1 : STD_LOGIC;
    signal weight_registers_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_kernel_y_phi_fu_648_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_input_registers_V_2_2_3_phi_fu_681_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_input_registers_2_2_V_reg_689 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_input_registers_2_1_V_reg_856 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_input_registers_2_1_V_reg_856 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_input_registers_2_1_V_reg_856 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_input_registers_2_1_V_reg_856 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln74_fu_1414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_fu_1451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln74_1_fu_1483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_fu_1504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_2_fu_1514_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_3_fu_1524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_4_fu_1534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_5_fu_1544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_6_fu_1554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_fu_1573_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln113_fu_1824_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_registers_V_2_0_3_fu_230 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln78_4_fu_1701_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_2_0_V_fu_234 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_0_0_V_1_fu_238 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln78_1_fu_1732_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_0_0_V_fu_242 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln82_fu_1752_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_0_1_V_fu_246 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln82_1_fu_1777_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_1_0_V_1_fu_250 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln78_3_fu_1613_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_1_0_V_fu_254 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln82_2_fu_1637_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_1_1_V_fu_258 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln82_3_fu_1666_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_V_2_3_3_fu_262 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_0_2_V_fu_266 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_1_2_V_fu_270 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln55_fu_1035_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln53_fu_1031_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln53_1_fu_1071_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln53_1_fu_1077_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_12_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_fu_1063_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_y_2_fu_1123_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln55_1_fu_1135_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_1_fu_1081_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid136_fu_1139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_2_fu_1089_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln58_1_fu_1161_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln55_1_fu_1175_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_fu_1193_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln58_fu_1189_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal cmp38_fu_1207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_13_fu_1201_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln53_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_1_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln55_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln53_fu_1235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_3_fu_1283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln55_1_fu_1247_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln55_fu_1240_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln55_fu_1288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln69_fu_1300_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln55_2_fu_1254_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln58_fu_1314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_1_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln58_fu_1294_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl_mid1_fu_1336_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln58_1_fu_1332_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mid1_fu_1344_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln55_4_fu_1261_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal cmp38_mid1_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_1_fu_1268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_mid1_fu_1372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_2_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln74_fu_1419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln182_fu_1443_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln66_fu_1446_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln73_fu_1468_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln109_1_fu_1478_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln74_1_fu_1488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln109_1_fu_1499_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln109_2_fu_1509_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln109_3_fu_1519_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln109_4_fu_1529_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln109_5_fu_1539_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln109_6_fu_1549_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln109_fu_1568_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln78_2_fu_1606_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln78_fu_1725_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_553 : BOOLEAN;
    signal ap_condition_540 : BOOLEAN;

    component top_pe_index_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address2 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address3 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address4 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address5 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address6 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address7 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (5 downto 0);
        address8 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component top_pe_weight_registers_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component top_fifo_w8_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    index_table_U : component top_pe_index_table
    generic map (
        DataWidth => 6,
        AddressRange => 108,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => index_table_address0,
        ce0 => index_table_ce0,
        q0 => index_table_q0,
        address1 => index_table_address1,
        ce1 => index_table_ce1,
        q1 => index_table_q1,
        address2 => index_table_address2,
        ce2 => index_table_ce2,
        q2 => index_table_q2,
        address3 => index_table_address3,
        ce3 => index_table_ce3,
        q3 => index_table_q3,
        address4 => index_table_address4,
        ce4 => index_table_ce4,
        q4 => index_table_q4,
        address5 => index_table_address5,
        ce5 => index_table_ce5,
        q5 => index_table_q5,
        address6 => index_table_address6,
        ce6 => index_table_ce6,
        q6 => index_table_q6,
        address7 => index_table_address7,
        ce7 => index_table_ce7,
        q7 => index_table_q7,
        address8 => index_table_address8,
        ce8 => index_table_ce8,
        q8 => index_table_q8);

    weight_registers_V_U : component top_pe_weight_registers_V
    generic map (
        DataWidth => 8,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_registers_V_address0,
        ce0 => weight_registers_V_ce0,
        we0 => weight_registers_V_we0,
        d0 => weight_stream_V_dout,
        address1 => weight_registers_V_address1,
        ce1 => weight_registers_V_ce1,
        q1 => weight_registers_V_q1);

    inner_fifos_0_0_V_V_fifo_U : component top_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => input_registers_1_0_V_1_fu_250,
        if_full_n => inner_fifos_0_0_V_V_full_n,
        if_write => inner_fifos_0_0_V_V_write,
        if_dout => inner_fifos_0_0_V_V_dout,
        if_empty_n => inner_fifos_0_0_V_V_empty_n,
        if_read => inner_fifos_0_0_V_V_read);

    inner_fifos_0_1_V_V_fifo_U : component top_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => input_registers_1_0_V_fu_254,
        if_full_n => inner_fifos_0_1_V_V_full_n,
        if_write => inner_fifos_0_1_V_V_write,
        if_dout => inner_fifos_0_1_V_V_dout,
        if_empty_n => inner_fifos_0_1_V_V_empty_n,
        if_read => inner_fifos_0_1_V_V_read);

    inner_fifos_0_2_V_V_fifo_U : component top_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => input_registers_1_1_V_fu_258,
        if_full_n => inner_fifos_0_2_V_V_full_n,
        if_write => inner_fifos_0_2_V_V_write,
        if_dout => inner_fifos_0_2_V_V_dout,
        if_empty_n => inner_fifos_0_2_V_V_empty_n,
        if_read => inner_fifos_0_2_V_V_read);

    inner_fifos_1_0_V_V_fifo_U : component top_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => inner_fifos_1_0_V_V_din,
        if_full_n => inner_fifos_1_0_V_V_full_n,
        if_write => inner_fifos_1_0_V_V_write,
        if_dout => inner_fifos_1_0_V_V_dout,
        if_empty_n => inner_fifos_1_0_V_V_empty_n,
        if_read => inner_fifos_1_0_V_V_read);

    inner_fifos_1_1_V_V_fifo_U : component top_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856,
        if_full_n => inner_fifos_1_1_V_V_full_n,
        if_write => inner_fifos_1_1_V_V_write,
        if_dout => inner_fifos_1_1_V_V_dout,
        if_empty_n => inner_fifos_1_1_V_V_empty_n,
        if_read => inner_fifos_1_1_V_V_read);

    inner_fifos_1_2_V_V_fifo_U : component top_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => input_registers_2_2_V_reg_689,
        if_full_n => inner_fifos_1_2_V_V_full_n,
        if_write => inner_fifos_1_2_V_V_write,
        if_dout => inner_fifos_1_2_V_V_dout,
        if_empty_n => inner_fifos_1_2_V_V_empty_n,
        if_read => inner_fifos_1_2_V_V_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter3_state5)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((cmp45_reg_2078_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln53_reg_1966_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856 <= ap_phi_mux_input_registers_V_2_2_3_phi_fu_681_p4;
                elsif ((ap_const_boolean_1 = ap_condition_553)) then 
                    ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856 <= ap_phi_reg_pp0_iter3_input_registers_2_1_V_reg_856;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten124_reg_578_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_fu_1045_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten124_reg_578 <= add_ln53_fu_1051_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten124_reg_578 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten50_reg_600_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_fu_1045_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten50_reg_600 <= select_ln55_6_fu_1181_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten50_reg_600 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_622_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_fu_1045_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_622 <= select_ln58_7_fu_1167_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_622 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    input_registers_0_0_V_1_fu_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                input_registers_0_0_V_1_fu_238 <= select_ln78_1_fu_1732_p3;
            elsif (((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                input_registers_0_0_V_1_fu_238 <= inner_fifos_0_0_V_V_dout;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                input_registers_0_0_V_1_fu_238 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    input_registers_0_0_V_fu_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((index_table_load_reg_2123_pp0_iter4_reg = ap_const_lv6_0) and (ap_const_lv1_1 = and_ln74_reg_2088_pp0_iter4_reg))) then 
                    input_registers_0_0_V_fu_242 <= ap_const_lv8_0;
                elsif (((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter4_reg))) then 
                    input_registers_0_0_V_fu_242 <= select_ln82_fu_1752_p3;
                elsif (((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter4_reg))) then 
                    input_registers_0_0_V_fu_242 <= inner_fifos_0_1_V_V_dout;
                end if;
            end if; 
        end if;
    end process;

    input_registers_0_1_V_fu_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((index_table_load_1_reg_2214 = ap_const_lv6_0) and (ap_const_lv1_1 = and_ln74_reg_2088_pp0_iter4_reg))) then 
                    input_registers_0_1_V_fu_246 <= ap_const_lv8_0;
                elsif (((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter4_reg))) then 
                    input_registers_0_1_V_fu_246 <= select_ln82_1_fu_1777_p3;
                elsif (((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter4_reg))) then 
                    input_registers_0_1_V_fu_246 <= inner_fifos_0_2_V_V_dout;
                end if;
            end if; 
        end if;
    end process;

    input_registers_1_0_V_1_fu_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_1)) then 
                    input_registers_1_0_V_1_fu_250 <= select_ln78_3_fu_1613_p3;
                elsif ((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_0)) then 
                    input_registers_1_0_V_1_fu_250 <= inner_fifos_1_0_V_V_dout;
                end if;
            end if; 
        end if;
    end process;

    input_registers_1_0_V_fu_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((index_table_load_3_reg_2180 = ap_const_lv6_0) and (ap_const_lv1_1 = and_ln74_reg_2088_pp0_iter3_reg))) then 
                    input_registers_1_0_V_fu_254 <= ap_const_lv8_0;
                elsif (((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter3_reg))) then 
                    input_registers_1_0_V_fu_254 <= select_ln82_2_fu_1637_p3;
                elsif (((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter3_reg))) then 
                    input_registers_1_0_V_fu_254 <= inner_fifos_1_1_V_V_dout;
                end if;
            end if; 
        end if;
    end process;

    input_registers_1_1_V_fu_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((index_table_load_4_reg_2184 = ap_const_lv6_0) and (ap_const_lv1_1 = and_ln74_reg_2088_pp0_iter3_reg))) then 
                    input_registers_1_1_V_fu_258 <= ap_const_lv8_0;
                elsif (((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter3_reg))) then 
                    input_registers_1_1_V_fu_258 <= select_ln82_3_fu_1666_p3;
                elsif (((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter3_reg))) then 
                    input_registers_1_1_V_fu_258 <= inner_fifos_1_2_V_V_dout;
                end if;
            end if; 
        end if;
    end process;

    input_registers_2_2_V_reg_689_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((cmp45_reg_2078_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln53_reg_1966_pp0_iter2_reg = ap_const_lv1_0))) then 
                    input_registers_2_2_V_reg_689 <= input_registers_V_2_3_3_fu_262;
                elsif ((ap_const_boolean_1 = ap_condition_540)) then 
                    input_registers_2_2_V_reg_689 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    input_registers_2_2_V_reg_689 <= ap_phi_reg_pp0_iter3_input_registers_2_2_V_reg_689;
                end if;
            end if; 
        end if;
    end process;

    kernel_x_reg_666_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_reg_1966 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                kernel_x_reg_666 <= add_ln61_fu_1431_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                kernel_x_reg_666 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    kernel_y_reg_644_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_reg_1966_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                kernel_y_reg_644 <= select_ln58_6_reg_2072;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                kernel_y_reg_644 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    output_x_reg_589_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_fu_1045_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                output_x_reg_589 <= select_ln53_3_fu_1115_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                output_x_reg_589 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    output_y_reg_611_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_fu_1045_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                output_y_reg_611 <= select_ln55_5_fu_1153_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                output_y_reg_611 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    table_index_1_reg_655_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_reg_1966 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                table_index_1_reg_655 <= add_ln69_1_fu_1437_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                table_index_1_reg_655 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    table_index_reg_633_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_reg_1966 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                table_index_reg_633 <= select_ln58_5_fu_1386_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                table_index_reg_633 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_reg_1966_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln113_reg_2166 <= add_ln113_fu_1559_p2;
                and_ln74_1_reg_2127 <= and_ln74_1_fu_1494_p2;
                icmp_ln73_1_reg_2116 <= icmp_ln73_1_fu_1472_p2;
                icmp_ln73_reg_2111 <= icmp_ln73_fu_1463_p2;
                tmp_reg_2107 <= select_ln58_1_reg_2043(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln113_reg_2166_pp0_iter3_reg <= add_ln113_reg_2166;
                add_ln113_reg_2166_pp0_iter4_reg <= add_ln113_reg_2166_pp0_iter3_reg;
                and_ln74_1_reg_2127_pp0_iter3_reg <= and_ln74_1_reg_2127;
                and_ln74_1_reg_2127_pp0_iter4_reg <= and_ln74_1_reg_2127_pp0_iter3_reg;
                and_ln74_reg_2088_pp0_iter2_reg <= and_ln74_reg_2088;
                and_ln74_reg_2088_pp0_iter3_reg <= and_ln74_reg_2088_pp0_iter2_reg;
                and_ln74_reg_2088_pp0_iter4_reg <= and_ln74_reg_2088_pp0_iter3_reg;
                and_ln75_reg_2203 <= and_ln75_fu_1583_p2;
                cmp45_reg_2078_pp0_iter2_reg <= cmp45_reg_2078;
                cmp45_reg_2078_pp0_iter3_reg <= cmp45_reg_2078_pp0_iter2_reg;
                icmp_ln53_reg_1966_pp0_iter2_reg <= icmp_ln53_reg_1966_pp0_iter1_reg;
                icmp_ln53_reg_1966_pp0_iter3_reg <= icmp_ln53_reg_1966_pp0_iter2_reg;
                icmp_ln53_reg_1966_pp0_iter4_reg <= icmp_ln53_reg_1966_pp0_iter3_reg;
                icmp_ln53_reg_1966_pp0_iter5_reg <= icmp_ln53_reg_1966_pp0_iter4_reg;
                icmp_ln73_1_reg_2116_pp0_iter3_reg <= icmp_ln73_1_reg_2116;
                icmp_ln73_1_reg_2116_pp0_iter4_reg <= icmp_ln73_1_reg_2116_pp0_iter3_reg;
                icmp_ln73_reg_2111_pp0_iter3_reg <= icmp_ln73_reg_2111;
                index_table_load_2_reg_2176_pp0_iter4_reg <= index_table_load_2_reg_2176;
                index_table_load_reg_2123_pp0_iter3_reg <= index_table_load_reg_2123;
                index_table_load_reg_2123_pp0_iter4_reg <= index_table_load_reg_2123_pp0_iter3_reg;
                    or_ln109_reg_2083_pp0_iter2_reg(6 downto 1) <= or_ln109_reg_2083(6 downto 1);
                or_ln78_reg_2209 <= or_ln78_fu_1587_p2;
                select_ln58_3_reg_2057_pp0_iter2_reg <= select_ln58_3_reg_2057;
                select_ln58_3_reg_2057_pp0_iter3_reg <= select_ln58_3_reg_2057_pp0_iter2_reg;
                select_ln58_3_reg_2057_pp0_iter4_reg <= select_ln58_3_reg_2057_pp0_iter3_reg;
                select_ln58_4_reg_2063_pp0_iter2_reg <= select_ln58_4_reg_2063;
                select_ln58_4_reg_2063_pp0_iter3_reg <= select_ln58_4_reg_2063_pp0_iter2_reg;
                select_ln58_4_reg_2063_pp0_iter4_reg <= select_ln58_4_reg_2063_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_fu_1045_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln53_1_reg_1993 <= and_ln53_1_fu_1109_p2;
                icmp_ln55_reg_1975 <= icmp_ln55_fu_1057_p2;
                icmp_ln58_reg_1988 <= icmp_ln58_fu_1103_p2;
                or_ln55_reg_2005 <= or_ln55_fu_1129_p2;
                select_ln55_3_reg_2013 <= select_ln55_3_fu_1145_p3;
                xor_ln53_reg_1983 <= xor_ln53_fu_1097_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_reg_1966 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln74_reg_2088 <= and_ln74_fu_1425_p2;
                cmp45_reg_2078 <= cmp45_fu_1402_p2;
                    or_ln109_reg_2083(6 downto 1) <= or_ln109_fu_1408_p2(6 downto 1);
                select_ln58_1_reg_2043 <= select_ln58_1_fu_1324_p3;
                select_ln58_2_reg_2051 <= select_ln58_2_fu_1350_p3;
                select_ln58_3_reg_2057 <= select_ln58_3_fu_1364_p3;
                select_ln58_4_reg_2063 <= select_ln58_4_fu_1378_p3;
                select_ln58_reg_2032 <= select_ln58_fu_1306_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_input_registers_2_1_V_reg_856 <= ap_phi_reg_pp0_iter0_input_registers_2_1_V_reg_856;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_input_registers_2_1_V_reg_856 <= ap_phi_reg_pp0_iter1_input_registers_2_1_V_reg_856;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_input_registers_2_1_V_reg_856 <= ap_phi_reg_pp0_iter2_input_registers_2_1_V_reg_856;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln53_reg_1966 <= icmp_ln53_fu_1045_p2;
                icmp_ln53_reg_1966_pp0_iter1_reg <= icmp_ln53_reg_1966;
                select_ln55_3_reg_2013_pp0_iter1_reg <= select_ln55_3_reg_2013;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                index_table_load_1_reg_2214 <= index_table_q0;
                input_registers_2_0_V_fu_234 <= ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856;
                input_registers_V_2_0_3_fu_230 <= select_ln78_4_fu_1701_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln53_reg_1966_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                index_table_load_2_reg_2176 <= index_table_q7;
                index_table_load_3_reg_2180 <= index_table_q6;
                index_table_load_4_reg_2184 <= index_table_q5;
                index_table_load_5_reg_2188 <= index_table_q4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_reg_1966_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                index_table_load_reg_2123 <= index_table_q8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_reg_1966_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                input_registers_V_2_2_3_reg_677 <= input_registers_2_2_V_reg_689;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_reg_1966 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln58_6_reg_2072 <= select_ln58_6_fu_1394_p3;
            end if;
        end if;
    end process;
    or_ln109_reg_2083(0) <= '1';
    or_ln109_reg_2083_pp0_iter2_reg(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln109_1_fu_1499_p2 <= std_logic_vector(unsigned(select_ln58_reg_2032) + unsigned(ap_const_lv7_5));
    add_ln109_2_fu_1509_p2 <= std_logic_vector(unsigned(select_ln58_reg_2032) + unsigned(ap_const_lv7_6));
    add_ln109_3_fu_1519_p2 <= std_logic_vector(unsigned(select_ln58_reg_2032) + unsigned(ap_const_lv7_7));
    add_ln109_4_fu_1529_p2 <= std_logic_vector(unsigned(select_ln58_reg_2032) + unsigned(ap_const_lv7_9));
    add_ln109_5_fu_1539_p2 <= std_logic_vector(unsigned(select_ln58_reg_2032) + unsigned(ap_const_lv7_A));
    add_ln109_6_fu_1549_p2 <= std_logic_vector(unsigned(select_ln58_reg_2032) + unsigned(ap_const_lv7_B));
    add_ln109_fu_1568_p2 <= std_logic_vector(unsigned(or_ln109_reg_2083_pp0_iter2_reg) + unsigned(ap_const_lv7_1));
    add_ln113_fu_1559_p2 <= std_logic_vector(unsigned(select_ln58_2_reg_2051) + unsigned(zext_ln182_fu_1443_p1));
    add_ln53_1_fu_1071_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(output_x_reg_589));
    add_ln53_fu_1051_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(indvar_flatten124_reg_578));
    add_ln55_1_fu_1175_p2 <= std_logic_vector(unsigned(indvar_flatten50_reg_600) + unsigned(ap_const_lv6_1));
    add_ln58_1_fu_1161_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_622) + unsigned(ap_const_lv4_1));
    add_ln58_fu_1294_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(select_ln55_1_fu_1247_p3));
    add_ln61_fu_1431_p2 <= std_logic_vector(unsigned(select_ln58_1_fu_1324_p3) + unsigned(ap_const_lv2_1));
    add_ln66_fu_1446_p2 <= std_logic_vector(unsigned(zext_ln182_fu_1443_p1) + unsigned(select_ln58_2_reg_2051));
    add_ln69_1_fu_1437_p2 <= std_logic_vector(unsigned(select_ln58_fu_1306_p3) + unsigned(ap_const_lv7_C));
    add_ln69_fu_1300_p2 <= std_logic_vector(unsigned(ap_const_lv7_24) + unsigned(select_ln55_fu_1240_p3));
    and_ln53_1_fu_1109_p2 <= (xor_ln53_fu_1097_p2 and icmp_ln58_fu_1103_p2);
    and_ln53_fu_1235_p2 <= (xor_ln53_reg_1983 and icmp_ln61_fu_1229_p2);
    and_ln55_fu_1288_p2 <= (or_ln55_3_fu_1283_p2 and and_ln53_fu_1235_p2);
    and_ln74_1_fu_1494_p2 <= (xor_ln74_1_fu_1488_p2 and select_ln58_3_reg_2057);
    and_ln74_fu_1425_p2 <= (xor_ln74_fu_1419_p2 and select_ln58_3_fu_1364_p3);
    and_ln75_fu_1583_p2 <= (select_ln58_3_reg_2057_pp0_iter3_reg and cmp45_reg_2078_pp0_iter3_reg);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state9 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(weight_stream_V_empty_n, pe_weight_stream_V_full_n, pe_input_stream_V_V_full_n, pe_input_stream_1_V_V_full_n, pe_input_stream_2_V_V_full_n, pe_input_stream_3_V_V_full_n, pe_input_stream_4_V_V_full_n, pe_input_stream_5_V_V_full_n, pe_input_stream_6_V_V_full_n, pe_input_stream_7_V_V_full_n, pe_input_stream_8_V_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, icmp_ln53_reg_1966_pp0_iter5_reg, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, icmp_ln53_reg_1966_pp0_iter4_reg, ap_predicate_op144_read_state4, inner_fifos_1_0_V_V_empty_n, select_ln58_3_reg_2057_pp0_iter3_reg, inner_fifos_1_1_V_V_empty_n, ap_predicate_op713_read_state6, inner_fifos_1_2_V_V_empty_n, ap_predicate_op722_read_state6, inner_fifos_1_0_V_V_full_n, select_ln58_4_reg_2063_pp0_iter3_reg, inner_fifos_1_1_V_V_full_n, inner_fifos_1_2_V_V_full_n, inner_fifos_0_0_V_V_empty_n, select_ln58_3_reg_2057_pp0_iter4_reg, inner_fifos_0_1_V_V_empty_n, ap_predicate_op756_read_state7, inner_fifos_0_2_V_V_empty_n, ap_predicate_op763_read_state7, inner_fifos_0_0_V_V_full_n, select_ln58_4_reg_2063_pp0_iter4_reg, inner_fifos_0_1_V_V_full_n, inner_fifos_0_2_V_V_full_n)
    begin
                ap_block_pp0_stage0_01001 <= (((weight_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op144_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((pe_input_stream_4_V_V_full_n = ap_const_logic_0) or ((pe_input_stream_7_V_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter4_reg = ap_const_lv1_0)) or ((inner_fifos_0_2_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1)) or ((inner_fifos_0_1_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1)) or ((select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1) and (inner_fifos_0_0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op763_read_state7 = ap_const_boolean_1) and (inner_fifos_0_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op756_read_state7 = ap_const_boolean_1) and (inner_fifos_0_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_0) and (inner_fifos_0_0_V_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((pe_input_stream_8_V_V_full_n = ap_const_logic_0) or (pe_input_stream_5_V_V_full_n = ap_const_logic_0) or (pe_input_stream_2_V_V_full_n = ap_const_logic_0) or (pe_input_stream_1_V_V_full_n = ap_const_logic_0) or ((inner_fifos_1_2_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1)) or ((inner_fifos_1_1_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1)) or ((select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1) and (inner_fifos_1_0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op722_read_state6 = ap_const_boolean_1) and (inner_fifos_1_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op713_read_state6 = ap_const_boolean_1) and (inner_fifos_1_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_0) and (inner_fifos_1_0_V_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((pe_input_stream_3_V_V_full_n = ap_const_logic_0) or (pe_input_stream_V_V_full_n = ap_const_logic_0) or ((pe_weight_stream_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0)) or ((pe_input_stream_6_V_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(weight_stream_V_empty_n, pe_weight_stream_V_full_n, pe_input_stream_V_V_full_n, pe_input_stream_1_V_V_full_n, pe_input_stream_2_V_V_full_n, pe_input_stream_3_V_V_full_n, pe_input_stream_4_V_V_full_n, pe_input_stream_5_V_V_full_n, pe_input_stream_6_V_V_full_n, pe_input_stream_7_V_V_full_n, pe_input_stream_8_V_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, icmp_ln53_reg_1966_pp0_iter5_reg, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, icmp_ln53_reg_1966_pp0_iter4_reg, ap_predicate_op144_read_state4, inner_fifos_1_0_V_V_empty_n, select_ln58_3_reg_2057_pp0_iter3_reg, inner_fifos_1_1_V_V_empty_n, ap_predicate_op713_read_state6, inner_fifos_1_2_V_V_empty_n, ap_predicate_op722_read_state6, inner_fifos_1_0_V_V_full_n, select_ln58_4_reg_2063_pp0_iter3_reg, inner_fifos_1_1_V_V_full_n, inner_fifos_1_2_V_V_full_n, inner_fifos_0_0_V_V_empty_n, select_ln58_3_reg_2057_pp0_iter4_reg, inner_fifos_0_1_V_V_empty_n, ap_predicate_op756_read_state7, inner_fifos_0_2_V_V_empty_n, ap_predicate_op763_read_state7, inner_fifos_0_0_V_V_full_n, select_ln58_4_reg_2063_pp0_iter4_reg, inner_fifos_0_1_V_V_full_n, inner_fifos_0_2_V_V_full_n)
    begin
                ap_block_pp0_stage0_11001 <= (((weight_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op144_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((pe_input_stream_4_V_V_full_n = ap_const_logic_0) or ((pe_input_stream_7_V_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter4_reg = ap_const_lv1_0)) or ((inner_fifos_0_2_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1)) or ((inner_fifos_0_1_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1)) or ((select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1) and (inner_fifos_0_0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op763_read_state7 = ap_const_boolean_1) and (inner_fifos_0_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op756_read_state7 = ap_const_boolean_1) and (inner_fifos_0_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_0) and (inner_fifos_0_0_V_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((pe_input_stream_8_V_V_full_n = ap_const_logic_0) or (pe_input_stream_5_V_V_full_n = ap_const_logic_0) or (pe_input_stream_2_V_V_full_n = ap_const_logic_0) or (pe_input_stream_1_V_V_full_n = ap_const_logic_0) or ((inner_fifos_1_2_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1)) or ((inner_fifos_1_1_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1)) or ((select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1) and (inner_fifos_1_0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op722_read_state6 = ap_const_boolean_1) and (inner_fifos_1_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op713_read_state6 = ap_const_boolean_1) and (inner_fifos_1_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_0) and (inner_fifos_1_0_V_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((pe_input_stream_3_V_V_full_n = ap_const_logic_0) or (pe_input_stream_V_V_full_n = ap_const_logic_0) or ((pe_weight_stream_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0)) or ((pe_input_stream_6_V_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(weight_stream_V_empty_n, pe_weight_stream_V_full_n, pe_input_stream_V_V_full_n, pe_input_stream_1_V_V_full_n, pe_input_stream_2_V_V_full_n, pe_input_stream_3_V_V_full_n, pe_input_stream_4_V_V_full_n, pe_input_stream_5_V_V_full_n, pe_input_stream_6_V_V_full_n, pe_input_stream_7_V_V_full_n, pe_input_stream_8_V_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, icmp_ln53_reg_1966_pp0_iter5_reg, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, icmp_ln53_reg_1966_pp0_iter4_reg, ap_predicate_op144_read_state4, inner_fifos_1_0_V_V_empty_n, select_ln58_3_reg_2057_pp0_iter3_reg, inner_fifos_1_1_V_V_empty_n, ap_predicate_op713_read_state6, inner_fifos_1_2_V_V_empty_n, ap_predicate_op722_read_state6, inner_fifos_1_0_V_V_full_n, select_ln58_4_reg_2063_pp0_iter3_reg, inner_fifos_1_1_V_V_full_n, inner_fifos_1_2_V_V_full_n, inner_fifos_0_0_V_V_empty_n, select_ln58_3_reg_2057_pp0_iter4_reg, inner_fifos_0_1_V_V_empty_n, ap_predicate_op756_read_state7, inner_fifos_0_2_V_V_empty_n, ap_predicate_op763_read_state7, inner_fifos_0_0_V_V_full_n, select_ln58_4_reg_2063_pp0_iter4_reg, inner_fifos_0_1_V_V_full_n, inner_fifos_0_2_V_V_full_n)
    begin
                ap_block_pp0_stage0_subdone <= (((weight_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op144_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((pe_input_stream_4_V_V_full_n = ap_const_logic_0) or ((pe_input_stream_7_V_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter4_reg = ap_const_lv1_0)) or ((inner_fifos_0_2_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1)) or ((inner_fifos_0_1_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1)) or ((select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1) and (inner_fifos_0_0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op763_read_state7 = ap_const_boolean_1) and (inner_fifos_0_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op756_read_state7 = ap_const_boolean_1) and (inner_fifos_0_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_0) and (inner_fifos_0_0_V_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((pe_input_stream_8_V_V_full_n = ap_const_logic_0) or (pe_input_stream_5_V_V_full_n = ap_const_logic_0) or (pe_input_stream_2_V_V_full_n = ap_const_logic_0) or (pe_input_stream_1_V_V_full_n = ap_const_logic_0) or ((inner_fifos_1_2_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1)) or ((inner_fifos_1_1_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1)) or ((select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1) and (inner_fifos_1_0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op722_read_state6 = ap_const_boolean_1) and (inner_fifos_1_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op713_read_state6 = ap_const_boolean_1) and (inner_fifos_1_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_0) and (inner_fifos_1_0_V_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((pe_input_stream_3_V_V_full_n = ap_const_logic_0) or (pe_input_stream_V_V_full_n = ap_const_logic_0) or ((pe_weight_stream_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0)) or ((pe_input_stream_6_V_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0)))));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(weight_stream_V_empty_n, ap_predicate_op144_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((weight_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op144_read_state4 = ap_const_boolean_1));
    end process;

        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter4_assign_proc : process(pe_input_stream_1_V_V_full_n, pe_input_stream_2_V_V_full_n, pe_input_stream_5_V_V_full_n, pe_input_stream_8_V_V_full_n, inner_fifos_1_0_V_V_empty_n, select_ln58_3_reg_2057_pp0_iter3_reg, inner_fifos_1_1_V_V_empty_n, ap_predicate_op713_read_state6, inner_fifos_1_2_V_V_empty_n, ap_predicate_op722_read_state6, inner_fifos_1_0_V_V_full_n, select_ln58_4_reg_2063_pp0_iter3_reg, inner_fifos_1_1_V_V_full_n, inner_fifos_1_2_V_V_full_n)
    begin
                ap_block_state6_pp0_stage0_iter4 <= ((pe_input_stream_8_V_V_full_n = ap_const_logic_0) or (pe_input_stream_5_V_V_full_n = ap_const_logic_0) or (pe_input_stream_2_V_V_full_n = ap_const_logic_0) or (pe_input_stream_1_V_V_full_n = ap_const_logic_0) or ((inner_fifos_1_2_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1)) or ((inner_fifos_1_1_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1)) or ((select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1) and (inner_fifos_1_0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op722_read_state6 = ap_const_boolean_1) and (inner_fifos_1_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op713_read_state6 = ap_const_boolean_1) and (inner_fifos_1_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_0) and (inner_fifos_1_0_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state7_pp0_stage0_iter5_assign_proc : process(pe_input_stream_4_V_V_full_n, pe_input_stream_7_V_V_full_n, icmp_ln53_reg_1966_pp0_iter4_reg, inner_fifos_0_0_V_V_empty_n, select_ln58_3_reg_2057_pp0_iter4_reg, inner_fifos_0_1_V_V_empty_n, ap_predicate_op756_read_state7, inner_fifos_0_2_V_V_empty_n, ap_predicate_op763_read_state7, inner_fifos_0_0_V_V_full_n, select_ln58_4_reg_2063_pp0_iter4_reg, inner_fifos_0_1_V_V_full_n, inner_fifos_0_2_V_V_full_n)
    begin
                ap_block_state7_pp0_stage0_iter5 <= ((pe_input_stream_4_V_V_full_n = ap_const_logic_0) or ((pe_input_stream_7_V_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter4_reg = ap_const_lv1_0)) or ((inner_fifos_0_2_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1)) or ((inner_fifos_0_1_V_V_full_n = ap_const_logic_0) and (select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1)) or ((select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1) and (inner_fifos_0_0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op763_read_state7 = ap_const_boolean_1) and (inner_fifos_0_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op756_read_state7 = ap_const_boolean_1) and (inner_fifos_0_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_0) and (inner_fifos_0_0_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state8_pp0_stage0_iter6_assign_proc : process(pe_weight_stream_V_full_n, pe_input_stream_V_V_full_n, pe_input_stream_3_V_V_full_n, pe_input_stream_6_V_V_full_n, icmp_ln53_reg_1966_pp0_iter5_reg)
    begin
                ap_block_state8_pp0_stage0_iter6 <= ((pe_input_stream_3_V_V_full_n = ap_const_logic_0) or (pe_input_stream_V_V_full_n = ap_const_logic_0) or ((pe_weight_stream_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0)) or ((pe_input_stream_6_V_V_full_n = ap_const_logic_0) and (icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0)));
    end process;


    ap_condition_540_assign_proc : process(index_table_q2, icmp_ln53_reg_1966_pp0_iter2_reg, cmp45_reg_2078_pp0_iter2_reg)
    begin
                ap_condition_540 <= ((index_table_q2 = ap_const_lv6_0) and (cmp45_reg_2078_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln53_reg_1966_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_553_assign_proc : process(index_table_q3, icmp_ln53_reg_1966_pp0_iter2_reg, cmp45_reg_2078_pp0_iter2_reg)
    begin
                ap_condition_553 <= ((index_table_q3 = ap_const_lv6_0) and (cmp45_reg_2078_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln53_reg_1966_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter3_state5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter3_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter3_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(icmp_ln53_fu_1045_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_fu_1045_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_input_registers_V_2_2_3_phi_fu_681_p4_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, input_registers_V_2_2_3_reg_677, input_registers_2_2_V_reg_689, icmp_ln53_reg_1966_pp0_iter3_reg)
    begin
        if (((icmp_ln53_reg_1966_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_input_registers_V_2_2_3_phi_fu_681_p4 <= input_registers_2_2_V_reg_689;
        else 
            ap_phi_mux_input_registers_V_2_2_3_phi_fu_681_p4 <= input_registers_V_2_2_3_reg_677;
        end if; 
    end process;


    ap_phi_mux_kernel_y_phi_fu_648_p4_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln53_reg_1966_pp0_iter1_reg, kernel_y_reg_644, select_ln58_6_reg_2072)
    begin
        if (((icmp_ln53_reg_1966_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_y_phi_fu_648_p4 <= select_ln58_6_reg_2072;
        else 
            ap_phi_mux_kernel_y_phi_fu_648_p4 <= kernel_y_reg_644;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_input_registers_2_1_V_reg_856 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter3_input_registers_2_2_V_reg_689 <= "XXXXXXXX";

    ap_predicate_op144_read_state4_assign_proc : process(icmp_ln53_reg_1966_pp0_iter1_reg, select_ln55_3_reg_2013_pp0_iter1_reg)
    begin
                ap_predicate_op144_read_state4 <= ((select_ln55_3_reg_2013_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln53_reg_1966_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op713_read_state6_assign_proc : process(select_ln58_3_reg_2057_pp0_iter3_reg, and_ln74_reg_2088_pp0_iter3_reg)
    begin
                ap_predicate_op713_read_state6 <= ((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter3_reg));
    end process;


    ap_predicate_op722_read_state6_assign_proc : process(select_ln58_3_reg_2057_pp0_iter3_reg, and_ln74_reg_2088_pp0_iter3_reg)
    begin
                ap_predicate_op722_read_state6 <= ((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter3_reg));
    end process;


    ap_predicate_op756_read_state7_assign_proc : process(select_ln58_3_reg_2057_pp0_iter4_reg, and_ln74_reg_2088_pp0_iter4_reg)
    begin
                ap_predicate_op756_read_state7 <= ((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter4_reg));
    end process;


    ap_predicate_op763_read_state7_assign_proc : process(select_ln58_3_reg_2057_pp0_iter4_reg, and_ln74_reg_2088_pp0_iter4_reg)
    begin
                ap_predicate_op763_read_state7 <= ((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln74_reg_2088_pp0_iter4_reg));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp38_fu_1207_p2 <= "1" when (ap_phi_mux_kernel_y_phi_fu_648_p4 = ap_const_lv2_0) else "0";
    cmp38_mid1_fu_1358_p2 <= "1" when (add_ln58_fu_1294_p2 = ap_const_lv2_0) else "0";
    cmp45_fu_1402_p2 <= "0" when (select_ln58_1_fu_1324_p3 = ap_const_lv2_0) else "1";
    empty_12_fu_1039_p2 <= (trunc_ln55_fu_1035_p1 or trunc_ln53_fu_1031_p1);
    empty_13_fu_1201_p2 <= std_logic_vector(unsigned(p_shl_fu_1193_p3) - unsigned(zext_ln58_fu_1189_p1));
    icmp_ln53_fu_1045_p2 <= "1" when (indvar_flatten124_reg_578 = ap_const_lv6_24) else "0";
    icmp_ln55_fu_1057_p2 <= "1" when (indvar_flatten50_reg_600 = ap_const_lv6_12) else "0";
    icmp_ln58_fu_1103_p2 <= "1" when (indvar_flatten_reg_622 = ap_const_lv4_9) else "0";
    icmp_ln61_fu_1229_p2 <= "1" when (kernel_x_reg_666 = ap_const_lv2_3) else "0";
    icmp_ln73_1_fu_1472_p2 <= "1" when (or_ln73_fu_1468_p2 = ap_const_lv2_0) else "0";
    icmp_ln73_fu_1463_p2 <= "1" when (select_ln58_1_reg_2043 = ap_const_lv2_0) else "0";
    index_table_address0 <= zext_ln77_fu_1573_p1(7 - 1 downto 0);
    index_table_address1 <= zext_ln77_6_fu_1554_p1(7 - 1 downto 0);
    index_table_address2 <= zext_ln77_5_fu_1544_p1(7 - 1 downto 0);
    index_table_address3 <= zext_ln77_4_fu_1534_p1(7 - 1 downto 0);
    index_table_address4 <= zext_ln77_3_fu_1524_p1(7 - 1 downto 0);
    index_table_address5 <= zext_ln77_2_fu_1514_p1(7 - 1 downto 0);
    index_table_address6 <= zext_ln77_1_fu_1504_p1(7 - 1 downto 0);
    index_table_address7 <= zext_ln74_1_fu_1483_p1(7 - 1 downto 0);
    index_table_address8 <= zext_ln74_fu_1414_p1(7 - 1 downto 0);

    index_table_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            index_table_ce0 <= ap_const_logic_1;
        else 
            index_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    index_table_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            index_table_ce1 <= ap_const_logic_1;
        else 
            index_table_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    index_table_ce2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            index_table_ce2 <= ap_const_logic_1;
        else 
            index_table_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    index_table_ce3_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            index_table_ce3 <= ap_const_logic_1;
        else 
            index_table_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    index_table_ce4_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            index_table_ce4 <= ap_const_logic_1;
        else 
            index_table_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    index_table_ce5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            index_table_ce5 <= ap_const_logic_1;
        else 
            index_table_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    index_table_ce6_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            index_table_ce6 <= ap_const_logic_1;
        else 
            index_table_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    index_table_ce7_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            index_table_ce7 <= ap_const_logic_1;
        else 
            index_table_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    index_table_ce8_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            index_table_ce8 <= ap_const_logic_1;
        else 
            index_table_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_0_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter5, select_ln58_3_reg_2057_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((select_ln58_3_reg_2057_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_0_0_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_0_0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_0_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, select_ln58_4_reg_2063_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_0_0_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_0_0_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_1_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter5, ap_predicate_op756_read_state7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op756_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_0_1_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_0_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_1_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, select_ln58_4_reg_2063_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_0_1_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_0_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_2_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter5, ap_predicate_op763_read_state7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op763_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_0_2_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_0_2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_2_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, select_ln58_4_reg_2063_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((select_ln58_4_reg_2063_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_0_2_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_0_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    inner_fifos_1_0_V_V_din <= 
        ap_const_lv8_0 when (icmp_ln73_reg_2111_pp0_iter3_reg(0) = '1') else 
        input_registers_2_0_V_fu_234;

    inner_fifos_1_0_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter4, select_ln58_3_reg_2057_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((select_ln58_3_reg_2057_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_1_0_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_1_0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_1_0_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, select_ln58_4_reg_2063_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_1_0_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_1_0_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_1_1_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter4, ap_predicate_op713_read_state6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op713_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_1_1_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_1_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_1_1_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, select_ln58_4_reg_2063_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_1_1_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_1_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_1_2_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter4, ap_predicate_op722_read_state6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op722_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_1_2_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_1_2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_1_2_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, select_ln58_4_reg_2063_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((select_ln58_4_reg_2063_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            inner_fifos_1_2_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_1_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    input_registers_0_2_V_fu_266 <= ap_const_lv8_0;
    input_registers_1_2_V_fu_270 <= ap_const_lv8_0;
    input_registers_V_2_3_3_fu_262 <= ap_const_lv8_0;
    notrhs_fu_1213_p2 <= "0" when (ap_phi_mux_kernel_y_phi_fu_648_p4 = ap_const_lv2_2) else "1";
    notrhs_mid1_fu_1372_p2 <= "0" when (add_ln58_fu_1294_p2 = ap_const_lv2_2) else "1";
    or_ln109_1_fu_1478_p2 <= (select_ln58_reg_2032 or ap_const_lv7_3);
    or_ln109_fu_1408_p2 <= (select_ln58_fu_1306_p3 or ap_const_lv7_1);
    or_ln53_1_fu_1224_p2 <= (notrhs_fu_1213_p2 or icmp_ln55_reg_1975);
    or_ln53_fu_1219_p2 <= (icmp_ln55_reg_1975 or cmp38_fu_1207_p2);
    or_ln55_1_fu_1268_p2 <= (or_ln53_fu_1219_p2 or and_ln53_1_reg_1993);
    or_ln55_2_fu_1273_p2 <= (or_ln53_1_fu_1224_p2 or and_ln53_1_reg_1993);
    or_ln55_3_fu_1283_p2 <= (xor_ln55_fu_1278_p2 or icmp_ln55_reg_1975);
    or_ln55_fu_1129_p2 <= (icmp_ln55_fu_1057_p2 or and_ln53_1_fu_1109_p2);
    or_ln58_1_fu_1319_p2 <= (or_ln58_fu_1314_p2 or icmp_ln55_reg_1975);
    or_ln58_fu_1314_p2 <= (and_ln55_fu_1288_p2 or and_ln53_1_reg_1993);
    or_ln73_fu_1468_p2 <= (select_ln58_6_reg_2072 or select_ln58_1_reg_2043);
    or_ln78_fu_1587_p2 <= (icmp_ln73_1_reg_2116_pp0_iter3_reg or and_ln75_fu_1583_p2);
    output_y_2_fu_1123_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(select_ln53_fu_1063_p3));
    p_mid136_fu_1139_p2 <= (trunc_ln55_1_fu_1135_p1 or select_ln53_1_fu_1081_p3);
    p_mid1_fu_1344_p2 <= std_logic_vector(unsigned(p_shl_mid1_fu_1336_p3) - unsigned(zext_ln58_1_fu_1332_p1));
    p_shl_fu_1193_p3 <= (ap_phi_mux_kernel_y_phi_fu_648_p4 & ap_const_lv2_0);
    p_shl_mid1_fu_1336_p3 <= (add_ln58_fu_1294_p2 & ap_const_lv2_0);

    pe_input_stream_1_V_V_blk_n_assign_proc : process(pe_input_stream_1_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pe_input_stream_1_V_V_blk_n <= pe_input_stream_1_V_V_full_n;
        else 
            pe_input_stream_1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_1_V_V_din <= input_registers_1_0_V_1_fu_250;

    pe_input_stream_1_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pe_input_stream_1_V_V_write <= ap_const_logic_1;
        else 
            pe_input_stream_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_2_V_V_blk_n_assign_proc : process(pe_input_stream_2_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pe_input_stream_2_V_V_blk_n <= pe_input_stream_2_V_V_full_n;
        else 
            pe_input_stream_2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_2_V_V_din <= input_registers_V_2_0_3_fu_230;

    pe_input_stream_2_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pe_input_stream_2_V_V_write <= ap_const_logic_1;
        else 
            pe_input_stream_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_3_V_V_blk_n_assign_proc : process(pe_input_stream_3_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pe_input_stream_3_V_V_blk_n <= pe_input_stream_3_V_V_full_n;
        else 
            pe_input_stream_3_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_3_V_V_din <= input_registers_0_0_V_fu_242;

    pe_input_stream_3_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pe_input_stream_3_V_V_write <= ap_const_logic_1;
        else 
            pe_input_stream_3_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_4_V_V_blk_n_assign_proc : process(pe_input_stream_4_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pe_input_stream_4_V_V_blk_n <= pe_input_stream_4_V_V_full_n;
        else 
            pe_input_stream_4_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_4_V_V_din <= input_registers_1_0_V_fu_254;

    pe_input_stream_4_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pe_input_stream_4_V_V_write <= ap_const_logic_1;
        else 
            pe_input_stream_4_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_5_V_V_blk_n_assign_proc : process(pe_input_stream_5_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pe_input_stream_5_V_V_blk_n <= pe_input_stream_5_V_V_full_n;
        else 
            pe_input_stream_5_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_5_V_V_din <= input_registers_2_0_V_fu_234;

    pe_input_stream_5_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pe_input_stream_5_V_V_write <= ap_const_logic_1;
        else 
            pe_input_stream_5_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_6_V_V_blk_n_assign_proc : process(pe_input_stream_6_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, icmp_ln53_reg_1966_pp0_iter5_reg)
    begin
        if (((icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pe_input_stream_6_V_V_blk_n <= pe_input_stream_6_V_V_full_n;
        else 
            pe_input_stream_6_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_6_V_V_din <= input_registers_0_1_V_fu_246;

    pe_input_stream_6_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, icmp_ln53_reg_1966_pp0_iter5_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pe_input_stream_6_V_V_write <= ap_const_logic_1;
        else 
            pe_input_stream_6_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_7_V_V_blk_n_assign_proc : process(pe_input_stream_7_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, icmp_ln53_reg_1966_pp0_iter4_reg)
    begin
        if (((icmp_ln53_reg_1966_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pe_input_stream_7_V_V_blk_n <= pe_input_stream_7_V_V_full_n;
        else 
            pe_input_stream_7_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_7_V_V_din <= input_registers_1_1_V_fu_258;

    pe_input_stream_7_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln53_reg_1966_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln53_reg_1966_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pe_input_stream_7_V_V_write <= ap_const_logic_1;
        else 
            pe_input_stream_7_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_8_V_V_blk_n_assign_proc : process(pe_input_stream_8_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pe_input_stream_8_V_V_blk_n <= pe_input_stream_8_V_V_full_n;
        else 
            pe_input_stream_8_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_8_V_V_din <= input_registers_2_2_V_reg_689;

    pe_input_stream_8_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pe_input_stream_8_V_V_write <= ap_const_logic_1;
        else 
            pe_input_stream_8_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_V_V_blk_n_assign_proc : process(pe_input_stream_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pe_input_stream_V_V_blk_n <= pe_input_stream_V_V_full_n;
        else 
            pe_input_stream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_V_V_din <= input_registers_0_0_V_1_fu_238;

    pe_input_stream_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pe_input_stream_V_V_write <= ap_const_logic_1;
        else 
            pe_input_stream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_weight_stream_V_blk_n_assign_proc : process(pe_weight_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, icmp_ln53_reg_1966_pp0_iter5_reg)
    begin
        if (((icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pe_weight_stream_V_blk_n <= pe_weight_stream_V_full_n;
        else 
            pe_weight_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_weight_stream_V_din <= weight_registers_V_q1;

    pe_weight_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, icmp_ln53_reg_1966_pp0_iter5_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln53_reg_1966_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pe_weight_stream_V_write <= ap_const_logic_1;
        else 
            pe_weight_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln53_1_fu_1081_p3 <= 
        trunc_ln53_1_fu_1077_p1 when (icmp_ln55_fu_1057_p2(0) = '1') else 
        trunc_ln53_fu_1031_p1;
    select_ln53_2_fu_1089_p3 <= 
        trunc_ln53_1_fu_1077_p1 when (icmp_ln55_fu_1057_p2(0) = '1') else 
        empty_12_fu_1039_p2;
    select_ln53_3_fu_1115_p3 <= 
        add_ln53_1_fu_1071_p2 when (icmp_ln55_fu_1057_p2(0) = '1') else 
        output_x_reg_589;
    select_ln53_fu_1063_p3 <= 
        ap_const_lv2_0 when (icmp_ln55_fu_1057_p2(0) = '1') else 
        output_y_reg_611;
    select_ln55_1_fu_1247_p3 <= 
        ap_const_lv2_0 when (or_ln55_reg_2005(0) = '1') else 
        ap_phi_mux_kernel_y_phi_fu_648_p4;
    select_ln55_2_fu_1254_p3 <= 
        ap_const_lv7_0 when (or_ln55_reg_2005(0) = '1') else 
        table_index_1_reg_655;
    select_ln55_3_fu_1145_p3 <= 
        p_mid136_fu_1139_p2 when (and_ln53_1_fu_1109_p2(0) = '1') else 
        select_ln53_2_fu_1089_p3;
    select_ln55_4_fu_1261_p3 <= 
        ap_const_lv4_0 when (or_ln55_reg_2005(0) = '1') else 
        empty_13_fu_1201_p2;
    select_ln55_5_fu_1153_p3 <= 
        output_y_2_fu_1123_p2 when (and_ln53_1_fu_1109_p2(0) = '1') else 
        select_ln53_fu_1063_p3;
    select_ln55_6_fu_1181_p3 <= 
        ap_const_lv6_1 when (icmp_ln55_fu_1057_p2(0) = '1') else 
        add_ln55_1_fu_1175_p2;
    select_ln55_fu_1240_p3 <= 
        ap_const_lv7_0 when (or_ln55_reg_2005(0) = '1') else 
        table_index_reg_633;
    select_ln58_1_fu_1324_p3 <= 
        ap_const_lv2_0 when (or_ln58_1_fu_1319_p2(0) = '1') else 
        kernel_x_reg_666;
    select_ln58_2_fu_1350_p3 <= 
        p_mid1_fu_1344_p2 when (and_ln55_fu_1288_p2(0) = '1') else 
        select_ln55_4_fu_1261_p3;
    select_ln58_3_fu_1364_p3 <= 
        cmp38_mid1_fu_1358_p2 when (and_ln55_fu_1288_p2(0) = '1') else 
        or_ln55_1_fu_1268_p2;
    select_ln58_4_fu_1378_p3 <= 
        notrhs_mid1_fu_1372_p2 when (and_ln55_fu_1288_p2(0) = '1') else 
        or_ln55_2_fu_1273_p2;
    select_ln58_5_fu_1386_p3 <= 
        add_ln69_fu_1300_p2 when (and_ln55_fu_1288_p2(0) = '1') else 
        select_ln55_fu_1240_p3;
    select_ln58_6_fu_1394_p3 <= 
        add_ln58_fu_1294_p2 when (and_ln55_fu_1288_p2(0) = '1') else 
        select_ln55_1_fu_1247_p3;
    select_ln58_7_fu_1167_p3 <= 
        ap_const_lv4_1 when (or_ln55_fu_1129_p2(0) = '1') else 
        add_ln58_1_fu_1161_p2;
    select_ln58_fu_1306_p3 <= 
        add_ln69_fu_1300_p2 when (and_ln55_fu_1288_p2(0) = '1') else 
        select_ln55_2_fu_1254_p3;
    select_ln78_1_fu_1732_p3 <= 
        select_ln78_fu_1725_p3 when (or_ln78_reg_2209(0) = '1') else 
        input_registers_0_0_V_1_fu_238;
    select_ln78_2_fu_1606_p3 <= 
        ap_const_lv8_0 when (icmp_ln73_1_reg_2116_pp0_iter3_reg(0) = '1') else 
        input_registers_1_0_V_fu_254;
    select_ln78_3_fu_1613_p3 <= 
        select_ln78_2_fu_1606_p3 when (or_ln78_fu_1587_p2(0) = '1') else 
        input_registers_1_0_V_1_fu_250;
    select_ln78_4_fu_1701_p3 <= 
        ap_const_lv8_0 when (icmp_ln73_reg_2111_pp0_iter3_reg(0) = '1') else 
        input_registers_2_0_V_fu_234;
    select_ln78_fu_1725_p3 <= 
        ap_const_lv8_0 when (icmp_ln73_1_reg_2116_pp0_iter4_reg(0) = '1') else 
        input_registers_0_0_V_fu_242;
    select_ln82_1_fu_1777_p3 <= 
        input_registers_0_2_V_fu_266 when (and_ln75_reg_2203(0) = '1') else 
        input_registers_0_1_V_fu_246;
    select_ln82_2_fu_1637_p3 <= 
        input_registers_1_1_V_fu_258 when (and_ln75_fu_1583_p2(0) = '1') else 
        input_registers_1_0_V_fu_254;
    select_ln82_3_fu_1666_p3 <= 
        input_registers_1_2_V_fu_270 when (and_ln75_fu_1583_p2(0) = '1') else 
        input_registers_1_1_V_fu_258;
    select_ln82_fu_1752_p3 <= 
        input_registers_0_1_V_fu_246 when (and_ln75_reg_2203(0) = '1') else 
        input_registers_0_0_V_fu_242;
    tmp_fu_1456_p3 <= select_ln58_1_reg_2043(1 downto 1);
    trunc_ln53_1_fu_1077_p1 <= add_ln53_1_fu_1071_p2(1 - 1 downto 0);
    trunc_ln53_fu_1031_p1 <= output_x_reg_589(1 - 1 downto 0);
    trunc_ln55_1_fu_1135_p1 <= output_y_2_fu_1123_p2(1 - 1 downto 0);
    trunc_ln55_fu_1035_p1 <= output_y_reg_611(1 - 1 downto 0);
    weight_registers_V_address0 <= zext_ln66_fu_1451_p1(4 - 1 downto 0);
    weight_registers_V_address1 <= zext_ln113_fu_1824_p1(4 - 1 downto 0);

    weight_registers_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            weight_registers_V_ce0 <= ap_const_logic_1;
        else 
            weight_registers_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_registers_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weight_registers_V_ce1 <= ap_const_logic_1;
        else 
            weight_registers_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_registers_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln53_reg_1966_pp0_iter1_reg, select_ln55_3_reg_2013_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((select_ln55_3_reg_2013_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln53_reg_1966_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            weight_registers_V_we0 <= ap_const_logic_1;
        else 
            weight_registers_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_stream_V_blk_n_assign_proc : process(weight_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln53_reg_1966_pp0_iter1_reg, select_ln55_3_reg_2013_pp0_iter1_reg)
    begin
        if (((select_ln55_3_reg_2013_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln53_reg_1966_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            weight_stream_V_blk_n <= weight_stream_V_empty_n;
        else 
            weight_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    weight_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op144_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op144_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            weight_stream_V_read <= ap_const_logic_1;
        else 
            weight_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln53_fu_1097_p2 <= (icmp_ln55_fu_1057_p2 xor ap_const_lv1_1);
    xor_ln55_fu_1278_p2 <= (icmp_ln58_reg_1988 xor ap_const_lv1_1);
    xor_ln74_1_fu_1488_p2 <= (tmp_fu_1456_p3 xor ap_const_lv1_1);
    xor_ln74_fu_1419_p2 <= (cmp45_fu_1402_p2 xor ap_const_lv1_1);
    zext_ln113_fu_1824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln113_reg_2166_pp0_iter4_reg),64));
    zext_ln182_fu_1443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln58_1_reg_2043),4));
    zext_ln58_1_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_fu_1294_p2),4));
    zext_ln58_fu_1189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_kernel_y_phi_fu_648_p4),4));
    zext_ln66_fu_1451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_fu_1446_p2),64));
    zext_ln74_1_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln109_1_fu_1478_p2),64));
    zext_ln74_fu_1414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln109_fu_1408_p2),64));
    zext_ln77_1_fu_1504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_1_fu_1499_p2),64));
    zext_ln77_2_fu_1514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_2_fu_1509_p2),64));
    zext_ln77_3_fu_1524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_3_fu_1519_p2),64));
    zext_ln77_4_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_4_fu_1529_p2),64));
    zext_ln77_5_fu_1544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_5_fu_1539_p2),64));
    zext_ln77_6_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_6_fu_1549_p2),64));
    zext_ln77_fu_1573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_fu_1568_p2),64));
end behav;
