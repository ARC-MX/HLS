// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_pe (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weight_stream_V_dout,
        weight_stream_V_empty_n,
        weight_stream_V_read,
        pe_weight_stream_V_din,
        pe_weight_stream_V_full_n,
        pe_weight_stream_V_write,
        pe_input_stream_V_V_din,
        pe_input_stream_V_V_full_n,
        pe_input_stream_V_V_write,
        pe_input_stream_1_V_V_din,
        pe_input_stream_1_V_V_full_n,
        pe_input_stream_1_V_V_write,
        pe_input_stream_2_V_V_din,
        pe_input_stream_2_V_V_full_n,
        pe_input_stream_2_V_V_write,
        pe_input_stream_3_V_V_din,
        pe_input_stream_3_V_V_full_n,
        pe_input_stream_3_V_V_write,
        pe_input_stream_4_V_V_din,
        pe_input_stream_4_V_V_full_n,
        pe_input_stream_4_V_V_write,
        pe_input_stream_5_V_V_din,
        pe_input_stream_5_V_V_full_n,
        pe_input_stream_5_V_V_write,
        pe_input_stream_6_V_V_din,
        pe_input_stream_6_V_V_full_n,
        pe_input_stream_6_V_V_write,
        pe_input_stream_7_V_V_din,
        pe_input_stream_7_V_V_full_n,
        pe_input_stream_7_V_V_write,
        pe_input_stream_8_V_V_din,
        pe_input_stream_8_V_V_full_n,
        pe_input_stream_8_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] weight_stream_V_dout;
input   weight_stream_V_empty_n;
output   weight_stream_V_read;
output  [7:0] pe_weight_stream_V_din;
input   pe_weight_stream_V_full_n;
output   pe_weight_stream_V_write;
output  [7:0] pe_input_stream_V_V_din;
input   pe_input_stream_V_V_full_n;
output   pe_input_stream_V_V_write;
output  [7:0] pe_input_stream_1_V_V_din;
input   pe_input_stream_1_V_V_full_n;
output   pe_input_stream_1_V_V_write;
output  [7:0] pe_input_stream_2_V_V_din;
input   pe_input_stream_2_V_V_full_n;
output   pe_input_stream_2_V_V_write;
output  [7:0] pe_input_stream_3_V_V_din;
input   pe_input_stream_3_V_V_full_n;
output   pe_input_stream_3_V_V_write;
output  [7:0] pe_input_stream_4_V_V_din;
input   pe_input_stream_4_V_V_full_n;
output   pe_input_stream_4_V_V_write;
output  [7:0] pe_input_stream_5_V_V_din;
input   pe_input_stream_5_V_V_full_n;
output   pe_input_stream_5_V_V_write;
output  [7:0] pe_input_stream_6_V_V_din;
input   pe_input_stream_6_V_V_full_n;
output   pe_input_stream_6_V_V_write;
output  [7:0] pe_input_stream_7_V_V_din;
input   pe_input_stream_7_V_V_full_n;
output   pe_input_stream_7_V_V_write;
output  [7:0] pe_input_stream_8_V_V_din;
input   pe_input_stream_8_V_V_full_n;
output   pe_input_stream_8_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weight_stream_V_read;
reg pe_weight_stream_V_write;
reg pe_input_stream_V_V_write;
reg pe_input_stream_1_V_V_write;
reg pe_input_stream_2_V_V_write;
reg pe_input_stream_3_V_V_write;
reg pe_input_stream_4_V_V_write;
reg pe_input_stream_5_V_V_write;
reg pe_input_stream_6_V_V_write;
reg pe_input_stream_7_V_V_write;
reg pe_input_stream_8_V_V_write;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] index_table_address0;
reg    index_table_ce0;
wire   [5:0] index_table_q0;
wire   [6:0] index_table_address1;
reg    index_table_ce1;
wire   [5:0] index_table_q1;
wire   [6:0] index_table_address2;
reg    index_table_ce2;
wire   [5:0] index_table_q2;
wire   [6:0] index_table_address3;
reg    index_table_ce3;
wire   [5:0] index_table_q3;
wire   [6:0] index_table_address4;
reg    index_table_ce4;
wire   [5:0] index_table_q4;
wire   [6:0] index_table_address5;
reg    index_table_ce5;
wire   [5:0] index_table_q5;
wire   [6:0] index_table_address6;
reg    index_table_ce6;
wire   [5:0] index_table_q6;
wire   [6:0] index_table_address7;
reg    index_table_ce7;
wire   [5:0] index_table_q7;
wire   [6:0] index_table_address8;
reg    index_table_ce8;
wire   [5:0] index_table_q8;
reg    weight_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln53_reg_1966;
reg   [0:0] icmp_ln53_reg_1966_pp0_iter1_reg;
reg   [0:0] select_ln55_3_reg_2013;
reg   [0:0] select_ln55_3_reg_2013_pp0_iter1_reg;
reg    pe_weight_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter6;
reg   [0:0] icmp_ln53_reg_1966_pp0_iter5_reg;
reg    pe_input_stream_V_V_blk_n;
reg    pe_input_stream_1_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg    pe_input_stream_2_V_V_blk_n;
reg    pe_input_stream_3_V_V_blk_n;
reg    pe_input_stream_4_V_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg    pe_input_stream_5_V_V_blk_n;
reg    pe_input_stream_6_V_V_blk_n;
reg    pe_input_stream_7_V_V_blk_n;
reg   [0:0] icmp_ln53_reg_1966_pp0_iter4_reg;
reg    pe_input_stream_8_V_V_blk_n;
reg   [5:0] indvar_flatten124_reg_578;
reg   [1:0] output_x_reg_589;
reg   [5:0] indvar_flatten50_reg_600;
reg   [1:0] output_y_reg_611;
reg   [3:0] indvar_flatten_reg_622;
reg   [6:0] table_index_reg_633;
reg   [1:0] kernel_y_reg_644;
reg   [6:0] table_index_1_reg_655;
reg   [1:0] kernel_x_reg_666;
reg   [7:0] input_registers_V_2_2_3_reg_677;
reg   [7:0] input_registers_2_2_V_reg_689;
wire   [0:0] icmp_ln53_fu_1045_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_predicate_op144_read_state4;
reg    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire   [7:0] inner_fifos_1_0_V_V_dout;
wire    inner_fifos_1_0_V_V_empty_n;
reg    inner_fifos_1_0_V_V_read;
reg   [0:0] select_ln58_3_reg_2057;
reg   [0:0] select_ln58_3_reg_2057_pp0_iter3_reg;
wire   [7:0] inner_fifos_1_1_V_V_dout;
wire    inner_fifos_1_1_V_V_empty_n;
reg    inner_fifos_1_1_V_V_read;
reg   [0:0] and_ln74_reg_2088;
reg   [0:0] and_ln74_reg_2088_pp0_iter3_reg;
reg    ap_predicate_op713_read_state6;
wire   [7:0] inner_fifos_1_2_V_V_dout;
wire    inner_fifos_1_2_V_V_empty_n;
reg    inner_fifos_1_2_V_V_read;
reg    ap_predicate_op722_read_state6;
wire   [7:0] inner_fifos_1_0_V_V_din;
wire    inner_fifos_1_0_V_V_full_n;
reg    inner_fifos_1_0_V_V_write;
reg   [0:0] select_ln58_4_reg_2063;
reg   [0:0] select_ln58_4_reg_2063_pp0_iter3_reg;
wire    inner_fifos_1_1_V_V_full_n;
reg    inner_fifos_1_1_V_V_write;
wire    inner_fifos_1_2_V_V_full_n;
reg    inner_fifos_1_2_V_V_write;
reg    ap_block_state6_pp0_stage0_iter4;
wire   [7:0] inner_fifos_0_0_V_V_dout;
wire    inner_fifos_0_0_V_V_empty_n;
reg    inner_fifos_0_0_V_V_read;
reg   [0:0] select_ln58_3_reg_2057_pp0_iter4_reg;
wire   [7:0] inner_fifos_0_1_V_V_dout;
wire    inner_fifos_0_1_V_V_empty_n;
reg    inner_fifos_0_1_V_V_read;
reg   [0:0] and_ln74_reg_2088_pp0_iter4_reg;
reg    ap_predicate_op756_read_state7;
wire   [7:0] inner_fifos_0_2_V_V_dout;
wire    inner_fifos_0_2_V_V_empty_n;
reg    inner_fifos_0_2_V_V_read;
reg    ap_predicate_op763_read_state7;
wire    inner_fifos_0_0_V_V_full_n;
reg    inner_fifos_0_0_V_V_write;
reg   [0:0] select_ln58_4_reg_2063_pp0_iter4_reg;
wire    inner_fifos_0_1_V_V_full_n;
reg    inner_fifos_0_1_V_V_write;
wire    inner_fifos_0_2_V_V_full_n;
reg    inner_fifos_0_2_V_V_write;
reg    ap_block_state7_pp0_stage0_iter5;
reg    ap_block_state8_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln53_reg_1966_pp0_iter2_reg;
reg   [0:0] icmp_ln53_reg_1966_pp0_iter3_reg;
wire   [5:0] add_ln53_fu_1051_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln55_fu_1057_p2;
reg   [0:0] icmp_ln55_reg_1975;
wire   [0:0] xor_ln53_fu_1097_p2;
reg   [0:0] xor_ln53_reg_1983;
wire   [0:0] icmp_ln58_fu_1103_p2;
reg   [0:0] icmp_ln58_reg_1988;
wire   [0:0] and_ln53_1_fu_1109_p2;
reg   [0:0] and_ln53_1_reg_1993;
wire   [1:0] select_ln53_3_fu_1115_p3;
wire   [0:0] or_ln55_fu_1129_p2;
reg   [0:0] or_ln55_reg_2005;
wire   [0:0] select_ln55_3_fu_1145_p3;
wire   [1:0] select_ln55_5_fu_1153_p3;
wire   [3:0] select_ln58_7_fu_1167_p3;
wire   [5:0] select_ln55_6_fu_1181_p3;
wire   [6:0] select_ln58_fu_1306_p3;
reg   [6:0] select_ln58_reg_2032;
wire   [1:0] select_ln58_1_fu_1324_p3;
reg   [1:0] select_ln58_1_reg_2043;
wire   [3:0] select_ln58_2_fu_1350_p3;
reg   [3:0] select_ln58_2_reg_2051;
wire   [0:0] select_ln58_3_fu_1364_p3;
reg   [0:0] select_ln58_3_reg_2057_pp0_iter2_reg;
wire   [0:0] select_ln58_4_fu_1378_p3;
reg   [0:0] select_ln58_4_reg_2063_pp0_iter2_reg;
wire   [6:0] select_ln58_5_fu_1386_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [1:0] select_ln58_6_fu_1394_p3;
reg   [1:0] select_ln58_6_reg_2072;
wire   [0:0] cmp45_fu_1402_p2;
reg   [0:0] cmp45_reg_2078;
reg   [0:0] cmp45_reg_2078_pp0_iter2_reg;
reg   [0:0] cmp45_reg_2078_pp0_iter3_reg;
wire   [6:0] or_ln109_fu_1408_p2;
reg   [6:0] or_ln109_reg_2083;
reg   [6:0] or_ln109_reg_2083_pp0_iter2_reg;
wire   [0:0] and_ln74_fu_1425_p2;
reg   [0:0] and_ln74_reg_2088_pp0_iter2_reg;
wire   [1:0] add_ln61_fu_1431_p2;
wire   [6:0] add_ln69_1_fu_1437_p2;
wire   [0:0] tmp_fu_1456_p3;
reg   [0:0] tmp_reg_2107;
wire   [0:0] icmp_ln73_fu_1463_p2;
reg   [0:0] icmp_ln73_reg_2111;
reg   [0:0] icmp_ln73_reg_2111_pp0_iter3_reg;
wire   [0:0] icmp_ln73_1_fu_1472_p2;
reg   [0:0] icmp_ln73_1_reg_2116;
reg   [0:0] icmp_ln73_1_reg_2116_pp0_iter3_reg;
reg   [0:0] icmp_ln73_1_reg_2116_pp0_iter4_reg;
reg   [5:0] index_table_load_reg_2123;
reg   [5:0] index_table_load_reg_2123_pp0_iter3_reg;
reg   [5:0] index_table_load_reg_2123_pp0_iter4_reg;
wire   [0:0] and_ln74_1_fu_1494_p2;
reg   [0:0] and_ln74_1_reg_2127;
reg   [0:0] and_ln74_1_reg_2127_pp0_iter3_reg;
reg   [0:0] and_ln74_1_reg_2127_pp0_iter4_reg;
wire   [3:0] add_ln113_fu_1559_p2;
reg   [3:0] add_ln113_reg_2166;
reg   [3:0] add_ln113_reg_2166_pp0_iter3_reg;
reg   [3:0] add_ln113_reg_2166_pp0_iter4_reg;
reg   [5:0] index_table_load_2_reg_2176;
reg    ap_enable_reg_pp0_iter3;
reg   [5:0] index_table_load_2_reg_2176_pp0_iter4_reg;
reg   [5:0] index_table_load_3_reg_2180;
reg   [5:0] index_table_load_4_reg_2184;
reg   [5:0] index_table_load_5_reg_2188;
wire   [0:0] and_ln75_fu_1583_p2;
reg   [0:0] and_ln75_reg_2203;
wire   [0:0] or_ln78_fu_1587_p2;
reg   [0:0] or_ln78_reg_2209;
reg   [5:0] index_table_load_1_reg_2214;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter3_state5;
wire   [3:0] weight_registers_V_address0;
reg    weight_registers_V_ce0;
reg    weight_registers_V_we0;
wire   [3:0] weight_registers_V_address1;
reg    weight_registers_V_ce1;
wire   [7:0] weight_registers_V_q1;
reg   [1:0] ap_phi_mux_kernel_y_phi_fu_648_p4;
reg   [7:0] ap_phi_mux_input_registers_V_2_2_3_phi_fu_681_p4;
wire   [7:0] ap_phi_reg_pp0_iter3_input_registers_2_2_V_reg_689;
wire   [7:0] ap_phi_reg_pp0_iter0_input_registers_2_1_V_reg_856;
reg   [7:0] ap_phi_reg_pp0_iter1_input_registers_2_1_V_reg_856;
reg   [7:0] ap_phi_reg_pp0_iter2_input_registers_2_1_V_reg_856;
reg   [7:0] ap_phi_reg_pp0_iter3_input_registers_2_1_V_reg_856;
reg   [7:0] ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856;
wire   [63:0] zext_ln74_fu_1414_p1;
wire   [63:0] zext_ln66_fu_1451_p1;
wire   [63:0] zext_ln74_1_fu_1483_p1;
wire   [63:0] zext_ln77_1_fu_1504_p1;
wire   [63:0] zext_ln77_2_fu_1514_p1;
wire   [63:0] zext_ln77_3_fu_1524_p1;
wire   [63:0] zext_ln77_4_fu_1534_p1;
wire   [63:0] zext_ln77_5_fu_1544_p1;
wire   [63:0] zext_ln77_6_fu_1554_p1;
wire   [63:0] zext_ln77_fu_1573_p1;
wire   [63:0] zext_ln113_fu_1824_p1;
reg   [7:0] input_registers_V_2_0_3_fu_230;
wire   [7:0] select_ln78_4_fu_1701_p3;
reg   [7:0] input_registers_2_0_V_fu_234;
reg   [7:0] input_registers_0_0_V_1_fu_238;
wire   [7:0] select_ln78_1_fu_1732_p3;
reg   [7:0] input_registers_0_0_V_fu_242;
wire   [7:0] select_ln82_fu_1752_p3;
reg   [7:0] input_registers_0_1_V_fu_246;
wire   [7:0] select_ln82_1_fu_1777_p3;
reg   [7:0] input_registers_1_0_V_1_fu_250;
wire   [7:0] select_ln78_3_fu_1613_p3;
reg   [7:0] input_registers_1_0_V_fu_254;
wire   [7:0] select_ln82_2_fu_1637_p3;
reg   [7:0] input_registers_1_1_V_fu_258;
wire   [7:0] select_ln82_3_fu_1666_p3;
wire   [7:0] input_registers_V_2_3_3_fu_262;
wire   [7:0] input_registers_0_2_V_fu_266;
wire   [7:0] input_registers_1_2_V_fu_270;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] trunc_ln55_fu_1035_p1;
wire   [0:0] trunc_ln53_fu_1031_p1;
wire   [1:0] add_ln53_1_fu_1071_p2;
wire   [0:0] trunc_ln53_1_fu_1077_p1;
wire   [0:0] empty_12_fu_1039_p2;
wire   [1:0] select_ln53_fu_1063_p3;
wire   [1:0] output_y_2_fu_1123_p2;
wire   [0:0] trunc_ln55_1_fu_1135_p1;
wire   [0:0] select_ln53_1_fu_1081_p3;
wire   [0:0] p_mid136_fu_1139_p2;
wire   [0:0] select_ln53_2_fu_1089_p3;
wire   [3:0] add_ln58_1_fu_1161_p2;
wire   [5:0] add_ln55_1_fu_1175_p2;
wire   [3:0] p_shl_fu_1193_p3;
wire   [3:0] zext_ln58_fu_1189_p1;
wire   [0:0] cmp38_fu_1207_p2;
wire   [0:0] notrhs_fu_1213_p2;
wire   [0:0] icmp_ln61_fu_1229_p2;
wire   [3:0] empty_13_fu_1201_p2;
wire   [0:0] or_ln53_fu_1219_p2;
wire   [0:0] or_ln53_1_fu_1224_p2;
wire   [0:0] xor_ln55_fu_1278_p2;
wire   [0:0] and_ln53_fu_1235_p2;
wire   [0:0] or_ln55_3_fu_1283_p2;
wire   [1:0] select_ln55_1_fu_1247_p3;
wire   [6:0] select_ln55_fu_1240_p3;
wire   [0:0] and_ln55_fu_1288_p2;
wire   [6:0] add_ln69_fu_1300_p2;
wire   [6:0] select_ln55_2_fu_1254_p3;
wire   [0:0] or_ln58_fu_1314_p2;
wire   [0:0] or_ln58_1_fu_1319_p2;
wire   [1:0] add_ln58_fu_1294_p2;
wire   [3:0] p_shl_mid1_fu_1336_p3;
wire   [3:0] zext_ln58_1_fu_1332_p1;
wire   [3:0] p_mid1_fu_1344_p2;
wire   [3:0] select_ln55_4_fu_1261_p3;
wire   [0:0] cmp38_mid1_fu_1358_p2;
wire   [0:0] or_ln55_1_fu_1268_p2;
wire   [0:0] notrhs_mid1_fu_1372_p2;
wire   [0:0] or_ln55_2_fu_1273_p2;
wire   [0:0] xor_ln74_fu_1419_p2;
wire   [3:0] zext_ln182_fu_1443_p1;
wire   [3:0] add_ln66_fu_1446_p2;
wire   [1:0] or_ln73_fu_1468_p2;
wire   [6:0] or_ln109_1_fu_1478_p2;
wire   [0:0] xor_ln74_1_fu_1488_p2;
wire   [6:0] add_ln109_1_fu_1499_p2;
wire   [6:0] add_ln109_2_fu_1509_p2;
wire   [6:0] add_ln109_3_fu_1519_p2;
wire   [6:0] add_ln109_4_fu_1529_p2;
wire   [6:0] add_ln109_5_fu_1539_p2;
wire   [6:0] add_ln109_6_fu_1549_p2;
wire   [6:0] add_ln109_fu_1568_p2;
wire   [7:0] select_ln78_2_fu_1606_p3;
wire   [7:0] select_ln78_fu_1725_p3;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_553;
reg    ap_condition_540;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

top_pe_index_table #(
    .DataWidth( 6 ),
    .AddressRange( 108 ),
    .AddressWidth( 7 ))
index_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(index_table_address0),
    .ce0(index_table_ce0),
    .q0(index_table_q0),
    .address1(index_table_address1),
    .ce1(index_table_ce1),
    .q1(index_table_q1),
    .address2(index_table_address2),
    .ce2(index_table_ce2),
    .q2(index_table_q2),
    .address3(index_table_address3),
    .ce3(index_table_ce3),
    .q3(index_table_q3),
    .address4(index_table_address4),
    .ce4(index_table_ce4),
    .q4(index_table_q4),
    .address5(index_table_address5),
    .ce5(index_table_ce5),
    .q5(index_table_q5),
    .address6(index_table_address6),
    .ce6(index_table_ce6),
    .q6(index_table_q6),
    .address7(index_table_address7),
    .ce7(index_table_ce7),
    .q7(index_table_q7),
    .address8(index_table_address8),
    .ce8(index_table_ce8),
    .q8(index_table_q8)
);

top_pe_weight_registers_V #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_registers_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_registers_V_address0),
    .ce0(weight_registers_V_ce0),
    .we0(weight_registers_V_we0),
    .d0(weight_stream_V_dout),
    .address1(weight_registers_V_address1),
    .ce1(weight_registers_V_ce1),
    .q1(weight_registers_V_q1)
);

top_fifo_w8_d6_S inner_fifos_0_0_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(input_registers_1_0_V_1_fu_250),
    .if_full_n(inner_fifos_0_0_V_V_full_n),
    .if_write(inner_fifos_0_0_V_V_write),
    .if_dout(inner_fifos_0_0_V_V_dout),
    .if_empty_n(inner_fifos_0_0_V_V_empty_n),
    .if_read(inner_fifos_0_0_V_V_read)
);

top_fifo_w8_d6_S inner_fifos_0_1_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(input_registers_1_0_V_fu_254),
    .if_full_n(inner_fifos_0_1_V_V_full_n),
    .if_write(inner_fifos_0_1_V_V_write),
    .if_dout(inner_fifos_0_1_V_V_dout),
    .if_empty_n(inner_fifos_0_1_V_V_empty_n),
    .if_read(inner_fifos_0_1_V_V_read)
);

top_fifo_w8_d6_S inner_fifos_0_2_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(input_registers_1_1_V_fu_258),
    .if_full_n(inner_fifos_0_2_V_V_full_n),
    .if_write(inner_fifos_0_2_V_V_write),
    .if_dout(inner_fifos_0_2_V_V_dout),
    .if_empty_n(inner_fifos_0_2_V_V_empty_n),
    .if_read(inner_fifos_0_2_V_V_read)
);

top_fifo_w8_d6_S inner_fifos_1_0_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(inner_fifos_1_0_V_V_din),
    .if_full_n(inner_fifos_1_0_V_V_full_n),
    .if_write(inner_fifos_1_0_V_V_write),
    .if_dout(inner_fifos_1_0_V_V_dout),
    .if_empty_n(inner_fifos_1_0_V_V_empty_n),
    .if_read(inner_fifos_1_0_V_V_read)
);

top_fifo_w8_d6_S inner_fifos_1_1_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856),
    .if_full_n(inner_fifos_1_1_V_V_full_n),
    .if_write(inner_fifos_1_1_V_V_write),
    .if_dout(inner_fifos_1_1_V_V_dout),
    .if_empty_n(inner_fifos_1_1_V_V_empty_n),
    .if_read(inner_fifos_1_1_V_V_read)
);

top_fifo_w8_d6_S inner_fifos_1_2_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(input_registers_2_2_V_reg_689),
    .if_full_n(inner_fifos_1_2_V_V_full_n),
    .if_write(inner_fifos_1_2_V_V_write),
    .if_dout(inner_fifos_1_2_V_V_dout),
    .if_empty_n(inner_fifos_1_2_V_V_empty_n),
    .if_read(inner_fifos_1_2_V_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter3_state5)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((cmp45_reg_2078_pp0_iter2_reg == 1'd1) & (icmp_ln53_reg_1966_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856 <= ap_phi_mux_input_registers_V_2_2_3_phi_fu_681_p4;
        end else if ((1'b1 == ap_condition_553)) begin
            ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856 <= ap_phi_reg_pp0_iter3_input_registers_2_1_V_reg_856;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_1045_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten124_reg_578 <= add_ln53_fu_1051_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten124_reg_578 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_1045_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten50_reg_600 <= select_ln55_6_fu_1181_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten50_reg_600 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_1045_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_622 <= select_ln58_7_fu_1167_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_622 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_registers_0_0_V_1_fu_238 <= select_ln78_1_fu_1732_p3;
    end else if (((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_registers_0_0_V_1_fu_238 <= inner_fifos_0_0_V_V_dout;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        input_registers_0_0_V_1_fu_238 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((index_table_load_reg_2123_pp0_iter4_reg == 6'd0) & (1'd1 == and_ln74_reg_2088_pp0_iter4_reg))) begin
            input_registers_0_0_V_fu_242 <= 8'd0;
        end else if (((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd1) & (1'd0 == and_ln74_reg_2088_pp0_iter4_reg))) begin
            input_registers_0_0_V_fu_242 <= select_ln82_fu_1752_p3;
        end else if (((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd0) & (1'd0 == and_ln74_reg_2088_pp0_iter4_reg))) begin
            input_registers_0_0_V_fu_242 <= inner_fifos_0_1_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((index_table_load_1_reg_2214 == 6'd0) & (1'd1 == and_ln74_reg_2088_pp0_iter4_reg))) begin
            input_registers_0_1_V_fu_246 <= 8'd0;
        end else if (((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd1) & (1'd0 == and_ln74_reg_2088_pp0_iter4_reg))) begin
            input_registers_0_1_V_fu_246 <= select_ln82_1_fu_1777_p3;
        end else if (((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd0) & (1'd0 == and_ln74_reg_2088_pp0_iter4_reg))) begin
            input_registers_0_1_V_fu_246 <= inner_fifos_0_2_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd1)) begin
            input_registers_1_0_V_1_fu_250 <= select_ln78_3_fu_1613_p3;
        end else if ((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd0)) begin
            input_registers_1_0_V_1_fu_250 <= inner_fifos_1_0_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((index_table_load_3_reg_2180 == 6'd0) & (1'd1 == and_ln74_reg_2088_pp0_iter3_reg))) begin
            input_registers_1_0_V_fu_254 <= 8'd0;
        end else if (((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd1) & (1'd0 == and_ln74_reg_2088_pp0_iter3_reg))) begin
            input_registers_1_0_V_fu_254 <= select_ln82_2_fu_1637_p3;
        end else if (((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln74_reg_2088_pp0_iter3_reg))) begin
            input_registers_1_0_V_fu_254 <= inner_fifos_1_1_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((index_table_load_4_reg_2184 == 6'd0) & (1'd1 == and_ln74_reg_2088_pp0_iter3_reg))) begin
            input_registers_1_1_V_fu_258 <= 8'd0;
        end else if (((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd1) & (1'd0 == and_ln74_reg_2088_pp0_iter3_reg))) begin
            input_registers_1_1_V_fu_258 <= select_ln82_3_fu_1666_p3;
        end else if (((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln74_reg_2088_pp0_iter3_reg))) begin
            input_registers_1_1_V_fu_258 <= inner_fifos_1_2_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((cmp45_reg_2078_pp0_iter2_reg == 1'd1) & (icmp_ln53_reg_1966_pp0_iter2_reg == 1'd0))) begin
            input_registers_2_2_V_reg_689 <= input_registers_V_2_3_3_fu_262;
        end else if ((1'b1 == ap_condition_540)) begin
            input_registers_2_2_V_reg_689 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            input_registers_2_2_V_reg_689 <= ap_phi_reg_pp0_iter3_input_registers_2_2_V_reg_689;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_reg_1966 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_x_reg_666 <= add_ln61_fu_1431_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_x_reg_666 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_reg_1966_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_y_reg_644 <= select_ln58_6_reg_2072;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_y_reg_644 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_1045_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_x_reg_589 <= select_ln53_3_fu_1115_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_x_reg_589 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_1045_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_y_reg_611 <= select_ln55_5_fu_1153_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_y_reg_611 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_reg_1966 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        table_index_1_reg_655 <= add_ln69_1_fu_1437_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        table_index_1_reg_655 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_reg_1966 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        table_index_reg_633 <= select_ln58_5_fu_1386_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        table_index_reg_633 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_reg_1966_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln113_reg_2166 <= add_ln113_fu_1559_p2;
        and_ln74_1_reg_2127 <= and_ln74_1_fu_1494_p2;
        icmp_ln73_1_reg_2116 <= icmp_ln73_1_fu_1472_p2;
        icmp_ln73_reg_2111 <= icmp_ln73_fu_1463_p2;
        tmp_reg_2107 <= select_ln58_1_reg_2043[32'd1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln113_reg_2166_pp0_iter3_reg <= add_ln113_reg_2166;
        add_ln113_reg_2166_pp0_iter4_reg <= add_ln113_reg_2166_pp0_iter3_reg;
        and_ln74_1_reg_2127_pp0_iter3_reg <= and_ln74_1_reg_2127;
        and_ln74_1_reg_2127_pp0_iter4_reg <= and_ln74_1_reg_2127_pp0_iter3_reg;
        and_ln74_reg_2088_pp0_iter2_reg <= and_ln74_reg_2088;
        and_ln74_reg_2088_pp0_iter3_reg <= and_ln74_reg_2088_pp0_iter2_reg;
        and_ln74_reg_2088_pp0_iter4_reg <= and_ln74_reg_2088_pp0_iter3_reg;
        and_ln75_reg_2203 <= and_ln75_fu_1583_p2;
        cmp45_reg_2078_pp0_iter2_reg <= cmp45_reg_2078;
        cmp45_reg_2078_pp0_iter3_reg <= cmp45_reg_2078_pp0_iter2_reg;
        icmp_ln53_reg_1966_pp0_iter2_reg <= icmp_ln53_reg_1966_pp0_iter1_reg;
        icmp_ln53_reg_1966_pp0_iter3_reg <= icmp_ln53_reg_1966_pp0_iter2_reg;
        icmp_ln53_reg_1966_pp0_iter4_reg <= icmp_ln53_reg_1966_pp0_iter3_reg;
        icmp_ln53_reg_1966_pp0_iter5_reg <= icmp_ln53_reg_1966_pp0_iter4_reg;
        icmp_ln73_1_reg_2116_pp0_iter3_reg <= icmp_ln73_1_reg_2116;
        icmp_ln73_1_reg_2116_pp0_iter4_reg <= icmp_ln73_1_reg_2116_pp0_iter3_reg;
        icmp_ln73_reg_2111_pp0_iter3_reg <= icmp_ln73_reg_2111;
        index_table_load_2_reg_2176_pp0_iter4_reg <= index_table_load_2_reg_2176;
        index_table_load_reg_2123_pp0_iter3_reg <= index_table_load_reg_2123;
        index_table_load_reg_2123_pp0_iter4_reg <= index_table_load_reg_2123_pp0_iter3_reg;
        or_ln109_reg_2083_pp0_iter2_reg[6 : 1] <= or_ln109_reg_2083[6 : 1];
        or_ln78_reg_2209 <= or_ln78_fu_1587_p2;
        select_ln58_3_reg_2057_pp0_iter2_reg <= select_ln58_3_reg_2057;
        select_ln58_3_reg_2057_pp0_iter3_reg <= select_ln58_3_reg_2057_pp0_iter2_reg;
        select_ln58_3_reg_2057_pp0_iter4_reg <= select_ln58_3_reg_2057_pp0_iter3_reg;
        select_ln58_4_reg_2063_pp0_iter2_reg <= select_ln58_4_reg_2063;
        select_ln58_4_reg_2063_pp0_iter3_reg <= select_ln58_4_reg_2063_pp0_iter2_reg;
        select_ln58_4_reg_2063_pp0_iter4_reg <= select_ln58_4_reg_2063_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_1045_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln53_1_reg_1993 <= and_ln53_1_fu_1109_p2;
        icmp_ln55_reg_1975 <= icmp_ln55_fu_1057_p2;
        icmp_ln58_reg_1988 <= icmp_ln58_fu_1103_p2;
        or_ln55_reg_2005 <= or_ln55_fu_1129_p2;
        select_ln55_3_reg_2013 <= select_ln55_3_fu_1145_p3;
        xor_ln53_reg_1983 <= xor_ln53_fu_1097_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_reg_1966 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln74_reg_2088 <= and_ln74_fu_1425_p2;
        cmp45_reg_2078 <= cmp45_fu_1402_p2;
        or_ln109_reg_2083[6 : 1] <= or_ln109_fu_1408_p2[6 : 1];
        select_ln58_1_reg_2043 <= select_ln58_1_fu_1324_p3;
        select_ln58_2_reg_2051 <= select_ln58_2_fu_1350_p3;
        select_ln58_3_reg_2057 <= select_ln58_3_fu_1364_p3;
        select_ln58_4_reg_2063 <= select_ln58_4_fu_1378_p3;
        select_ln58_reg_2032 <= select_ln58_fu_1306_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_input_registers_2_1_V_reg_856 <= ap_phi_reg_pp0_iter0_input_registers_2_1_V_reg_856;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_input_registers_2_1_V_reg_856 <= ap_phi_reg_pp0_iter1_input_registers_2_1_V_reg_856;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_input_registers_2_1_V_reg_856 <= ap_phi_reg_pp0_iter2_input_registers_2_1_V_reg_856;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln53_reg_1966 <= icmp_ln53_fu_1045_p2;
        icmp_ln53_reg_1966_pp0_iter1_reg <= icmp_ln53_reg_1966;
        select_ln55_3_reg_2013_pp0_iter1_reg <= select_ln55_3_reg_2013;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        index_table_load_1_reg_2214 <= index_table_q0;
        input_registers_2_0_V_fu_234 <= ap_phi_reg_pp0_iter4_input_registers_2_1_V_reg_856;
        input_registers_V_2_0_3_fu_230 <= select_ln78_4_fu_1701_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln53_reg_1966_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        index_table_load_2_reg_2176 <= index_table_q7;
        index_table_load_3_reg_2180 <= index_table_q6;
        index_table_load_4_reg_2184 <= index_table_q5;
        index_table_load_5_reg_2188 <= index_table_q4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_reg_1966_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        index_table_load_reg_2123 <= index_table_q8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_reg_1966_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_registers_V_2_2_3_reg_677 <= input_registers_2_2_V_reg_689;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_reg_1966 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln58_6_reg_2072 <= select_ln58_6_fu_1394_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_condition_pp0_exit_iter3_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter3_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_1045_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln53_reg_1966_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_input_registers_V_2_2_3_phi_fu_681_p4 = input_registers_2_2_V_reg_689;
    end else begin
        ap_phi_mux_input_registers_V_2_2_3_phi_fu_681_p4 = input_registers_V_2_2_3_reg_677;
    end
end

always @ (*) begin
    if (((icmp_ln53_reg_1966_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_y_phi_fu_648_p4 = select_ln58_6_reg_2072;
    end else begin
        ap_phi_mux_kernel_y_phi_fu_648_p4 = kernel_y_reg_644;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        index_table_ce0 = 1'b1;
    end else begin
        index_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        index_table_ce1 = 1'b1;
    end else begin
        index_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        index_table_ce2 = 1'b1;
    end else begin
        index_table_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        index_table_ce3 = 1'b1;
    end else begin
        index_table_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        index_table_ce4 = 1'b1;
    end else begin
        index_table_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        index_table_ce5 = 1'b1;
    end else begin
        index_table_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        index_table_ce6 = 1'b1;
    end else begin
        index_table_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        index_table_ce7 = 1'b1;
    end else begin
        index_table_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        index_table_ce8 = 1'b1;
    end else begin
        index_table_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_0_0_V_V_read = 1'b1;
    end else begin
        inner_fifos_0_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_0_0_V_V_write = 1'b1;
    end else begin
        inner_fifos_0_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op756_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_0_1_V_V_read = 1'b1;
    end else begin
        inner_fifos_0_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_0_1_V_V_write = 1'b1;
    end else begin
        inner_fifos_0_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op763_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_0_2_V_V_read = 1'b1;
    end else begin
        inner_fifos_0_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_0_2_V_V_write = 1'b1;
    end else begin
        inner_fifos_0_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_1_0_V_V_read = 1'b1;
    end else begin
        inner_fifos_1_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_1_0_V_V_write = 1'b1;
    end else begin
        inner_fifos_1_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op713_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_1_1_V_V_read = 1'b1;
    end else begin
        inner_fifos_1_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_1_1_V_V_write = 1'b1;
    end else begin
        inner_fifos_1_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op722_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_1_2_V_V_read = 1'b1;
    end else begin
        inner_fifos_1_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inner_fifos_1_2_V_V_write = 1'b1;
    end else begin
        inner_fifos_1_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pe_input_stream_1_V_V_blk_n = pe_input_stream_1_V_V_full_n;
    end else begin
        pe_input_stream_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_input_stream_1_V_V_write = 1'b1;
    end else begin
        pe_input_stream_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pe_input_stream_2_V_V_blk_n = pe_input_stream_2_V_V_full_n;
    end else begin
        pe_input_stream_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_input_stream_2_V_V_write = 1'b1;
    end else begin
        pe_input_stream_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pe_input_stream_3_V_V_blk_n = pe_input_stream_3_V_V_full_n;
    end else begin
        pe_input_stream_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_input_stream_3_V_V_write = 1'b1;
    end else begin
        pe_input_stream_3_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pe_input_stream_4_V_V_blk_n = pe_input_stream_4_V_V_full_n;
    end else begin
        pe_input_stream_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_input_stream_4_V_V_write = 1'b1;
    end else begin
        pe_input_stream_4_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pe_input_stream_5_V_V_blk_n = pe_input_stream_5_V_V_full_n;
    end else begin
        pe_input_stream_5_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_input_stream_5_V_V_write = 1'b1;
    end else begin
        pe_input_stream_5_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pe_input_stream_6_V_V_blk_n = pe_input_stream_6_V_V_full_n;
    end else begin
        pe_input_stream_6_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_input_stream_6_V_V_write = 1'b1;
    end else begin
        pe_input_stream_6_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln53_reg_1966_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pe_input_stream_7_V_V_blk_n = pe_input_stream_7_V_V_full_n;
    end else begin
        pe_input_stream_7_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln53_reg_1966_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_input_stream_7_V_V_write = 1'b1;
    end else begin
        pe_input_stream_7_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pe_input_stream_8_V_V_blk_n = pe_input_stream_8_V_V_full_n;
    end else begin
        pe_input_stream_8_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_input_stream_8_V_V_write = 1'b1;
    end else begin
        pe_input_stream_8_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pe_input_stream_V_V_blk_n = pe_input_stream_V_V_full_n;
    end else begin
        pe_input_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_input_stream_V_V_write = 1'b1;
    end else begin
        pe_input_stream_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pe_weight_stream_V_blk_n = pe_weight_stream_V_full_n;
    end else begin
        pe_weight_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pe_weight_stream_V_write = 1'b1;
    end else begin
        pe_weight_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weight_registers_V_ce0 = 1'b1;
    end else begin
        weight_registers_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_registers_V_ce1 = 1'b1;
    end else begin
        weight_registers_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln55_3_reg_2013_pp0_iter1_reg == 1'd0) & (icmp_ln53_reg_1966_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weight_registers_V_we0 = 1'b1;
    end else begin
        weight_registers_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln55_3_reg_2013_pp0_iter1_reg == 1'd0) & (icmp_ln53_reg_1966_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weight_stream_V_blk_n = weight_stream_V_empty_n;
    end else begin
        weight_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op144_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weight_stream_V_read = 1'b1;
    end else begin
        weight_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_1_fu_1499_p2 = (select_ln58_reg_2032 + 7'd5);

assign add_ln109_2_fu_1509_p2 = (select_ln58_reg_2032 + 7'd6);

assign add_ln109_3_fu_1519_p2 = (select_ln58_reg_2032 + 7'd7);

assign add_ln109_4_fu_1529_p2 = (select_ln58_reg_2032 + 7'd9);

assign add_ln109_5_fu_1539_p2 = (select_ln58_reg_2032 + 7'd10);

assign add_ln109_6_fu_1549_p2 = (select_ln58_reg_2032 + 7'd11);

assign add_ln109_fu_1568_p2 = (or_ln109_reg_2083_pp0_iter2_reg + 7'd1);

assign add_ln113_fu_1559_p2 = (select_ln58_2_reg_2051 + zext_ln182_fu_1443_p1);

assign add_ln53_1_fu_1071_p2 = (2'd1 + output_x_reg_589);

assign add_ln53_fu_1051_p2 = (6'd1 + indvar_flatten124_reg_578);

assign add_ln55_1_fu_1175_p2 = (indvar_flatten50_reg_600 + 6'd1);

assign add_ln58_1_fu_1161_p2 = (indvar_flatten_reg_622 + 4'd1);

assign add_ln58_fu_1294_p2 = (2'd1 + select_ln55_1_fu_1247_p3);

assign add_ln61_fu_1431_p2 = (select_ln58_1_fu_1324_p3 + 2'd1);

assign add_ln66_fu_1446_p2 = (zext_ln182_fu_1443_p1 + select_ln58_2_reg_2051);

assign add_ln69_1_fu_1437_p2 = (select_ln58_fu_1306_p3 + 7'd12);

assign add_ln69_fu_1300_p2 = (7'd36 + select_ln55_fu_1240_p3);

assign and_ln53_1_fu_1109_p2 = (xor_ln53_fu_1097_p2 & icmp_ln58_fu_1103_p2);

assign and_ln53_fu_1235_p2 = (xor_ln53_reg_1983 & icmp_ln61_fu_1229_p2);

assign and_ln55_fu_1288_p2 = (or_ln55_3_fu_1283_p2 & and_ln53_fu_1235_p2);

assign and_ln74_1_fu_1494_p2 = (xor_ln74_1_fu_1488_p2 & select_ln58_3_reg_2057);

assign and_ln74_fu_1425_p2 = (xor_ln74_fu_1419_p2 & select_ln58_3_fu_1364_p3);

assign and_ln75_fu_1583_p2 = (select_ln58_3_reg_2057_pp0_iter3_reg & cmp45_reg_2078_pp0_iter3_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((weight_stream_V_empty_n == 1'b0) & (ap_predicate_op144_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((pe_input_stream_4_V_V_full_n == 1'b0) | ((pe_input_stream_7_V_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter4_reg == 1'd0)) | ((inner_fifos_0_2_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1)) | ((inner_fifos_0_1_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1)) | ((select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1) & (inner_fifos_0_0_V_V_full_n == 1'b0)) | ((ap_predicate_op763_read_state7 == 1'b1) & (inner_fifos_0_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op756_read_state7 == 1'b1) & (inner_fifos_0_1_V_V_empty_n == 1'b0)) | ((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd0) & (inner_fifos_0_0_V_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((pe_input_stream_8_V_V_full_n == 1'b0) | (pe_input_stream_5_V_V_full_n == 1'b0) | (pe_input_stream_2_V_V_full_n == 1'b0) | (pe_input_stream_1_V_V_full_n == 1'b0) | ((inner_fifos_1_2_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1)) | ((inner_fifos_1_1_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1)) | ((select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1) & (inner_fifos_1_0_V_V_full_n == 1'b0)) | ((ap_predicate_op722_read_state6 == 1'b1) & (inner_fifos_1_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op713_read_state6 == 1'b1) & (inner_fifos_1_1_V_V_empty_n == 1'b0)) | ((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd0) & (inner_fifos_1_0_V_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter6 == 1'b1) & ((pe_input_stream_3_V_V_full_n == 1'b0) | (pe_input_stream_V_V_full_n == 1'b0) | ((pe_weight_stream_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0)) | ((pe_input_stream_6_V_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((weight_stream_V_empty_n == 1'b0) & (ap_predicate_op144_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((pe_input_stream_4_V_V_full_n == 1'b0) | ((pe_input_stream_7_V_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter4_reg == 1'd0)) | ((inner_fifos_0_2_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1)) | ((inner_fifos_0_1_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1)) | ((select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1) & (inner_fifos_0_0_V_V_full_n == 1'b0)) | ((ap_predicate_op763_read_state7 == 1'b1) & (inner_fifos_0_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op756_read_state7 == 1'b1) & (inner_fifos_0_1_V_V_empty_n == 1'b0)) | ((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd0) & (inner_fifos_0_0_V_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((pe_input_stream_8_V_V_full_n == 1'b0) | (pe_input_stream_5_V_V_full_n == 1'b0) | (pe_input_stream_2_V_V_full_n == 1'b0) | (pe_input_stream_1_V_V_full_n == 1'b0) | ((inner_fifos_1_2_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1)) | ((inner_fifos_1_1_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1)) | ((select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1) & (inner_fifos_1_0_V_V_full_n == 1'b0)) | ((ap_predicate_op722_read_state6 == 1'b1) & (inner_fifos_1_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op713_read_state6 == 1'b1) & (inner_fifos_1_1_V_V_empty_n == 1'b0)) | ((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd0) & (inner_fifos_1_0_V_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter6 == 1'b1) & ((pe_input_stream_3_V_V_full_n == 1'b0) | (pe_input_stream_V_V_full_n == 1'b0) | ((pe_weight_stream_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0)) | ((pe_input_stream_6_V_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((weight_stream_V_empty_n == 1'b0) & (ap_predicate_op144_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((pe_input_stream_4_V_V_full_n == 1'b0) | ((pe_input_stream_7_V_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter4_reg == 1'd0)) | ((inner_fifos_0_2_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1)) | ((inner_fifos_0_1_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1)) | ((select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1) & (inner_fifos_0_0_V_V_full_n == 1'b0)) | ((ap_predicate_op763_read_state7 == 1'b1) & (inner_fifos_0_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op756_read_state7 == 1'b1) & (inner_fifos_0_1_V_V_empty_n == 1'b0)) | ((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd0) & (inner_fifos_0_0_V_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((pe_input_stream_8_V_V_full_n == 1'b0) | (pe_input_stream_5_V_V_full_n == 1'b0) | (pe_input_stream_2_V_V_full_n == 1'b0) | (pe_input_stream_1_V_V_full_n == 1'b0) | ((inner_fifos_1_2_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1)) | ((inner_fifos_1_1_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1)) | ((select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1) & (inner_fifos_1_0_V_V_full_n == 1'b0)) | ((ap_predicate_op722_read_state6 == 1'b1) & (inner_fifos_1_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op713_read_state6 == 1'b1) & (inner_fifos_1_1_V_V_empty_n == 1'b0)) | ((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd0) & (inner_fifos_1_0_V_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter6 == 1'b1) & ((pe_input_stream_3_V_V_full_n == 1'b0) | (pe_input_stream_V_V_full_n == 1'b0) | ((pe_weight_stream_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0)) | ((pe_input_stream_6_V_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0)))));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((weight_stream_V_empty_n == 1'b0) & (ap_predicate_op144_read_state4 == 1'b1));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((pe_input_stream_8_V_V_full_n == 1'b0) | (pe_input_stream_5_V_V_full_n == 1'b0) | (pe_input_stream_2_V_V_full_n == 1'b0) | (pe_input_stream_1_V_V_full_n == 1'b0) | ((inner_fifos_1_2_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1)) | ((inner_fifos_1_1_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1)) | ((select_ln58_4_reg_2063_pp0_iter3_reg == 1'd1) & (inner_fifos_1_0_V_V_full_n == 1'b0)) | ((ap_predicate_op722_read_state6 == 1'b1) & (inner_fifos_1_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op713_read_state6 == 1'b1) & (inner_fifos_1_1_V_V_empty_n == 1'b0)) | ((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd0) & (inner_fifos_1_0_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter5 = ((pe_input_stream_4_V_V_full_n == 1'b0) | ((pe_input_stream_7_V_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter4_reg == 1'd0)) | ((inner_fifos_0_2_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1)) | ((inner_fifos_0_1_V_V_full_n == 1'b0) & (select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1)) | ((select_ln58_4_reg_2063_pp0_iter4_reg == 1'd1) & (inner_fifos_0_0_V_V_full_n == 1'b0)) | ((ap_predicate_op763_read_state7 == 1'b1) & (inner_fifos_0_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op756_read_state7 == 1'b1) & (inner_fifos_0_1_V_V_empty_n == 1'b0)) | ((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd0) & (inner_fifos_0_0_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state8_pp0_stage0_iter6 = ((pe_input_stream_3_V_V_full_n == 1'b0) | (pe_input_stream_V_V_full_n == 1'b0) | ((pe_weight_stream_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0)) | ((pe_input_stream_6_V_V_full_n == 1'b0) & (icmp_ln53_reg_1966_pp0_iter5_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_540 = ((index_table_q2 == 6'd0) & (cmp45_reg_2078_pp0_iter2_reg == 1'd0) & (icmp_ln53_reg_1966_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_condition_553 = ((index_table_q3 == 6'd0) & (cmp45_reg_2078_pp0_iter2_reg == 1'd0) & (icmp_ln53_reg_1966_pp0_iter2_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_input_registers_2_1_V_reg_856 = 'bx;

assign ap_phi_reg_pp0_iter3_input_registers_2_2_V_reg_689 = 'bx;

always @ (*) begin
    ap_predicate_op144_read_state4 = ((select_ln55_3_reg_2013_pp0_iter1_reg == 1'd0) & (icmp_ln53_reg_1966_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op713_read_state6 = ((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln74_reg_2088_pp0_iter3_reg));
end

always @ (*) begin
    ap_predicate_op722_read_state6 = ((select_ln58_3_reg_2057_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln74_reg_2088_pp0_iter3_reg));
end

always @ (*) begin
    ap_predicate_op756_read_state7 = ((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd0) & (1'd0 == and_ln74_reg_2088_pp0_iter4_reg));
end

always @ (*) begin
    ap_predicate_op763_read_state7 = ((select_ln58_3_reg_2057_pp0_iter4_reg == 1'd0) & (1'd0 == and_ln74_reg_2088_pp0_iter4_reg));
end

assign cmp38_fu_1207_p2 = ((ap_phi_mux_kernel_y_phi_fu_648_p4 == 2'd0) ? 1'b1 : 1'b0);

assign cmp38_mid1_fu_1358_p2 = ((add_ln58_fu_1294_p2 == 2'd0) ? 1'b1 : 1'b0);

assign cmp45_fu_1402_p2 = ((select_ln58_1_fu_1324_p3 != 2'd0) ? 1'b1 : 1'b0);

assign empty_12_fu_1039_p2 = (trunc_ln55_fu_1035_p1 | trunc_ln53_fu_1031_p1);

assign empty_13_fu_1201_p2 = (p_shl_fu_1193_p3 - zext_ln58_fu_1189_p1);

assign icmp_ln53_fu_1045_p2 = ((indvar_flatten124_reg_578 == 6'd36) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_1057_p2 = ((indvar_flatten50_reg_600 == 6'd18) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1103_p2 = ((indvar_flatten_reg_622 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_1229_p2 = ((kernel_x_reg_666 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln73_1_fu_1472_p2 = ((or_ln73_fu_1468_p2 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_1463_p2 = ((select_ln58_1_reg_2043 == 2'd0) ? 1'b1 : 1'b0);

assign index_table_address0 = zext_ln77_fu_1573_p1;

assign index_table_address1 = zext_ln77_6_fu_1554_p1;

assign index_table_address2 = zext_ln77_5_fu_1544_p1;

assign index_table_address3 = zext_ln77_4_fu_1534_p1;

assign index_table_address4 = zext_ln77_3_fu_1524_p1;

assign index_table_address5 = zext_ln77_2_fu_1514_p1;

assign index_table_address6 = zext_ln77_1_fu_1504_p1;

assign index_table_address7 = zext_ln74_1_fu_1483_p1;

assign index_table_address8 = zext_ln74_fu_1414_p1;

assign inner_fifos_1_0_V_V_din = ((icmp_ln73_reg_2111_pp0_iter3_reg[0:0] === 1'b1) ? 8'd0 : input_registers_2_0_V_fu_234);

assign input_registers_0_2_V_fu_266 = 8'd0;

assign input_registers_1_2_V_fu_270 = 8'd0;

assign input_registers_V_2_3_3_fu_262 = 8'd0;

assign notrhs_fu_1213_p2 = ((ap_phi_mux_kernel_y_phi_fu_648_p4 != 2'd2) ? 1'b1 : 1'b0);

assign notrhs_mid1_fu_1372_p2 = ((add_ln58_fu_1294_p2 != 2'd2) ? 1'b1 : 1'b0);

assign or_ln109_1_fu_1478_p2 = (select_ln58_reg_2032 | 7'd3);

assign or_ln109_fu_1408_p2 = (select_ln58_fu_1306_p3 | 7'd1);

assign or_ln53_1_fu_1224_p2 = (notrhs_fu_1213_p2 | icmp_ln55_reg_1975);

assign or_ln53_fu_1219_p2 = (icmp_ln55_reg_1975 | cmp38_fu_1207_p2);

assign or_ln55_1_fu_1268_p2 = (or_ln53_fu_1219_p2 | and_ln53_1_reg_1993);

assign or_ln55_2_fu_1273_p2 = (or_ln53_1_fu_1224_p2 | and_ln53_1_reg_1993);

assign or_ln55_3_fu_1283_p2 = (xor_ln55_fu_1278_p2 | icmp_ln55_reg_1975);

assign or_ln55_fu_1129_p2 = (icmp_ln55_fu_1057_p2 | and_ln53_1_fu_1109_p2);

assign or_ln58_1_fu_1319_p2 = (or_ln58_fu_1314_p2 | icmp_ln55_reg_1975);

assign or_ln58_fu_1314_p2 = (and_ln55_fu_1288_p2 | and_ln53_1_reg_1993);

assign or_ln73_fu_1468_p2 = (select_ln58_6_reg_2072 | select_ln58_1_reg_2043);

assign or_ln78_fu_1587_p2 = (icmp_ln73_1_reg_2116_pp0_iter3_reg | and_ln75_fu_1583_p2);

assign output_y_2_fu_1123_p2 = (2'd1 + select_ln53_fu_1063_p3);

assign p_mid136_fu_1139_p2 = (trunc_ln55_1_fu_1135_p1 | select_ln53_1_fu_1081_p3);

assign p_mid1_fu_1344_p2 = (p_shl_mid1_fu_1336_p3 - zext_ln58_1_fu_1332_p1);

assign p_shl_fu_1193_p3 = {{ap_phi_mux_kernel_y_phi_fu_648_p4}, {2'd0}};

assign p_shl_mid1_fu_1336_p3 = {{add_ln58_fu_1294_p2}, {2'd0}};

assign pe_input_stream_1_V_V_din = input_registers_1_0_V_1_fu_250;

assign pe_input_stream_2_V_V_din = input_registers_V_2_0_3_fu_230;

assign pe_input_stream_3_V_V_din = input_registers_0_0_V_fu_242;

assign pe_input_stream_4_V_V_din = input_registers_1_0_V_fu_254;

assign pe_input_stream_5_V_V_din = input_registers_2_0_V_fu_234;

assign pe_input_stream_6_V_V_din = input_registers_0_1_V_fu_246;

assign pe_input_stream_7_V_V_din = input_registers_1_1_V_fu_258;

assign pe_input_stream_8_V_V_din = input_registers_2_2_V_reg_689;

assign pe_input_stream_V_V_din = input_registers_0_0_V_1_fu_238;

assign pe_weight_stream_V_din = weight_registers_V_q1;

assign select_ln53_1_fu_1081_p3 = ((icmp_ln55_fu_1057_p2[0:0] === 1'b1) ? trunc_ln53_1_fu_1077_p1 : trunc_ln53_fu_1031_p1);

assign select_ln53_2_fu_1089_p3 = ((icmp_ln55_fu_1057_p2[0:0] === 1'b1) ? trunc_ln53_1_fu_1077_p1 : empty_12_fu_1039_p2);

assign select_ln53_3_fu_1115_p3 = ((icmp_ln55_fu_1057_p2[0:0] === 1'b1) ? add_ln53_1_fu_1071_p2 : output_x_reg_589);

assign select_ln53_fu_1063_p3 = ((icmp_ln55_fu_1057_p2[0:0] === 1'b1) ? 2'd0 : output_y_reg_611);

assign select_ln55_1_fu_1247_p3 = ((or_ln55_reg_2005[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_kernel_y_phi_fu_648_p4);

assign select_ln55_2_fu_1254_p3 = ((or_ln55_reg_2005[0:0] === 1'b1) ? 7'd0 : table_index_1_reg_655);

assign select_ln55_3_fu_1145_p3 = ((and_ln53_1_fu_1109_p2[0:0] === 1'b1) ? p_mid136_fu_1139_p2 : select_ln53_2_fu_1089_p3);

assign select_ln55_4_fu_1261_p3 = ((or_ln55_reg_2005[0:0] === 1'b1) ? 4'd0 : empty_13_fu_1201_p2);

assign select_ln55_5_fu_1153_p3 = ((and_ln53_1_fu_1109_p2[0:0] === 1'b1) ? output_y_2_fu_1123_p2 : select_ln53_fu_1063_p3);

assign select_ln55_6_fu_1181_p3 = ((icmp_ln55_fu_1057_p2[0:0] === 1'b1) ? 6'd1 : add_ln55_1_fu_1175_p2);

assign select_ln55_fu_1240_p3 = ((or_ln55_reg_2005[0:0] === 1'b1) ? 7'd0 : table_index_reg_633);

assign select_ln58_1_fu_1324_p3 = ((or_ln58_1_fu_1319_p2[0:0] === 1'b1) ? 2'd0 : kernel_x_reg_666);

assign select_ln58_2_fu_1350_p3 = ((and_ln55_fu_1288_p2[0:0] === 1'b1) ? p_mid1_fu_1344_p2 : select_ln55_4_fu_1261_p3);

assign select_ln58_3_fu_1364_p3 = ((and_ln55_fu_1288_p2[0:0] === 1'b1) ? cmp38_mid1_fu_1358_p2 : or_ln55_1_fu_1268_p2);

assign select_ln58_4_fu_1378_p3 = ((and_ln55_fu_1288_p2[0:0] === 1'b1) ? notrhs_mid1_fu_1372_p2 : or_ln55_2_fu_1273_p2);

assign select_ln58_5_fu_1386_p3 = ((and_ln55_fu_1288_p2[0:0] === 1'b1) ? add_ln69_fu_1300_p2 : select_ln55_fu_1240_p3);

assign select_ln58_6_fu_1394_p3 = ((and_ln55_fu_1288_p2[0:0] === 1'b1) ? add_ln58_fu_1294_p2 : select_ln55_1_fu_1247_p3);

assign select_ln58_7_fu_1167_p3 = ((or_ln55_fu_1129_p2[0:0] === 1'b1) ? 4'd1 : add_ln58_1_fu_1161_p2);

assign select_ln58_fu_1306_p3 = ((and_ln55_fu_1288_p2[0:0] === 1'b1) ? add_ln69_fu_1300_p2 : select_ln55_2_fu_1254_p3);

assign select_ln78_1_fu_1732_p3 = ((or_ln78_reg_2209[0:0] === 1'b1) ? select_ln78_fu_1725_p3 : input_registers_0_0_V_1_fu_238);

assign select_ln78_2_fu_1606_p3 = ((icmp_ln73_1_reg_2116_pp0_iter3_reg[0:0] === 1'b1) ? 8'd0 : input_registers_1_0_V_fu_254);

assign select_ln78_3_fu_1613_p3 = ((or_ln78_fu_1587_p2[0:0] === 1'b1) ? select_ln78_2_fu_1606_p3 : input_registers_1_0_V_1_fu_250);

assign select_ln78_4_fu_1701_p3 = ((icmp_ln73_reg_2111_pp0_iter3_reg[0:0] === 1'b1) ? 8'd0 : input_registers_2_0_V_fu_234);

assign select_ln78_fu_1725_p3 = ((icmp_ln73_1_reg_2116_pp0_iter4_reg[0:0] === 1'b1) ? 8'd0 : input_registers_0_0_V_fu_242);

assign select_ln82_1_fu_1777_p3 = ((and_ln75_reg_2203[0:0] === 1'b1) ? input_registers_0_2_V_fu_266 : input_registers_0_1_V_fu_246);

assign select_ln82_2_fu_1637_p3 = ((and_ln75_fu_1583_p2[0:0] === 1'b1) ? input_registers_1_1_V_fu_258 : input_registers_1_0_V_fu_254);

assign select_ln82_3_fu_1666_p3 = ((and_ln75_fu_1583_p2[0:0] === 1'b1) ? input_registers_1_2_V_fu_270 : input_registers_1_1_V_fu_258);

assign select_ln82_fu_1752_p3 = ((and_ln75_reg_2203[0:0] === 1'b1) ? input_registers_0_1_V_fu_246 : input_registers_0_0_V_fu_242);

assign tmp_fu_1456_p3 = select_ln58_1_reg_2043[32'd1];

assign trunc_ln53_1_fu_1077_p1 = add_ln53_1_fu_1071_p2[0:0];

assign trunc_ln53_fu_1031_p1 = output_x_reg_589[0:0];

assign trunc_ln55_1_fu_1135_p1 = output_y_2_fu_1123_p2[0:0];

assign trunc_ln55_fu_1035_p1 = output_y_reg_611[0:0];

assign weight_registers_V_address0 = zext_ln66_fu_1451_p1;

assign weight_registers_V_address1 = zext_ln113_fu_1824_p1;

assign xor_ln53_fu_1097_p2 = (icmp_ln55_fu_1057_p2 ^ 1'd1);

assign xor_ln55_fu_1278_p2 = (icmp_ln58_reg_1988 ^ 1'd1);

assign xor_ln74_1_fu_1488_p2 = (tmp_fu_1456_p3 ^ 1'd1);

assign xor_ln74_fu_1419_p2 = (cmp45_fu_1402_p2 ^ 1'd1);

assign zext_ln113_fu_1824_p1 = add_ln113_reg_2166_pp0_iter4_reg;

assign zext_ln182_fu_1443_p1 = select_ln58_1_reg_2043;

assign zext_ln58_1_fu_1332_p1 = add_ln58_fu_1294_p2;

assign zext_ln58_fu_1189_p1 = ap_phi_mux_kernel_y_phi_fu_648_p4;

assign zext_ln66_fu_1451_p1 = add_ln66_fu_1446_p2;

assign zext_ln74_1_fu_1483_p1 = or_ln109_1_fu_1478_p2;

assign zext_ln74_fu_1414_p1 = or_ln109_fu_1408_p2;

assign zext_ln77_1_fu_1504_p1 = add_ln109_1_fu_1499_p2;

assign zext_ln77_2_fu_1514_p1 = add_ln109_2_fu_1509_p2;

assign zext_ln77_3_fu_1524_p1 = add_ln109_3_fu_1519_p2;

assign zext_ln77_4_fu_1534_p1 = add_ln109_4_fu_1529_p2;

assign zext_ln77_5_fu_1544_p1 = add_ln109_5_fu_1539_p2;

assign zext_ln77_6_fu_1554_p1 = add_ln109_6_fu_1549_p2;

assign zext_ln77_fu_1573_p1 = add_ln109_fu_1568_p2;

always @ (posedge ap_clk) begin
    or_ln109_reg_2083[0] <= 1'b1;
    or_ln109_reg_2083_pp0_iter2_reg[0] <= 1'b1;
end

endmodule //top_pe
