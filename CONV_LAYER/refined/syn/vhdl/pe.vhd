-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pe is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_buffers_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buffers_ce0 : OUT STD_LOGIC;
    input_buffers_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    input_buffers_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buffers_ce1 : OUT STD_LOGIC;
    input_buffers_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    weight_stream_V_empty_n : IN STD_LOGIC;
    weight_stream_V_read : OUT STD_LOGIC;
    pe_input_stream_V_0_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_V_0_full_n : IN STD_LOGIC;
    pe_input_stream_V_0_write : OUT STD_LOGIC;
    pe_input_stream_V_1_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_V_1_full_n : IN STD_LOGIC;
    pe_input_stream_V_1_write : OUT STD_LOGIC;
    pe_input_stream_V_2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_V_2_full_n : IN STD_LOGIC;
    pe_input_stream_V_2_write : OUT STD_LOGIC;
    pe_input_stream_V_3_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_V_3_full_n : IN STD_LOGIC;
    pe_input_stream_V_3_write : OUT STD_LOGIC;
    pe_input_stream_V_4_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_V_4_full_n : IN STD_LOGIC;
    pe_input_stream_V_4_write : OUT STD_LOGIC;
    pe_input_stream_V_5_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_V_5_full_n : IN STD_LOGIC;
    pe_input_stream_V_5_write : OUT STD_LOGIC;
    pe_input_stream_V_6_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_V_6_full_n : IN STD_LOGIC;
    pe_input_stream_V_6_write : OUT STD_LOGIC;
    pe_input_stream_V_7_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_V_7_full_n : IN STD_LOGIC;
    pe_input_stream_V_7_write : OUT STD_LOGIC;
    pe_input_stream_V_8_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_input_stream_V_8_full_n : IN STD_LOGIC;
    pe_input_stream_V_8_write : OUT STD_LOGIC;
    pe_weight_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    pe_weight_stream_V_full_n : IN STD_LOGIC;
    pe_weight_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of pe is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pe_pe,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.846000,HLS_SYN_LAT=191,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1060,HLS_SYN_LUT=1831,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal weight_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln25_reg_1944 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_1_reg_1981 : STD_LOGIC_VECTOR (0 downto 0);
    signal pe_input_stream_V_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal pe_input_stream_V_1_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal pe_input_stream_V_2_blk_n : STD_LOGIC;
    signal pe_input_stream_V_3_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal pe_input_stream_V_4_blk_n : STD_LOGIC;
    signal pe_input_stream_V_5_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal icmp_ln25_reg_1944_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pe_input_stream_V_6_blk_n : STD_LOGIC;
    signal pe_input_stream_V_7_blk_n : STD_LOGIC;
    signal pe_input_stream_V_8_blk_n : STD_LOGIC;
    signal icmp_ln25_reg_1944_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pe_weight_stream_V_blk_n : STD_LOGIC;
    signal indvar_flatten209_reg_470 : STD_LOGIC_VECTOR (5 downto 0);
    signal output_x_reg_482 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten97_reg_493 : STD_LOGIC_VECTOR (5 downto 0);
    signal output_y_reg_504 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_reg_515 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_y_reg_526 : STD_LOGIC_VECTOR (1 downto 0);
    signal iwo_reg_538 : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_y_cast1_fu_615_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal kernel_y_cast1_reg_1928 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal inner_fifos_0_0_V_V_full_n : STD_LOGIC;
    signal inner_fifos_0_0_V_V_write : STD_LOGIC;
    signal select_ln30_4_reg_2044 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_4_reg_2044_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inner_fifos_1_1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_1_1_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_1_1_V_V_read : STD_LOGIC;
    signal icmp_ln70_reg_2115 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_3_reg_2038 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_3_reg_2038_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op391_read_state12 : BOOLEAN;
    signal inner_fifos_1_2_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_1_2_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_1_2_V_V_read : STD_LOGIC;
    signal ap_predicate_op403_read_state12 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln25_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_1948 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_reg_1957 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_reg_1957_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln30_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln30_reg_1963 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_2_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_2_reg_1968 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_3_fu_721_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln25_3_reg_1976 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln27_1_fu_753_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_6_fu_761_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln27_6_reg_1985 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln30_1_fu_769_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln30_1_reg_1990 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln27_7_fu_781_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln27_7_reg_1995 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln27_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_reg_2000 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op156_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal or_ln27_reg_2000_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_1_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_1_reg_2008 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln27_1_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln27_1_reg_2013 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln27_1_reg_2013_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_fu_902_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_reg_2021 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_reg_2021_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal kernel_y_cast1_mid1_fu_936_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal kernel_y_cast1_mid1_reg_2032 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_3_fu_946_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_4_fu_960_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_4_reg_2044_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_8_fu_994_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_8_reg_2058 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln37_fu_1012_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln37_reg_2064 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln37_reg_2064_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln37_reg_2064_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_x_cast2_fu_1017_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal kernel_x_cast2_reg_2069 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal inner_fifos_1_1_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_1_1_V_V_full_n : STD_LOGIC;
    signal inner_fifos_1_1_V_V_write : STD_LOGIC;
    signal inner_fifos_1_2_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_1_2_V_V_full_n : STD_LOGIC;
    signal inner_fifos_1_2_V_V_write : STD_LOGIC;
    signal ap_block_state14_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal inner_fifos_0_1_V_V_full_n : STD_LOGIC;
    signal inner_fifos_0_1_V_V_write : STD_LOGIC;
    signal inner_fifos_0_2_V_V_full_n : STD_LOGIC;
    signal inner_fifos_0_2_V_V_write : STD_LOGIC;
    signal ap_block_state15_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal add_ln25_fu_1067_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln25_reg_2095 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal inner_fifos_0_0_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_0_0_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_0_0_V_V_read : STD_LOGIC;
    signal ap_predicate_op315_read_state11 : BOOLEAN;
    signal inner_fifos_0_1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_0_1_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_0_1_V_V_read : STD_LOGIC;
    signal ap_predicate_op324_read_state11 : BOOLEAN;
    signal inner_fifos_0_2_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_0_2_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_0_2_V_V_read : STD_LOGIC;
    signal ap_predicate_op336_read_state11 : BOOLEAN;
    signal inner_fifos_1_0_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_1_0_V_V_empty_n : STD_LOGIC;
    signal inner_fifos_1_0_V_V_read : STD_LOGIC;
    signal ap_predicate_op351_read_state11 : BOOLEAN;
    signal inner_fifos_1_0_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal inner_fifos_1_0_V_V_full_n : STD_LOGIC;
    signal inner_fifos_1_0_V_V_write : STD_LOGIC;
    signal ap_predicate_op369_write_state11 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal select_ln30_9_fu_1084_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln30_9_reg_2105 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_2110 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln33_fu_1132_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln33_reg_2119 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_625_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_num_index_0_reg_2124 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_639_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_num_index_1_reg_2129 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_2_fu_1169_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_2_reg_2134 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_974_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_num_index_0_mid1_reg_2139 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_988_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_num_index_1_mid1_reg_2144 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_reg_2149 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_depth_index_cast_fu_1249_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_depth_index_cast_reg_2154 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln61_fu_1253_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln61_reg_2160 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln62_fu_1285_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln62_reg_2165 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln62_1_fu_1328_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln62_1_reg_2176 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp56_fu_1435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp56_reg_2187 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln72_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln72_reg_2193 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_2199 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln61_1_fu_1527_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln61_1_reg_2205 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln61_2_fu_1574_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln61_2_reg_2220 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_6_fu_1693_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_6_reg_2237 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_7_fu_1697_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_7_reg_2242 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_8_fu_1701_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_8_reg_2247 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_registers_2_2_V_2_fu_1766_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_2_2_V_2_reg_2262 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_condition_pp0_exit_iter1_state11 : STD_LOGIC;
    signal weight_registers_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal weight_registers_V_ce0 : STD_LOGIC;
    signal weight_registers_V_we0 : STD_LOGIC;
    signal weight_registers_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_indvar_flatten209_phi_fu_474_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_output_x_phi_fu_486_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_indvar_flatten97_phi_fu_497_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_output_y_phi_fu_508_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_519_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_kernel_y_phi_fu_530_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_iwo_phi_fu_542_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln79_fu_1297_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_fu_1340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_3_fu_1555_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_4_fu_1565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_2_fu_1630_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_5_fu_1688_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_6_fu_1742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_7_fu_1746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_8_fu_1779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal input_registers_0_2_V_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_0_3_V_1_fu_1716_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_1_2_V_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_1_3_V_1_fu_1729_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_V_2_0_3_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln75_fu_1579_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_2_0_V_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_2_1_V_2_fu_1753_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_2_1_V_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_2_2_V_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_2_3_V_1_fu_1791_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_0_0_V_1_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln87_fu_1450_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_0_0_V_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln87_1_fu_1471_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_0_1_V_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln87_2_fu_1497_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_1_0_V_1_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln87_3_fu_1532_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_1_0_V_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln87_4_fu_1639_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_registers_1_1_V_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln87_5_fu_1661_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal empty_13_fu_587_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln27_fu_597_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln27_fu_593_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_cast_fu_601_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_625_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_639_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln25_1_fu_665_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_23_fu_671_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln25_1_fu_677_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal cmp28_mid1149_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp28_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_fu_657_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_y_2_fu_729_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln27_1_fu_735_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln27_1_fu_685_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_cast_mid1_fu_739_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal cmp28_mid1_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_2_fu_695_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_1_fu_775_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_fu_793_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln30_fu_789_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal cmp59_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_14_fu_801_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln27_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_1_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_1_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_fu_844_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln30_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln30_1_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln30_fu_886_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl_mid1_fu_914_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln30_1_fu_910_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mid1_fu_922_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln27_2_fu_852_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal cmp59_mid1_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_2_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_mid1_fu_954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_3_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_974_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_988_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln182_fu_1002_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln30_1_fu_928_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln35_fu_1006_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1026_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1039_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1050_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1061_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1078_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_15_fu_1090_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul216_fu_1099_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul216_fu_1099_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul216_fu_1099_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln70_fu_1113_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln25_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid16_fu_1146_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul218_fu_1155_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul218_fu_1155_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul218_fu_1155_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_1161_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln27_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_21_fu_1176_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul220_fu_1185_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul220_fu_1185_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul220_fu_1185_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_17_fu_1199_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul1_fu_1202_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_24_fu_1221_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul46_mid1_fu_1224_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln27_3_fu_1214_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_depth_index_fu_1243_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln30_5_fu_1236_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1026_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln62_fu_1259_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln62_2_fu_1263_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln62_fu_1275_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln62_fu_1271_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln62_1_fu_1281_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_fu_1291_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1039_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln62_1_fu_1302_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln62_4_fu_1306_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln62_1_fu_1318_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln62_2_fu_1314_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln62_3_fu_1324_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_1_fu_1334_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_18_fu_1345_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1050_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_20_fu_1360_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul46_1_fu_1348_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul46_2_fu_1364_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_25_fu_1390_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul46_1_mid1_fu_1393_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln27_4_fu_1376_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1061_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_26_fu_1412_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul46_2_mid1_fu_1416_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln27_5_fu_1383_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal cmp65_fu_1440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_6_fu_1405_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_3_fu_1550_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_4_fu_1560_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln30_7_fu_1428_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1078_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln62_2_fu_1593_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln62_6_fu_1597_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln62_3_fu_1609_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln62_4_fu_1605_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln62_5_fu_1615_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln62_2_fu_1619_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_2_fu_1625_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln62_5_fu_1683_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln71_fu_1706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln71_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_625_ce : STD_LOGIC;
    signal grp_fu_639_ce : STD_LOGIC;
    signal grp_fu_974_ce : STD_LOGIC;
    signal grp_fu_988_ce : STD_LOGIC;
    signal grp_fu_1026_ce : STD_LOGIC;
    signal grp_fu_1039_ce : STD_LOGIC;
    signal grp_fu_1050_ce : STD_LOGIC;
    signal grp_fu_1061_ce : STD_LOGIC;
    signal grp_fu_1078_ce : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul216_fu_1099_p10 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul218_fu_1155_p10 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul220_fu_1185_p00 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_condition_636 : BOOLEAN;
    signal ap_condition_1643 : BOOLEAN;
    signal ap_condition_1648 : BOOLEAN;
    signal ap_condition_1653 : BOOLEAN;
    signal ap_condition_706 : BOOLEAN;

    component pe_urem_3ns_3ns_2_7_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component pe_urem_3ns_3ns_3_7_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component pe_mul_5ns_3ns_7_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component pe_mul_3ns_5ns_7_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component pe_weight_registers_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component pe_fifo_w8_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    weight_registers_V_U : component pe_weight_registers_V
    generic map (
        DataWidth => 8,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_registers_V_address0,
        ce0 => weight_registers_V_ce0,
        we0 => weight_registers_V_we0,
        d0 => weight_stream_V_dout,
        q0 => weight_registers_V_q0);

    urem_3ns_3ns_2_7_1_U1 : component pe_urem_3ns_3ns_2_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_625_p0,
        din1 => ap_const_lv3_3,
        ce => grp_fu_625_ce,
        dout => grp_fu_625_p2);

    urem_3ns_3ns_2_7_1_U2 : component pe_urem_3ns_3ns_2_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_639_p0,
        din1 => ap_const_lv3_3,
        ce => grp_fu_639_ce,
        dout => grp_fu_639_p2);

    urem_3ns_3ns_2_7_1_U3 : component pe_urem_3ns_3ns_2_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_974_p0,
        din1 => ap_const_lv3_3,
        ce => grp_fu_974_ce,
        dout => grp_fu_974_p2);

    urem_3ns_3ns_2_7_1_U4 : component pe_urem_3ns_3ns_2_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_988_p0,
        din1 => ap_const_lv3_3,
        ce => grp_fu_988_ce,
        dout => grp_fu_988_p2);

    urem_3ns_3ns_3_7_1_U5 : component pe_urem_3ns_3ns_3_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1026_p0,
        din1 => ap_const_lv3_3,
        ce => grp_fu_1026_ce,
        dout => grp_fu_1026_p2);

    urem_3ns_3ns_3_7_1_U6 : component pe_urem_3ns_3ns_3_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1039_p0,
        din1 => ap_const_lv3_3,
        ce => grp_fu_1039_ce,
        dout => grp_fu_1039_p2);

    urem_3ns_3ns_2_7_1_U7 : component pe_urem_3ns_3ns_2_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1050_p0,
        din1 => ap_const_lv3_3,
        ce => grp_fu_1050_ce,
        dout => grp_fu_1050_p2);

    urem_3ns_3ns_2_7_1_U8 : component pe_urem_3ns_3ns_2_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1061_p0,
        din1 => ap_const_lv3_3,
        ce => grp_fu_1061_ce,
        dout => grp_fu_1061_p2);

    urem_3ns_3ns_3_7_1_U9 : component pe_urem_3ns_3ns_3_7_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 3,
        din1_WIDTH => 3,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1078_p0,
        din1 => ap_const_lv3_3,
        ce => grp_fu_1078_ce,
        dout => grp_fu_1078_p2);

    mul_5ns_3ns_7_1_1_U10 : component pe_mul_5ns_3ns_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 3,
        dout_WIDTH => 7)
    port map (
        din0 => mul216_fu_1099_p0,
        din1 => mul216_fu_1099_p1,
        dout => mul216_fu_1099_p2);

    mul_5ns_3ns_7_1_1_U11 : component pe_mul_5ns_3ns_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 3,
        dout_WIDTH => 7)
    port map (
        din0 => mul218_fu_1155_p0,
        din1 => mul218_fu_1155_p1,
        dout => mul218_fu_1155_p2);

    mul_3ns_5ns_7_1_1_U12 : component pe_mul_3ns_5ns_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 5,
        dout_WIDTH => 7)
    port map (
        din0 => mul220_fu_1185_p0,
        din1 => mul220_fu_1185_p1,
        dout => mul220_fu_1185_p2);

    inner_fifos_0_0_V_V_fifo_U : component pe_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => input_registers_1_0_V_1_fu_186,
        if_full_n => inner_fifos_0_0_V_V_full_n,
        if_write => inner_fifos_0_0_V_V_write,
        if_dout => inner_fifos_0_0_V_V_dout,
        if_empty_n => inner_fifos_0_0_V_V_empty_n,
        if_read => inner_fifos_0_0_V_V_read);

    inner_fifos_0_1_V_V_fifo_U : component pe_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => input_registers_1_0_V_fu_190,
        if_full_n => inner_fifos_0_1_V_V_full_n,
        if_write => inner_fifos_0_1_V_V_write,
        if_dout => inner_fifos_0_1_V_V_dout,
        if_empty_n => inner_fifos_0_1_V_V_empty_n,
        if_read => inner_fifos_0_1_V_V_read);

    inner_fifos_0_2_V_V_fifo_U : component pe_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => input_registers_1_1_V_fu_194,
        if_full_n => inner_fifos_0_2_V_V_full_n,
        if_write => inner_fifos_0_2_V_V_write,
        if_dout => inner_fifos_0_2_V_V_dout,
        if_empty_n => inner_fifos_0_2_V_V_empty_n,
        if_read => inner_fifos_0_2_V_V_read);

    inner_fifos_1_0_V_V_fifo_U : component pe_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => inner_fifos_1_0_V_V_din,
        if_full_n => inner_fifos_1_0_V_V_full_n,
        if_write => inner_fifos_1_0_V_V_write,
        if_dout => inner_fifos_1_0_V_V_dout,
        if_empty_n => inner_fifos_1_0_V_V_empty_n,
        if_read => inner_fifos_1_0_V_V_read);

    inner_fifos_1_1_V_V_fifo_U : component pe_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => inner_fifos_1_1_V_V_din,
        if_full_n => inner_fifos_1_1_V_V_full_n,
        if_write => inner_fifos_1_1_V_V_write,
        if_dout => inner_fifos_1_1_V_V_dout,
        if_empty_n => inner_fifos_1_1_V_V_empty_n,
        if_read => inner_fifos_1_1_V_V_read);

    inner_fifos_1_2_V_V_fifo_U : component pe_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => inner_fifos_1_2_V_V_din,
        if_full_n => inner_fifos_1_2_V_V_full_n,
        if_write => inner_fifos_1_2_V_V_write,
        if_dout => inner_fifos_1_2_V_V_dout,
        if_empty_n => inner_fifos_1_2_V_V_empty_n,
        if_read => inner_fifos_1_2_V_V_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter1_state11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter1_state11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten209_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten209_reg_470 <= add_ln25_reg_2095;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten209_reg_470 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten97_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten97_reg_493 <= select_ln27_7_reg_1995;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten97_reg_493 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten_reg_515 <= select_ln30_9_reg_2105;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_515 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    input_registers_0_0_V_1_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln70_reg_2115 = ap_const_lv1_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                input_registers_0_0_V_1_fu_174 <= select_ln87_fu_1450_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                input_registers_0_0_V_1_fu_174 <= inner_fifos_0_0_V_V_dout;
            elsif ((((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln70_fu_1117_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                input_registers_0_0_V_1_fu_174 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    input_registers_0_0_V_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_636)) then
                if ((icmp_ln70_reg_2115 = ap_const_lv1_1)) then 
                    input_registers_0_0_V_fu_178 <= input_buffers_q0;
                elsif (((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln70_reg_2115 = ap_const_lv1_0))) then 
                    input_registers_0_0_V_fu_178 <= select_ln87_1_fu_1471_p3;
                elsif (((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0))) then 
                    input_registers_0_0_V_fu_178 <= inner_fifos_0_1_V_V_dout;
                end if;
            end if; 
        end if;
    end process;

    input_registers_0_1_V_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_636)) then
                if ((icmp_ln70_reg_2115 = ap_const_lv1_1)) then 
                    input_registers_0_1_V_fu_182 <= input_buffers_q1;
                elsif (((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln70_reg_2115 = ap_const_lv1_0))) then 
                    input_registers_0_1_V_fu_182 <= select_ln87_2_fu_1497_p3;
                elsif (((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0))) then 
                    input_registers_0_1_V_fu_182 <= inner_fifos_0_2_V_V_dout;
                end if;
            end if; 
        end if;
    end process;

    input_registers_1_0_V_1_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_1653)) then 
                    input_registers_1_0_V_1_fu_186 <= select_ln87_3_fu_1532_p3;
                elsif ((ap_const_boolean_1 = ap_condition_1648)) then 
                    input_registers_1_0_V_1_fu_186 <= inner_fifos_1_0_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_condition_1643)) then 
                    input_registers_1_0_V_1_fu_186 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    input_registers_1_0_V_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_706)) then
                if ((icmp_ln70_reg_2115 = ap_const_lv1_1)) then 
                    input_registers_1_0_V_fu_190 <= input_buffers_q0;
                elsif (((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln70_reg_2115 = ap_const_lv1_0))) then 
                    input_registers_1_0_V_fu_190 <= select_ln87_4_fu_1639_p3;
                elsif (((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0))) then 
                    input_registers_1_0_V_fu_190 <= inner_fifos_1_1_V_V_dout;
                end if;
            end if; 
        end if;
    end process;

    input_registers_1_1_V_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_706)) then
                if ((icmp_ln70_reg_2115 = ap_const_lv1_1)) then 
                    input_registers_1_1_V_fu_194 <= input_buffers_q1;
                elsif (((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln70_reg_2115 = ap_const_lv1_0))) then 
                    input_registers_1_1_V_fu_194 <= select_ln87_5_fu_1661_p3;
                elsif (((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0))) then 
                    input_registers_1_1_V_fu_194 <= inner_fifos_1_2_V_V_dout;
                end if;
            end if; 
        end if;
    end process;

    iwo_reg_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                iwo_reg_538 <= add_ln33_reg_2119;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                iwo_reg_538 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    kernel_y_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                kernel_y_reg_526 <= select_ln30_8_reg_2058;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                kernel_y_reg_526 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    output_x_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                output_x_reg_482 <= select_ln25_3_reg_1976;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                output_x_reg_482 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    output_y_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                output_y_reg_504 <= select_ln27_6_reg_1985;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                output_y_reg_504 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln25_reg_2095 <= add_ln25_fu_1067_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln25_fu_645_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln30_1_reg_1990 <= add_ln30_1_fu_769_p2;
                and_ln25_2_reg_1968 <= and_ln25_2_fu_715_p2;
                icmp_ln27_reg_1948 <= icmp_ln27_fu_651_p2;
                icmp_ln30_reg_1963 <= icmp_ln30_fu_709_p2;
                select_ln27_1_reg_1981 <= select_ln27_1_fu_753_p3;
                xor_ln25_reg_1957 <= xor_ln25_fu_703_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                add_ln33_reg_2119 <= add_ln33_fu_1132_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0))) then
                add_ln61_1_reg_2205 <= add_ln61_1_fu_1527_p2;
                add_ln61_2_reg_2220 <= add_ln61_2_fu_1574_p2;
                and_ln72_reg_2193 <= and_ln72_fu_1445_p2;
                cmp56_reg_2187 <= cmp56_fu_1435_p2;
                tmp_3_reg_2199 <= select_ln30_reg_2021_pp0_iter1_reg(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0))) then
                add_ln61_reg_2160 <= add_ln61_fu_1253_p2;
                    input_depth_index_cast_reg_2154(1 downto 0) <= input_depth_index_cast_fu_1249_p1(1 downto 0);
                    sub_ln62_1_reg_2176(5 downto 1) <= sub_ln62_1_fu_1328_p2(5 downto 1);
                    sub_ln62_reg_2165(5 downto 1) <= sub_ln62_fu_1285_p2(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp56_reg_2187 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln62_6_reg_2237 <= add_ln62_6_fu_1693_p2;
                add_ln62_7_reg_2242 <= add_ln62_7_fu_1697_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_reg_2199 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0))) then
                add_ln62_8_reg_2247 <= add_ln62_8_fu_1701_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                and_ln27_1_reg_2013 <= and_ln27_1_fu_880_p2;
                    kernel_y_cast1_mid1_reg_2032(1 downto 0) <= kernel_y_cast1_mid1_fu_936_p1(1 downto 0);
                or_ln27_1_reg_2008 <= or_ln27_1_fu_865_p2;
                or_ln27_reg_2000 <= or_ln27_fu_840_p2;
                select_ln30_3_reg_2038 <= select_ln30_3_fu_946_p3;
                select_ln30_4_reg_2044 <= select_ln30_4_fu_960_p3;
                select_ln30_reg_2021 <= select_ln30_fu_902_p3;
                    zext_ln37_reg_2064(3 downto 0) <= zext_ln37_fu_1012_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                and_ln27_1_reg_2013_pp0_iter1_reg <= and_ln27_1_reg_2013;
                input_num_index_0_reg_2124 <= grp_fu_625_p2;
                input_num_index_1_reg_2129 <= grp_fu_639_p2;
                or_ln27_reg_2000_pp0_iter1_reg <= or_ln27_reg_2000;
                select_ln30_3_reg_2038_pp0_iter1_reg <= select_ln30_3_reg_2038;
                select_ln30_4_reg_2044_pp0_iter1_reg <= select_ln30_4_reg_2044;
                select_ln30_4_reg_2044_pp0_iter2_reg <= select_ln30_4_reg_2044_pp0_iter1_reg;
                select_ln30_reg_2021_pp0_iter1_reg <= select_ln30_reg_2021;
                    zext_ln37_reg_2064_pp0_iter1_reg(3 downto 0) <= zext_ln37_reg_2064(3 downto 0);
                    zext_ln37_reg_2064_pp0_iter2_reg(3 downto 0) <= zext_ln37_reg_2064_pp0_iter1_reg(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln25_reg_1944 <= icmp_ln25_fu_645_p2;
                icmp_ln25_reg_1944_pp0_iter1_reg <= icmp_ln25_reg_1944;
                icmp_ln25_reg_1944_pp0_iter2_reg <= icmp_ln25_reg_1944_pp0_iter1_reg;
                    kernel_y_cast1_reg_1928(1 downto 0) <= kernel_y_cast1_fu_615_p1(1 downto 0);
                xor_ln25_reg_1957_pp0_iter1_reg <= xor_ln25_reg_1957;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln70_reg_2115 <= icmp_ln70_fu_1117_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0))) then
                input_num_index_0_mid1_reg_2139 <= grp_fu_974_p2;
                input_num_index_1_mid1_reg_2144 <= grp_fu_988_p2;
                tmp_2_reg_2149 <= mul220_fu_1185_p2(5 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                input_registers_0_2_V_fu_150 <= input_registers_0_3_V_1_fu_1716_p3;
                input_registers_1_2_V_fu_154 <= input_registers_1_3_V_1_fu_1729_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                input_registers_2_0_V_fu_162 <= input_registers_2_1_V_2_fu_1753_p3;
                input_registers_2_1_V_fu_166 <= input_registers_2_2_V_2_fu_1766_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                input_registers_2_2_V_2_reg_2262 <= input_registers_2_2_V_2_fu_1766_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                input_registers_2_2_V_fu_170 <= input_registers_2_3_V_1_fu_1791_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                input_registers_V_2_0_3_fu_158 <= select_ln75_fu_1579_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    kernel_x_cast2_reg_2069(1 downto 0) <= kernel_x_cast2_fu_1017_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln25_fu_645_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln25_3_reg_1976 <= select_ln25_3_fu_721_p3;
                select_ln27_6_reg_1985 <= select_ln27_6_fu_761_p3;
                select_ln27_7_reg_1995 <= select_ln27_7_fu_781_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0))) then
                select_ln30_2_reg_2134 <= select_ln30_2_fu_1169_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                select_ln30_8_reg_2058 <= select_ln30_8_fu_994_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                select_ln30_9_reg_2105 <= select_ln30_9_fu_1084_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln27_1_reg_2013) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_2110 <= mul216_fu_1099_p2(5 downto 5);
            end if;
        end if;
    end process;
    kernel_y_cast1_reg_1928(2) <= '0';
    kernel_y_cast1_mid1_reg_2032(2) <= '0';
    zext_ln37_reg_2064(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln37_reg_2064_pp0_iter1_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln37_reg_2064_pp0_iter2_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    kernel_x_cast2_reg_2069(2) <= '0';
    input_depth_index_cast_reg_2154(5 downto 2) <= "0000";
    sub_ln62_reg_2165(0) <= '0';
    sub_ln62_1_reg_2176(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_cast_fu_601_p3 <= 
        ap_const_lv3_7 when (trunc_ln27_fu_597_p1(0) = '1') else 
        ap_const_lv3_0;
    add_cast_mid1_fu_739_p3 <= 
        ap_const_lv3_7 when (trunc_ln27_1_fu_735_p1(0) = '1') else 
        ap_const_lv3_0;
    add_ln25_1_fu_665_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ap_phi_mux_output_x_phi_fu_486_p4));
    add_ln25_fu_1067_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(indvar_flatten209_reg_470));
    add_ln27_1_fu_775_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten97_phi_fu_497_p4) + unsigned(ap_const_lv6_1));
    add_ln30_1_fu_769_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_519_p4) + unsigned(ap_const_lv4_1));
    add_ln30_fu_886_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(select_ln27_fu_844_p3));
    add_ln33_fu_1132_p2 <= std_logic_vector(unsigned(select_ln30_reg_2021) + unsigned(ap_const_lv2_1));
    add_ln35_fu_1006_p2 <= std_logic_vector(unsigned(zext_ln182_fu_1002_p1) + unsigned(select_ln30_1_fu_928_p3));
    add_ln61_1_fu_1527_p2 <= std_logic_vector(unsigned(input_depth_index_cast_reg_2154) + unsigned(select_ln30_6_fu_1405_p3));
    add_ln61_2_fu_1574_p2 <= std_logic_vector(unsigned(select_ln30_7_fu_1428_p3) + unsigned(input_depth_index_cast_reg_2154));
    add_ln61_fu_1253_p2 <= std_logic_vector(unsigned(select_ln30_5_fu_1236_p3) + unsigned(input_depth_index_cast_fu_1249_p1));
    add_ln62_1_fu_1334_p2 <= std_logic_vector(unsigned(sub_ln62_1_fu_1328_p2) + unsigned(add_ln61_fu_1253_p2));
    add_ln62_2_fu_1625_p2 <= std_logic_vector(unsigned(sub_ln62_2_fu_1619_p2) + unsigned(add_ln61_reg_2160));
    add_ln62_3_fu_1550_p2 <= std_logic_vector(unsigned(add_ln61_1_fu_1527_p2) + unsigned(sub_ln62_reg_2165));
    add_ln62_4_fu_1560_p2 <= std_logic_vector(unsigned(add_ln61_1_fu_1527_p2) + unsigned(sub_ln62_1_reg_2176));
    add_ln62_5_fu_1683_p2 <= std_logic_vector(unsigned(add_ln61_1_reg_2205) + unsigned(sub_ln62_2_fu_1619_p2));
    add_ln62_6_fu_1693_p2 <= std_logic_vector(unsigned(add_ln61_2_reg_2220) + unsigned(sub_ln62_reg_2165));
    add_ln62_7_fu_1697_p2 <= std_logic_vector(unsigned(add_ln61_2_reg_2220) + unsigned(sub_ln62_1_reg_2176));
    add_ln62_8_fu_1701_p2 <= std_logic_vector(unsigned(sub_ln62_2_fu_1619_p2) + unsigned(add_ln61_2_reg_2220));
    add_ln62_fu_1291_p2 <= std_logic_vector(unsigned(sub_ln62_fu_1285_p2) + unsigned(add_ln61_fu_1253_p2));
    and_ln25_1_fu_835_p2 <= (xor_ln25_reg_1957 and icmp_ln33_fu_829_p2);
    and_ln25_2_fu_715_p2 <= (xor_ln25_fu_703_p2 and icmp_ln30_fu_709_p2);
    and_ln25_fu_1137_p2 <= (xor_ln25_reg_1957_pp0_iter1_reg and tmp_reg_2110);
    and_ln27_1_fu_880_p2 <= (or_ln27_1_fu_865_p2 and and_ln25_1_fu_835_p2);
    and_ln27_fu_1141_p2 <= (or_ln27_1_reg_2008 and and_ln25_fu_1137_p2);
    and_ln71_fu_1711_p2 <= (xor_ln71_fu_1706_p2 and select_ln30_3_reg_2038_pp0_iter1_reg);
    and_ln72_fu_1445_p2 <= (select_ln30_3_reg_2038_pp0_iter1_reg and cmp65_fu_1440_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(pe_input_stream_V_0_full_n, pe_input_stream_V_1_full_n, pe_input_stream_V_2_full_n, icmp_ln25_reg_1944, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, inner_fifos_0_0_V_V_full_n, select_ln30_4_reg_2044_pp0_iter1_reg, inner_fifos_1_1_V_V_empty_n, ap_predicate_op391_read_state12, inner_fifos_1_2_V_V_empty_n, ap_predicate_op403_read_state12)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (pe_input_stream_V_2_full_n = ap_const_logic_0)) or ((icmp_ln25_reg_1944 = ap_const_lv1_0) and (pe_input_stream_V_1_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((pe_input_stream_V_0_full_n = ap_const_logic_0) or ((ap_predicate_op403_read_state12 = ap_const_boolean_1) and (inner_fifos_1_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op391_read_state12 = ap_const_boolean_1) and (inner_fifos_1_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln30_4_reg_2044_pp0_iter1_reg = ap_const_lv1_1) and (inner_fifos_0_0_V_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(pe_input_stream_V_0_full_n, pe_input_stream_V_1_full_n, pe_input_stream_V_2_full_n, icmp_ln25_reg_1944, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, inner_fifos_0_0_V_V_full_n, select_ln30_4_reg_2044_pp0_iter1_reg, inner_fifos_1_1_V_V_empty_n, ap_predicate_op391_read_state12, inner_fifos_1_2_V_V_empty_n, ap_predicate_op403_read_state12)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (pe_input_stream_V_2_full_n = ap_const_logic_0)) or ((icmp_ln25_reg_1944 = ap_const_lv1_0) and (pe_input_stream_V_1_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((pe_input_stream_V_0_full_n = ap_const_logic_0) or ((ap_predicate_op403_read_state12 = ap_const_boolean_1) and (inner_fifos_1_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op391_read_state12 = ap_const_boolean_1) and (inner_fifos_1_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln30_4_reg_2044_pp0_iter1_reg = ap_const_lv1_1) and (inner_fifos_0_0_V_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(pe_input_stream_V_0_full_n, pe_input_stream_V_1_full_n, pe_input_stream_V_2_full_n, icmp_ln25_reg_1944, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, inner_fifos_0_0_V_V_full_n, select_ln30_4_reg_2044_pp0_iter1_reg, inner_fifos_1_1_V_V_empty_n, ap_predicate_op391_read_state12, inner_fifos_1_2_V_V_empty_n, ap_predicate_op403_read_state12)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (pe_input_stream_V_2_full_n = ap_const_logic_0)) or ((icmp_ln25_reg_1944 = ap_const_lv1_0) and (pe_input_stream_V_1_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((pe_input_stream_V_0_full_n = ap_const_logic_0) or ((ap_predicate_op403_read_state12 = ap_const_boolean_1) and (inner_fifos_1_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op391_read_state12 = ap_const_boolean_1) and (inner_fifos_1_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln30_4_reg_2044_pp0_iter1_reg = ap_const_lv1_1) and (inner_fifos_0_0_V_V_full_n = ap_const_logic_0)))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(weight_stream_V_empty_n, ap_enable_reg_pp0_iter0, ap_predicate_op156_read_state3)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (weight_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op156_read_state3 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(weight_stream_V_empty_n, ap_enable_reg_pp0_iter0, ap_predicate_op156_read_state3)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (weight_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op156_read_state3 = ap_const_boolean_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln30_4_reg_2044_pp0_iter2_reg, inner_fifos_1_1_V_V_full_n, inner_fifos_1_2_V_V_full_n)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((inner_fifos_1_2_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1)) or ((inner_fifos_1_1_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln30_4_reg_2044_pp0_iter2_reg, inner_fifos_1_1_V_V_full_n, inner_fifos_1_2_V_V_full_n)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((inner_fifos_1_2_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1)) or ((inner_fifos_1_1_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln30_4_reg_2044_pp0_iter2_reg, inner_fifos_1_1_V_V_full_n, inner_fifos_1_2_V_V_full_n)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((inner_fifos_1_2_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1)) or ((inner_fifos_1_1_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1))));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(pe_input_stream_V_3_full_n, pe_input_stream_V_4_full_n, pe_input_stream_V_6_full_n, pe_input_stream_V_7_full_n, pe_input_stream_V_8_full_n, pe_weight_stream_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln25_reg_1944_pp0_iter2_reg, select_ln30_4_reg_2044_pp0_iter2_reg, inner_fifos_0_1_V_V_full_n, inner_fifos_0_2_V_V_full_n)
    begin
                ap_block_pp0_stage3_01001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((pe_input_stream_V_7_full_n = ap_const_logic_0) or (pe_input_stream_V_6_full_n = ap_const_logic_0) or (pe_input_stream_V_4_full_n = ap_const_logic_0) or (pe_input_stream_V_3_full_n = ap_const_logic_0) or ((pe_weight_stream_V_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0)) or ((pe_input_stream_V_8_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0)) or ((inner_fifos_0_2_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1)) or ((inner_fifos_0_1_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(pe_input_stream_V_3_full_n, pe_input_stream_V_4_full_n, pe_input_stream_V_6_full_n, pe_input_stream_V_7_full_n, pe_input_stream_V_8_full_n, pe_weight_stream_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln25_reg_1944_pp0_iter2_reg, select_ln30_4_reg_2044_pp0_iter2_reg, inner_fifos_0_1_V_V_full_n, inner_fifos_0_2_V_V_full_n)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((pe_input_stream_V_7_full_n = ap_const_logic_0) or (pe_input_stream_V_6_full_n = ap_const_logic_0) or (pe_input_stream_V_4_full_n = ap_const_logic_0) or (pe_input_stream_V_3_full_n = ap_const_logic_0) or ((pe_weight_stream_V_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0)) or ((pe_input_stream_V_8_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0)) or ((inner_fifos_0_2_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1)) or ((inner_fifos_0_1_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(pe_input_stream_V_3_full_n, pe_input_stream_V_4_full_n, pe_input_stream_V_6_full_n, pe_input_stream_V_7_full_n, pe_input_stream_V_8_full_n, pe_weight_stream_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln25_reg_1944_pp0_iter2_reg, select_ln30_4_reg_2044_pp0_iter2_reg, inner_fifos_0_1_V_V_full_n, inner_fifos_0_2_V_V_full_n)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((pe_input_stream_V_7_full_n = ap_const_logic_0) or (pe_input_stream_V_6_full_n = ap_const_logic_0) or (pe_input_stream_V_4_full_n = ap_const_logic_0) or (pe_input_stream_V_3_full_n = ap_const_logic_0) or ((pe_weight_stream_V_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0)) or ((pe_input_stream_V_8_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0)) or ((inner_fifos_0_2_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1)) or ((inner_fifos_0_1_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1))));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(pe_input_stream_V_5_full_n, ap_enable_reg_pp0_iter1, icmp_ln25_reg_1944_pp0_iter1_reg, inner_fifos_0_0_V_V_empty_n, ap_predicate_op315_read_state11, inner_fifos_0_1_V_V_empty_n, ap_predicate_op324_read_state11, inner_fifos_0_2_V_V_empty_n, ap_predicate_op336_read_state11, inner_fifos_1_0_V_V_empty_n, ap_predicate_op351_read_state11, inner_fifos_1_0_V_V_full_n, ap_predicate_op369_write_state11)
    begin
                ap_block_pp0_stage4_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op369_write_state11 = ap_const_boolean_1) and (inner_fifos_1_0_V_V_full_n = ap_const_logic_0)) or ((pe_input_stream_V_5_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_predicate_op351_read_state11 = ap_const_boolean_1) and (inner_fifos_1_0_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op336_read_state11 = ap_const_boolean_1) and (inner_fifos_0_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op324_read_state11 = ap_const_boolean_1) and (inner_fifos_0_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op315_read_state11 = ap_const_boolean_1) and (inner_fifos_0_0_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(pe_input_stream_V_5_full_n, ap_enable_reg_pp0_iter1, icmp_ln25_reg_1944_pp0_iter1_reg, inner_fifos_0_0_V_V_empty_n, ap_predicate_op315_read_state11, inner_fifos_0_1_V_V_empty_n, ap_predicate_op324_read_state11, inner_fifos_0_2_V_V_empty_n, ap_predicate_op336_read_state11, inner_fifos_1_0_V_V_empty_n, ap_predicate_op351_read_state11, inner_fifos_1_0_V_V_full_n, ap_predicate_op369_write_state11)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op369_write_state11 = ap_const_boolean_1) and (inner_fifos_1_0_V_V_full_n = ap_const_logic_0)) or ((pe_input_stream_V_5_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_predicate_op351_read_state11 = ap_const_boolean_1) and (inner_fifos_1_0_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op336_read_state11 = ap_const_boolean_1) and (inner_fifos_0_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op324_read_state11 = ap_const_boolean_1) and (inner_fifos_0_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op315_read_state11 = ap_const_boolean_1) and (inner_fifos_0_0_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(pe_input_stream_V_5_full_n, ap_enable_reg_pp0_iter1, icmp_ln25_reg_1944_pp0_iter1_reg, inner_fifos_0_0_V_V_empty_n, ap_predicate_op315_read_state11, inner_fifos_0_1_V_V_empty_n, ap_predicate_op324_read_state11, inner_fifos_0_2_V_V_empty_n, ap_predicate_op336_read_state11, inner_fifos_1_0_V_V_empty_n, ap_predicate_op351_read_state11, inner_fifos_1_0_V_V_full_n, ap_predicate_op369_write_state11)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op369_write_state11 = ap_const_boolean_1) and (inner_fifos_1_0_V_V_full_n = ap_const_logic_0)) or ((pe_input_stream_V_5_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_predicate_op351_read_state11 = ap_const_boolean_1) and (inner_fifos_1_0_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op336_read_state11 = ap_const_boolean_1) and (inner_fifos_0_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op324_read_state11 = ap_const_boolean_1) and (inner_fifos_0_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op315_read_state11 = ap_const_boolean_1) and (inner_fifos_0_0_V_V_empty_n = ap_const_logic_0))));
    end process;

        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage4_iter1_assign_proc : process(pe_input_stream_V_5_full_n, icmp_ln25_reg_1944_pp0_iter1_reg, inner_fifos_0_0_V_V_empty_n, ap_predicate_op315_read_state11, inner_fifos_0_1_V_V_empty_n, ap_predicate_op324_read_state11, inner_fifos_0_2_V_V_empty_n, ap_predicate_op336_read_state11, inner_fifos_1_0_V_V_empty_n, ap_predicate_op351_read_state11, inner_fifos_1_0_V_V_full_n, ap_predicate_op369_write_state11)
    begin
                ap_block_state11_pp0_stage4_iter1 <= (((ap_predicate_op369_write_state11 = ap_const_boolean_1) and (inner_fifos_1_0_V_V_full_n = ap_const_logic_0)) or ((pe_input_stream_V_5_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_predicate_op351_read_state11 = ap_const_boolean_1) and (inner_fifos_1_0_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op336_read_state11 = ap_const_boolean_1) and (inner_fifos_0_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op324_read_state11 = ap_const_boolean_1) and (inner_fifos_0_1_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op315_read_state11 = ap_const_boolean_1) and (inner_fifos_0_0_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state12_pp0_stage0_iter2_assign_proc : process(pe_input_stream_V_0_full_n, inner_fifos_0_0_V_V_full_n, select_ln30_4_reg_2044_pp0_iter1_reg, inner_fifos_1_1_V_V_empty_n, ap_predicate_op391_read_state12, inner_fifos_1_2_V_V_empty_n, ap_predicate_op403_read_state12)
    begin
                ap_block_state12_pp0_stage0_iter2 <= ((pe_input_stream_V_0_full_n = ap_const_logic_0) or ((ap_predicate_op403_read_state12 = ap_const_boolean_1) and (inner_fifos_1_2_V_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op391_read_state12 = ap_const_boolean_1) and (inner_fifos_1_1_V_V_empty_n = ap_const_logic_0)) or ((select_ln30_4_reg_2044_pp0_iter1_reg = ap_const_lv1_1) and (inner_fifos_0_0_V_V_full_n = ap_const_logic_0)));
    end process;

        ap_block_state13_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp0_stage2_iter2_assign_proc : process(select_ln30_4_reg_2044_pp0_iter2_reg, inner_fifos_1_1_V_V_full_n, inner_fifos_1_2_V_V_full_n)
    begin
                ap_block_state14_pp0_stage2_iter2 <= (((inner_fifos_1_2_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1)) or ((inner_fifos_1_1_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1)));
    end process;


    ap_block_state15_pp0_stage3_iter2_assign_proc : process(pe_input_stream_V_3_full_n, pe_input_stream_V_4_full_n, pe_input_stream_V_6_full_n, pe_input_stream_V_7_full_n, pe_input_stream_V_8_full_n, pe_weight_stream_V_full_n, icmp_ln25_reg_1944_pp0_iter2_reg, select_ln30_4_reg_2044_pp0_iter2_reg, inner_fifos_0_1_V_V_full_n, inner_fifos_0_2_V_V_full_n)
    begin
                ap_block_state15_pp0_stage3_iter2 <= ((pe_input_stream_V_7_full_n = ap_const_logic_0) or (pe_input_stream_V_6_full_n = ap_const_logic_0) or (pe_input_stream_V_4_full_n = ap_const_logic_0) or (pe_input_stream_V_3_full_n = ap_const_logic_0) or ((pe_weight_stream_V_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0)) or ((pe_input_stream_V_8_full_n = ap_const_logic_0) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0)) or ((inner_fifos_0_2_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1)) or ((inner_fifos_0_1_V_V_full_n = ap_const_logic_0) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1)));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(weight_stream_V_empty_n, ap_predicate_op156_read_state3)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((weight_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op156_read_state3 = ap_const_boolean_1));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter1_assign_proc : process(pe_input_stream_V_1_full_n, pe_input_stream_V_2_full_n, icmp_ln25_reg_1944)
    begin
                ap_block_state7_pp0_stage0_iter1 <= (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (pe_input_stream_V_2_full_n = ap_const_logic_0)) or ((icmp_ln25_reg_1944 = ap_const_lv1_0) and (pe_input_stream_V_1_full_n = ap_const_logic_0)));
    end process;

        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1643_assign_proc : process(icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln70_fu_1117_p2)
    begin
                ap_condition_1643 <= ((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln70_fu_1117_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_1648_assign_proc : process(ap_CS_fsm_pp0_stage4, icmp_ln25_reg_1944_pp0_iter1_reg, icmp_ln70_reg_2115, select_ln30_3_reg_2038_pp0_iter1_reg, ap_block_pp0_stage4_11001)
    begin
                ap_condition_1648 <= ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_1653_assign_proc : process(ap_CS_fsm_pp0_stage4, icmp_ln25_reg_1944_pp0_iter1_reg, icmp_ln70_reg_2115, select_ln30_3_reg_2038_pp0_iter1_reg, ap_block_pp0_stage4_11001)
    begin
                ap_condition_1653 <= ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln70_reg_2115 = ap_const_lv1_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_636_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, icmp_ln25_reg_1944_pp0_iter1_reg, ap_block_pp0_stage4_11001)
    begin
                ap_condition_636 <= ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_706_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
                ap_condition_706 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter1_state11_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter1_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten209_phi_fu_474_p4_assign_proc : process(icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, indvar_flatten209_reg_470, add_ln25_reg_2095)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten209_phi_fu_474_p4 <= add_ln25_reg_2095;
        else 
            ap_phi_mux_indvar_flatten209_phi_fu_474_p4 <= indvar_flatten209_reg_470;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten97_phi_fu_497_p4_assign_proc : process(icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, indvar_flatten97_reg_493, select_ln27_7_reg_1995)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten97_phi_fu_497_p4 <= select_ln27_7_reg_1995;
        else 
            ap_phi_mux_indvar_flatten97_phi_fu_497_p4 <= indvar_flatten97_reg_493;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_519_p4_assign_proc : process(icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, indvar_flatten_reg_515, select_ln30_9_reg_2105)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten_phi_fu_519_p4 <= select_ln30_9_reg_2105;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_519_p4 <= indvar_flatten_reg_515;
        end if; 
    end process;


    ap_phi_mux_iwo_phi_fu_542_p4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln25_reg_1944_pp0_iter1_reg, iwo_reg_538, add_ln33_reg_2119)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_iwo_phi_fu_542_p4 <= add_ln33_reg_2119;
        else 
            ap_phi_mux_iwo_phi_fu_542_p4 <= iwo_reg_538;
        end if; 
    end process;


    ap_phi_mux_kernel_y_phi_fu_530_p4_assign_proc : process(icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, kernel_y_reg_526, select_ln30_8_reg_2058)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_y_phi_fu_530_p4 <= select_ln30_8_reg_2058;
        else 
            ap_phi_mux_kernel_y_phi_fu_530_p4 <= kernel_y_reg_526;
        end if; 
    end process;


    ap_phi_mux_output_x_phi_fu_486_p4_assign_proc : process(icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, output_x_reg_482, select_ln25_3_reg_1976)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_output_x_phi_fu_486_p4 <= select_ln25_3_reg_1976;
        else 
            ap_phi_mux_output_x_phi_fu_486_p4 <= output_x_reg_482;
        end if; 
    end process;


    ap_phi_mux_output_y_phi_fu_508_p4_assign_proc : process(icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, output_y_reg_504, select_ln27_6_reg_1985)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_output_y_phi_fu_508_p4 <= select_ln27_6_reg_1985;
        else 
            ap_phi_mux_output_y_phi_fu_508_p4 <= output_y_reg_504;
        end if; 
    end process;


    ap_predicate_op156_read_state3_assign_proc : process(icmp_ln25_reg_1944, select_ln27_1_reg_1981)
    begin
                ap_predicate_op156_read_state3 <= ((select_ln27_1_reg_1981 = ap_const_lv1_1) and (icmp_ln25_reg_1944 = ap_const_lv1_0));
    end process;


    ap_predicate_op315_read_state11_assign_proc : process(icmp_ln25_reg_1944_pp0_iter1_reg, icmp_ln70_reg_2115, select_ln30_3_reg_2038_pp0_iter1_reg)
    begin
                ap_predicate_op315_read_state11 <= ((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op324_read_state11_assign_proc : process(icmp_ln25_reg_1944_pp0_iter1_reg, icmp_ln70_reg_2115, select_ln30_3_reg_2038_pp0_iter1_reg)
    begin
                ap_predicate_op324_read_state11 <= ((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op336_read_state11_assign_proc : process(icmp_ln25_reg_1944_pp0_iter1_reg, icmp_ln70_reg_2115, select_ln30_3_reg_2038_pp0_iter1_reg)
    begin
                ap_predicate_op336_read_state11 <= ((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op351_read_state11_assign_proc : process(icmp_ln25_reg_1944_pp0_iter1_reg, icmp_ln70_reg_2115, select_ln30_3_reg_2038_pp0_iter1_reg)
    begin
                ap_predicate_op351_read_state11 <= ((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op369_write_state11_assign_proc : process(icmp_ln25_reg_1944_pp0_iter1_reg, select_ln30_4_reg_2044_pp0_iter1_reg)
    begin
                ap_predicate_op369_write_state11 <= ((select_ln30_4_reg_2044_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op391_read_state12_assign_proc : process(icmp_ln70_reg_2115, select_ln30_3_reg_2038_pp0_iter1_reg)
    begin
                ap_predicate_op391_read_state12 <= ((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0));
    end process;


    ap_predicate_op403_read_state12_assign_proc : process(icmp_ln70_reg_2115, select_ln30_3_reg_2038_pp0_iter1_reg)
    begin
                ap_predicate_op403_read_state12 <= ((select_ln30_3_reg_2038_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln70_reg_2115 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp28_fu_609_p2 <= "1" when (zext_ln27_fu_593_p1 = add_cast_fu_601_p3) else "0";
    cmp28_mid1149_fu_689_p2 <= "1" when (empty_23_fu_671_p2 = ap_const_lv2_0) else "0";
    cmp28_mid1_fu_747_p2 <= "1" when (zext_ln27_1_fu_685_p1 = add_cast_mid1_fu_739_p3) else "0";
    cmp56_fu_1435_p2 <= "1" when (select_ln30_reg_2021_pp0_iter1_reg = ap_const_lv2_0) else "0";
    cmp59_fu_807_p2 <= "1" when (kernel_y_reg_526 = ap_const_lv2_0) else "0";
    cmp59_mid1_fu_940_p2 <= "1" when (add_ln30_fu_886_p2 = ap_const_lv2_0) else "0";
    cmp65_fu_1440_p2 <= "0" when (select_ln30_reg_2021_pp0_iter1_reg = ap_const_lv2_0) else "1";
    empty_13_fu_587_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_output_x_phi_fu_486_p4),to_integer(unsigned('0' & ap_const_lv2_1(2-1 downto 0)))));
    empty_14_fu_801_p2 <= std_logic_vector(unsigned(p_shl_fu_793_p3) - unsigned(zext_ln30_fu_789_p1));
    empty_15_fu_1090_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(kernel_y_cast1_reg_1928));
    empty_17_fu_1199_p1 <= input_num_index_0_reg_2124(2 - 1 downto 0);
    empty_18_fu_1345_p1 <= input_num_index_1_reg_2129(2 - 1 downto 0);
    empty_20_fu_1360_p1 <= grp_fu_1050_p2(2 - 1 downto 0);
    empty_21_fu_1176_p2 <= std_logic_vector(unsigned(kernel_x_cast2_reg_2069) + unsigned(ap_const_lv3_2));
    empty_23_fu_671_p2 <= std_logic_vector(shift_left(unsigned(add_ln25_1_fu_665_p2),to_integer(unsigned('0' & ap_const_lv2_1(2-1 downto 0)))));
    empty_24_fu_1221_p1 <= input_num_index_0_mid1_reg_2139(2 - 1 downto 0);
    empty_25_fu_1390_p1 <= input_num_index_1_mid1_reg_2144(2 - 1 downto 0);
    empty_26_fu_1412_p1 <= grp_fu_1061_p2(2 - 1 downto 0);

    grp_fu_1026_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1026_ce <= ap_const_logic_1;
        else 
            grp_fu_1026_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1026_p0 <= std_logic_vector(unsigned(ap_const_lv3_3) + unsigned(kernel_x_cast2_fu_1017_p1));

    grp_fu_1039_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1039_ce <= ap_const_logic_1;
        else 
            grp_fu_1039_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1039_p0 <= (ap_const_lv1_1 & select_ln30_reg_2021);

    grp_fu_1050_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1050_ce <= ap_const_logic_1;
        else 
            grp_fu_1050_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1050_p0 <= std_logic_vector(signed(ap_const_lv3_5) + signed(kernel_y_cast1_reg_1928));

    grp_fu_1061_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1061_ce <= ap_const_logic_1;
        else 
            grp_fu_1061_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1061_p0 <= std_logic_vector(signed(ap_const_lv3_5) + signed(kernel_y_cast1_mid1_reg_2032));

    grp_fu_1078_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1078_ce <= ap_const_logic_1;
        else 
            grp_fu_1078_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1078_p0 <= std_logic_vector(signed(ap_const_lv3_5) + signed(kernel_x_cast2_reg_2069));

    grp_fu_625_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_625_ce <= ap_const_logic_1;
        else 
            grp_fu_625_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_625_p0 <= std_logic_vector(unsigned(ap_const_lv3_3) + unsigned(kernel_y_cast1_fu_615_p1));

    grp_fu_639_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_639_ce <= ap_const_logic_1;
        else 
            grp_fu_639_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_639_p0 <= (ap_const_lv1_1 & ap_phi_mux_kernel_y_phi_fu_530_p4);

    grp_fu_974_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_974_ce <= ap_const_logic_1;
        else 
            grp_fu_974_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_974_p0 <= std_logic_vector(unsigned(ap_const_lv3_3) + unsigned(kernel_y_cast1_mid1_fu_936_p1));

    grp_fu_988_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_988_ce <= ap_const_logic_1;
        else 
            grp_fu_988_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_988_p0 <= (ap_const_lv1_1 & add_ln30_fu_886_p2);
    icmp_ln25_fu_645_p2 <= "1" when (ap_phi_mux_indvar_flatten209_phi_fu_474_p4 = ap_const_lv6_24) else "0";
    icmp_ln27_fu_651_p2 <= "1" when (ap_phi_mux_indvar_flatten97_phi_fu_497_p4 = ap_const_lv6_12) else "0";
    icmp_ln30_fu_709_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_519_p4 = ap_const_lv4_9) else "0";
    icmp_ln33_fu_829_p2 <= "1" when (ap_phi_mux_iwo_phi_fu_542_p4 = ap_const_lv2_3) else "0";
    icmp_ln70_fu_1117_p2 <= "1" when (or_ln70_fu_1113_p2 = ap_const_lv2_0) else "0";

    inner_fifos_0_0_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_predicate_op315_read_state11, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_predicate_op315_read_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            inner_fifos_0_0_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_0_0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_0_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, select_ln30_4_reg_2044_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln30_4_reg_2044_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            inner_fifos_0_0_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_0_0_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_1_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_predicate_op324_read_state11, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_predicate_op324_read_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            inner_fifos_0_1_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_0_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_1_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, select_ln30_4_reg_2044_pp0_iter2_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            inner_fifos_0_1_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_0_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_2_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_predicate_op336_read_state11, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_predicate_op336_read_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            inner_fifos_0_2_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_0_2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_0_2_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, select_ln30_4_reg_2044_pp0_iter2_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            inner_fifos_0_2_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_0_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    inner_fifos_1_0_V_V_din <= 
        ap_const_lv8_0 when (cmp56_fu_1435_p2(0) = '1') else 
        input_registers_2_0_V_fu_162;

    inner_fifos_1_0_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_predicate_op351_read_state11, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_predicate_op351_read_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            inner_fifos_1_0_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_1_0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_1_0_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_predicate_op369_write_state11, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_predicate_op369_write_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            inner_fifos_1_0_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_1_0_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    inner_fifos_1_1_V_V_din <= 
        input_buffers_q1 when (cmp56_reg_2187(0) = '1') else 
        input_registers_2_1_V_fu_166;

    inner_fifos_1_1_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_predicate_op391_read_state12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op391_read_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            inner_fifos_1_1_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_1_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_1_1_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln30_4_reg_2044_pp0_iter2_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            inner_fifos_1_1_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_1_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    inner_fifos_1_2_V_V_din <= 
        input_buffers_q0 when (cmp56_reg_2187(0) = '1') else 
        input_registers_2_2_V_fu_170;

    inner_fifos_1_2_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_predicate_op403_read_state12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op403_read_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            inner_fifos_1_2_V_V_read <= ap_const_logic_1;
        else 
            inner_fifos_1_2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    inner_fifos_1_2_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln30_4_reg_2044_pp0_iter2_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (select_ln30_4_reg_2044_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            inner_fifos_1_2_V_V_write <= ap_const_logic_1;
        else 
            inner_fifos_1_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    input_buffers_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage2, zext_ln79_fu_1297_p1, zext_ln79_3_fu_1555_p1, zext_ln79_5_fu_1688_p1, zext_ln79_7_fu_1746_p1, zext_ln79_8_fu_1779_p1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffers_address0 <= zext_ln79_8_fu_1779_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffers_address0 <= zext_ln79_7_fu_1746_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffers_address0 <= zext_ln79_5_fu_1688_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            input_buffers_address0 <= zext_ln79_3_fu_1555_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            input_buffers_address0 <= zext_ln79_fu_1297_p1(6 - 1 downto 0);
        else 
            input_buffers_address0 <= "XXXXXX";
        end if; 
    end process;


    input_buffers_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, zext_ln79_1_fu_1340_p1, zext_ln79_4_fu_1565_p1, zext_ln79_2_fu_1630_p1, zext_ln79_6_fu_1742_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffers_address1 <= zext_ln79_6_fu_1742_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_buffers_address1 <= zext_ln79_2_fu_1630_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            input_buffers_address1 <= zext_ln79_4_fu_1565_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            input_buffers_address1 <= zext_ln79_1_fu_1340_p1(6 - 1 downto 0);
        else 
            input_buffers_address1 <= "XXXXXX";
        end if; 
    end process;


    input_buffers_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            input_buffers_ce0 <= ap_const_logic_1;
        else 
            input_buffers_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffers_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            input_buffers_ce1 <= ap_const_logic_1;
        else 
            input_buffers_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    input_depth_index_cast_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_depth_index_fu_1243_p3),6));
    input_depth_index_fu_1243_p3 <= (select_ln30_2_reg_2134 & tmp_2_reg_2149);
    input_registers_0_3_V_1_fu_1716_p3 <= 
        input_buffers_q1 when (and_ln71_fu_1711_p2(0) = '1') else 
        input_registers_0_2_V_fu_150;
    input_registers_1_3_V_1_fu_1729_p3 <= 
        input_buffers_q0 when (and_ln71_fu_1711_p2(0) = '1') else 
        input_registers_1_2_V_fu_154;
    input_registers_2_1_V_2_fu_1753_p3 <= 
        input_buffers_q1 when (cmp56_reg_2187(0) = '1') else 
        input_registers_2_1_V_fu_166;
    input_registers_2_2_V_2_fu_1766_p3 <= 
        input_buffers_q0 when (cmp56_reg_2187(0) = '1') else 
        input_registers_2_2_V_fu_170;
    input_registers_2_3_V_1_fu_1791_p3 <= 
        input_registers_2_2_V_fu_170 when (tmp_3_reg_2199(0) = '1') else 
        input_buffers_q0;
    kernel_x_cast2_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_reg_2021),3));
    kernel_y_cast1_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_kernel_y_phi_fu_530_p4),3));
    kernel_y_cast1_mid1_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_fu_886_p2),3));
    mul1_fu_1202_p5 <= (((empty_17_fu_1199_p1 & ap_const_lv1_0) & empty_17_fu_1199_p1) & ap_const_lv1_0);
    mul216_fu_1099_p0 <= ap_const_lv7_B(5 - 1 downto 0);
    mul216_fu_1099_p1 <= mul216_fu_1099_p10(3 - 1 downto 0);
    mul216_fu_1099_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_15_fu_1090_p2),7));
    mul218_fu_1155_p0 <= ap_const_lv7_B(5 - 1 downto 0);
    mul218_fu_1155_p1 <= mul218_fu_1155_p10(3 - 1 downto 0);
    mul218_fu_1155_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid16_fu_1146_p2),7));
    mul220_fu_1185_p0 <= mul220_fu_1185_p00(3 - 1 downto 0);
    mul220_fu_1185_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_21_fu_1176_p2),7));
    mul220_fu_1185_p1 <= ap_const_lv7_B(5 - 1 downto 0);
    mul46_1_fu_1348_p5 <= (((empty_18_fu_1345_p1 & ap_const_lv1_0) & empty_18_fu_1345_p1) & ap_const_lv1_0);
    mul46_1_mid1_fu_1393_p5 <= (((empty_25_fu_1390_p1 & ap_const_lv1_0) & empty_25_fu_1390_p1) & ap_const_lv1_0);
    mul46_2_fu_1364_p5 <= (((empty_20_fu_1360_p1 & ap_const_lv1_0) & empty_20_fu_1360_p1) & ap_const_lv1_0);
    mul46_2_mid1_fu_1416_p5 <= (((empty_26_fu_1412_p1 & ap_const_lv1_0) & empty_26_fu_1412_p1) & ap_const_lv1_0);
    mul46_mid1_fu_1224_p5 <= (((empty_24_fu_1221_p1 & ap_const_lv1_0) & empty_24_fu_1221_p1) & ap_const_lv1_0);
    notrhs_fu_813_p2 <= "0" when (kernel_y_reg_526 = ap_const_lv2_2) else "1";
    notrhs_mid1_fu_954_p2 <= "0" when (add_ln30_fu_886_p2 = ap_const_lv2_2) else "1";
    or_ln25_1_fu_824_p2 <= (notrhs_fu_813_p2 or icmp_ln27_reg_1948);
    or_ln25_fu_819_p2 <= (icmp_ln27_reg_1948 or cmp59_fu_807_p2);
    or_ln27_1_fu_865_p2 <= (xor_ln27_fu_860_p2 or icmp_ln27_reg_1948);
    or_ln27_2_fu_870_p2 <= (or_ln25_fu_819_p2 or and_ln25_2_reg_1968);
    or_ln27_3_fu_875_p2 <= (or_ln25_1_fu_824_p2 or and_ln25_2_reg_1968);
    or_ln27_fu_840_p2 <= (icmp_ln27_reg_1948 or and_ln25_2_reg_1968);
    or_ln30_1_fu_897_p2 <= (or_ln30_fu_892_p2 or icmp_ln27_reg_1948);
    or_ln30_fu_892_p2 <= (and_ln27_1_fu_880_p2 or and_ln25_2_reg_1968);
    or_ln70_fu_1113_p2 <= (select_ln30_reg_2021 or select_ln30_8_reg_2058);
    output_y_2_fu_729_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(select_ln25_fu_657_p3));
    p_mid16_fu_1146_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(kernel_y_cast1_mid1_reg_2032));
    p_mid1_fu_922_p2 <= std_logic_vector(unsigned(p_shl_mid1_fu_914_p3) - unsigned(zext_ln30_1_fu_910_p1));
    p_shl_fu_793_p3 <= (kernel_y_reg_526 & ap_const_lv2_0);
    p_shl_mid1_fu_914_p3 <= (add_ln30_fu_886_p2 & ap_const_lv2_0);

    pe_input_stream_V_0_blk_n_assign_proc : process(pe_input_stream_V_0_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_0_blk_n <= pe_input_stream_V_0_full_n;
        else 
            pe_input_stream_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_V_0_din <= input_registers_0_0_V_1_fu_174;

    pe_input_stream_V_0_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_0_write <= ap_const_logic_1;
        else 
            pe_input_stream_V_0_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_V_1_blk_n_assign_proc : process(pe_input_stream_V_1_full_n, icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            pe_input_stream_V_1_blk_n <= pe_input_stream_V_1_full_n;
        else 
            pe_input_stream_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_V_1_din <= input_registers_1_0_V_1_fu_186;

    pe_input_stream_V_1_write_assign_proc : process(icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            pe_input_stream_V_1_write <= ap_const_logic_1;
        else 
            pe_input_stream_V_1_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_V_2_blk_n_assign_proc : process(pe_input_stream_V_2_full_n, icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            pe_input_stream_V_2_blk_n <= pe_input_stream_V_2_full_n;
        else 
            pe_input_stream_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_V_2_din <= input_registers_V_2_0_3_fu_158;

    pe_input_stream_V_2_write_assign_proc : process(icmp_ln25_reg_1944, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            pe_input_stream_V_2_write <= ap_const_logic_1;
        else 
            pe_input_stream_V_2_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_V_3_blk_n_assign_proc : process(pe_input_stream_V_3_full_n, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_3_blk_n <= pe_input_stream_V_3_full_n;
        else 
            pe_input_stream_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_V_3_din <= input_registers_0_0_V_fu_178;

    pe_input_stream_V_3_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_3_write <= ap_const_logic_1;
        else 
            pe_input_stream_V_3_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_V_4_blk_n_assign_proc : process(pe_input_stream_V_4_full_n, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_4_blk_n <= pe_input_stream_V_4_full_n;
        else 
            pe_input_stream_V_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_V_4_din <= input_registers_1_0_V_fu_190;

    pe_input_stream_V_4_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_4_write <= ap_const_logic_1;
        else 
            pe_input_stream_V_4_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_V_5_blk_n_assign_proc : process(pe_input_stream_V_5_full_n, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, icmp_ln25_reg_1944_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            pe_input_stream_V_5_blk_n <= pe_input_stream_V_5_full_n;
        else 
            pe_input_stream_V_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_V_5_din <= input_registers_2_0_V_fu_162;

    pe_input_stream_V_5_write_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, icmp_ln25_reg_1944_pp0_iter1_reg, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln25_reg_1944_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            pe_input_stream_V_5_write <= ap_const_logic_1;
        else 
            pe_input_stream_V_5_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_V_6_blk_n_assign_proc : process(pe_input_stream_V_6_full_n, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_6_blk_n <= pe_input_stream_V_6_full_n;
        else 
            pe_input_stream_V_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_V_6_din <= input_registers_0_1_V_fu_182;

    pe_input_stream_V_6_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_6_write <= ap_const_logic_1;
        else 
            pe_input_stream_V_6_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_V_7_blk_n_assign_proc : process(pe_input_stream_V_7_full_n, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_7_blk_n <= pe_input_stream_V_7_full_n;
        else 
            pe_input_stream_V_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_V_7_din <= input_registers_1_1_V_fu_194;

    pe_input_stream_V_7_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_7_write <= ap_const_logic_1;
        else 
            pe_input_stream_V_7_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_input_stream_V_8_blk_n_assign_proc : process(pe_input_stream_V_8_full_n, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, icmp_ln25_reg_1944_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_8_blk_n <= pe_input_stream_V_8_full_n;
        else 
            pe_input_stream_V_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_input_stream_V_8_din <= input_registers_2_2_V_2_reg_2262;

    pe_input_stream_V_8_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, icmp_ln25_reg_1944_pp0_iter2_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_input_stream_V_8_write <= ap_const_logic_1;
        else 
            pe_input_stream_V_8_write <= ap_const_logic_0;
        end if; 
    end process;


    pe_weight_stream_V_blk_n_assign_proc : process(pe_weight_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, icmp_ln25_reg_1944_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_weight_stream_V_blk_n <= pe_weight_stream_V_full_n;
        else 
            pe_weight_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pe_weight_stream_V_din <= weight_registers_V_q0;

    pe_weight_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, icmp_ln25_reg_1944_pp0_iter2_reg, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln25_reg_1944_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pe_weight_stream_V_write <= ap_const_logic_1;
        else 
            pe_weight_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln25_1_fu_677_p3 <= 
        empty_23_fu_671_p2 when (icmp_ln27_fu_651_p2(0) = '1') else 
        empty_13_fu_587_p2;
    select_ln25_2_fu_695_p3 <= 
        cmp28_mid1149_fu_689_p2 when (icmp_ln27_fu_651_p2(0) = '1') else 
        cmp28_fu_609_p2;
    select_ln25_3_fu_721_p3 <= 
        add_ln25_1_fu_665_p2 when (icmp_ln27_fu_651_p2(0) = '1') else 
        ap_phi_mux_output_x_phi_fu_486_p4;
    select_ln25_fu_657_p3 <= 
        ap_const_lv2_0 when (icmp_ln27_fu_651_p2(0) = '1') else 
        ap_phi_mux_output_y_phi_fu_508_p4;
    select_ln27_1_fu_753_p3 <= 
        cmp28_mid1_fu_747_p2 when (and_ln25_2_fu_715_p2(0) = '1') else 
        select_ln25_2_fu_695_p3;
    select_ln27_2_fu_852_p3 <= 
        ap_const_lv4_0 when (or_ln27_fu_840_p2(0) = '1') else 
        empty_14_fu_801_p2;
    select_ln27_3_fu_1214_p3 <= 
        ap_const_lv6_0 when (or_ln27_reg_2000_pp0_iter1_reg(0) = '1') else 
        mul1_fu_1202_p5;
    select_ln27_4_fu_1376_p3 <= 
        ap_const_lv6_12 when (or_ln27_reg_2000_pp0_iter1_reg(0) = '1') else 
        mul46_1_fu_1348_p5;
    select_ln27_5_fu_1383_p3 <= 
        ap_const_lv6_24 when (or_ln27_reg_2000_pp0_iter1_reg(0) = '1') else 
        mul46_2_fu_1364_p5;
    select_ln27_6_fu_761_p3 <= 
        output_y_2_fu_729_p2 when (and_ln25_2_fu_715_p2(0) = '1') else 
        select_ln25_fu_657_p3;
    select_ln27_7_fu_781_p3 <= 
        ap_const_lv6_1 when (icmp_ln27_fu_651_p2(0) = '1') else 
        add_ln27_1_fu_775_p2;
    select_ln27_fu_844_p3 <= 
        ap_const_lv2_0 when (or_ln27_fu_840_p2(0) = '1') else 
        kernel_y_reg_526;
    select_ln30_1_fu_928_p3 <= 
        p_mid1_fu_922_p2 when (and_ln27_1_fu_880_p2(0) = '1') else 
        select_ln27_2_fu_852_p3;
    select_ln30_2_fu_1169_p3 <= 
        tmp_1_fu_1161_p3 when (and_ln27_1_reg_2013(0) = '1') else 
        and_ln27_fu_1141_p2;
    select_ln30_3_fu_946_p3 <= 
        cmp59_mid1_fu_940_p2 when (and_ln27_1_fu_880_p2(0) = '1') else 
        or_ln27_2_fu_870_p2;
    select_ln30_4_fu_960_p3 <= 
        notrhs_mid1_fu_954_p2 when (and_ln27_1_fu_880_p2(0) = '1') else 
        or_ln27_3_fu_875_p2;
    select_ln30_5_fu_1236_p3 <= 
        mul46_mid1_fu_1224_p5 when (and_ln27_1_reg_2013_pp0_iter1_reg(0) = '1') else 
        select_ln27_3_fu_1214_p3;
    select_ln30_6_fu_1405_p3 <= 
        mul46_1_mid1_fu_1393_p5 when (and_ln27_1_reg_2013_pp0_iter1_reg(0) = '1') else 
        select_ln27_4_fu_1376_p3;
    select_ln30_7_fu_1428_p3 <= 
        mul46_2_mid1_fu_1416_p5 when (and_ln27_1_reg_2013_pp0_iter1_reg(0) = '1') else 
        select_ln27_5_fu_1383_p3;
    select_ln30_8_fu_994_p3 <= 
        add_ln30_fu_886_p2 when (and_ln27_1_fu_880_p2(0) = '1') else 
        select_ln27_fu_844_p3;
    select_ln30_9_fu_1084_p3 <= 
        ap_const_lv4_1 when (or_ln27_reg_2000(0) = '1') else 
        add_ln30_1_reg_1990;
    select_ln30_fu_902_p3 <= 
        ap_const_lv2_0 when (or_ln30_1_fu_897_p2(0) = '1') else 
        ap_phi_mux_iwo_phi_fu_542_p4;
    select_ln75_fu_1579_p3 <= 
        ap_const_lv8_0 when (cmp56_fu_1435_p2(0) = '1') else 
        input_registers_2_0_V_fu_162;
    select_ln87_1_fu_1471_p3 <= 
        input_registers_0_1_V_fu_182 when (and_ln72_fu_1445_p2(0) = '1') else 
        input_registers_0_0_V_fu_178;
    select_ln87_2_fu_1497_p3 <= 
        input_registers_0_2_V_fu_150 when (and_ln72_fu_1445_p2(0) = '1') else 
        input_registers_0_1_V_fu_182;
    select_ln87_3_fu_1532_p3 <= 
        input_registers_1_0_V_fu_190 when (and_ln72_fu_1445_p2(0) = '1') else 
        input_registers_1_0_V_1_fu_186;
    select_ln87_4_fu_1639_p3 <= 
        input_registers_1_1_V_fu_194 when (and_ln72_reg_2193(0) = '1') else 
        input_registers_1_0_V_fu_190;
    select_ln87_5_fu_1661_p3 <= 
        input_registers_1_2_V_fu_154 when (and_ln72_reg_2193(0) = '1') else 
        input_registers_1_1_V_fu_194;
    select_ln87_fu_1450_p3 <= 
        input_registers_0_0_V_fu_178 when (and_ln72_fu_1445_p2(0) = '1') else 
        input_registers_0_0_V_1_fu_174;
    shl_ln62_1_fu_1318_p2 <= std_logic_vector(shift_left(unsigned(grp_fu_1039_p2),to_integer(unsigned('0' & ap_const_lv3_1(3-1 downto 0)))));
    shl_ln62_2_fu_1263_p3 <= (trunc_ln62_fu_1259_p1 & ap_const_lv3_0);
    shl_ln62_3_fu_1609_p2 <= std_logic_vector(shift_left(unsigned(grp_fu_1078_p2),to_integer(unsigned('0' & ap_const_lv3_1(3-1 downto 0)))));
    shl_ln62_4_fu_1306_p3 <= (trunc_ln62_1_fu_1302_p1 & ap_const_lv3_0);
    shl_ln62_6_fu_1597_p3 <= (trunc_ln62_2_fu_1593_p1 & ap_const_lv3_0);
    shl_ln62_fu_1275_p2 <= std_logic_vector(shift_left(unsigned(grp_fu_1026_p2),to_integer(unsigned('0' & ap_const_lv3_1(3-1 downto 0)))));
    sub_ln62_1_fu_1328_p2 <= std_logic_vector(unsigned(zext_ln62_2_fu_1314_p1) - unsigned(zext_ln62_3_fu_1324_p1));
    sub_ln62_2_fu_1619_p2 <= std_logic_vector(unsigned(zext_ln62_4_fu_1605_p1) - unsigned(zext_ln62_5_fu_1615_p1));
    sub_ln62_fu_1285_p2 <= std_logic_vector(unsigned(zext_ln62_fu_1271_p1) - unsigned(zext_ln62_1_fu_1281_p1));
    tmp_1_fu_1161_p3 <= mul218_fu_1155_p2(5 downto 5);
    trunc_ln27_1_fu_735_p1 <= output_y_2_fu_729_p2(1 - 1 downto 0);
    trunc_ln27_fu_597_p1 <= ap_phi_mux_output_y_phi_fu_508_p4(1 - 1 downto 0);
    trunc_ln62_1_fu_1302_p1 <= grp_fu_1039_p2(2 - 1 downto 0);
    trunc_ln62_2_fu_1593_p1 <= grp_fu_1078_p2(2 - 1 downto 0);
    trunc_ln62_fu_1259_p1 <= grp_fu_1026_p2(2 - 1 downto 0);

    weight_registers_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_enable_reg_pp0_iter2, zext_ln37_fu_1012_p1, zext_ln37_reg_2064_pp0_iter2_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            weight_registers_V_address0 <= zext_ln37_reg_2064_pp0_iter2_reg(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            weight_registers_V_address0 <= zext_ln37_fu_1012_p1(4 - 1 downto 0);
        else 
            weight_registers_V_address0 <= "XXXX";
        end if; 
    end process;


    weight_registers_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            weight_registers_V_ce0 <= ap_const_logic_1;
        else 
            weight_registers_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_registers_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln25_reg_1944, select_ln27_1_reg_1981, ap_block_pp0_stage1_11001)
    begin
        if (((select_ln27_1_reg_1981 = ap_const_lv1_1) and (icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            weight_registers_V_we0 <= ap_const_logic_1;
        else 
            weight_registers_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_stream_V_blk_n_assign_proc : process(weight_stream_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln25_reg_1944, select_ln27_1_reg_1981)
    begin
        if (((select_ln27_1_reg_1981 = ap_const_lv1_1) and (icmp_ln25_reg_1944 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            weight_stream_V_blk_n <= weight_stream_V_empty_n;
        else 
            weight_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    weight_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_predicate_op156_read_state3, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op156_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            weight_stream_V_read <= ap_const_logic_1;
        else 
            weight_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln25_fu_703_p2 <= (icmp_ln27_fu_651_p2 xor ap_const_lv1_1);
    xor_ln27_fu_860_p2 <= (icmp_ln30_reg_1963 xor ap_const_lv1_1);
    xor_ln71_fu_1706_p2 <= (tmp_3_reg_2199 xor ap_const_lv1_1);
    zext_ln182_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_fu_902_p3),4));
    zext_ln27_1_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln25_1_fu_677_p3),3));
    zext_ln27_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_13_fu_587_p2),3));
    zext_ln30_1_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_fu_886_p2),4));
    zext_ln30_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_y_reg_526),4));
    zext_ln37_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln35_fu_1006_p2),64));
    zext_ln62_1_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln62_fu_1275_p2),6));
    zext_ln62_2_fu_1314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln62_4_fu_1306_p3),6));
    zext_ln62_3_fu_1324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln62_1_fu_1318_p2),6));
    zext_ln62_4_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln62_6_fu_1597_p3),6));
    zext_ln62_5_fu_1615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln62_3_fu_1609_p2),6));
    zext_ln62_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln62_2_fu_1263_p3),6));
    zext_ln79_1_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_1_fu_1334_p2),64));
    zext_ln79_2_fu_1630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_2_fu_1625_p2),64));
    zext_ln79_3_fu_1555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_3_fu_1550_p2),64));
    zext_ln79_4_fu_1565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_4_fu_1560_p2),64));
    zext_ln79_5_fu_1688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_5_fu_1683_p2),64));
    zext_ln79_6_fu_1742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_6_reg_2237),64));
    zext_ln79_7_fu_1746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_7_reg_2242),64));
    zext_ln79_8_fu_1779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_8_reg_2247),64));
    zext_ln79_fu_1297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln62_fu_1291_p2),64));
end behav;
