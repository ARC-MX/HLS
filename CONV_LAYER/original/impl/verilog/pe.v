// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pe_pe,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.846000,HLS_SYN_LAT=191,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1060,HLS_SYN_LUT=1831,HLS_VERSION=2020_1}" *)

module pe (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_buffers_address0,
        input_buffers_ce0,
        input_buffers_q0,
        input_buffers_address1,
        input_buffers_ce1,
        input_buffers_q1,
        weight_stream_V_dout,
        weight_stream_V_empty_n,
        weight_stream_V_read,
        pe_input_stream_V_0_0_din,
        pe_input_stream_V_0_0_full_n,
        pe_input_stream_V_0_0_write,
        pe_input_stream_V_0_1_din,
        pe_input_stream_V_0_1_full_n,
        pe_input_stream_V_0_1_write,
        pe_input_stream_V_0_2_din,
        pe_input_stream_V_0_2_full_n,
        pe_input_stream_V_0_2_write,
        pe_input_stream_V_1_0_din,
        pe_input_stream_V_1_0_full_n,
        pe_input_stream_V_1_0_write,
        pe_input_stream_V_1_1_din,
        pe_input_stream_V_1_1_full_n,
        pe_input_stream_V_1_1_write,
        pe_input_stream_V_1_2_din,
        pe_input_stream_V_1_2_full_n,
        pe_input_stream_V_1_2_write,
        pe_input_stream_V_2_0_din,
        pe_input_stream_V_2_0_full_n,
        pe_input_stream_V_2_0_write,
        pe_input_stream_V_2_1_din,
        pe_input_stream_V_2_1_full_n,
        pe_input_stream_V_2_1_write,
        pe_input_stream_V_2_2_din,
        pe_input_stream_V_2_2_full_n,
        pe_input_stream_V_2_2_write,
        pe_weight_stream_V_din,
        pe_weight_stream_V_full_n,
        pe_weight_stream_V_write
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state16 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] input_buffers_address0;
output   input_buffers_ce0;
input  [7:0] input_buffers_q0;
output  [5:0] input_buffers_address1;
output   input_buffers_ce1;
input  [7:0] input_buffers_q1;
input  [7:0] weight_stream_V_dout;
input   weight_stream_V_empty_n;
output   weight_stream_V_read;
output  [7:0] pe_input_stream_V_0_0_din;
input   pe_input_stream_V_0_0_full_n;
output   pe_input_stream_V_0_0_write;
output  [7:0] pe_input_stream_V_0_1_din;
input   pe_input_stream_V_0_1_full_n;
output   pe_input_stream_V_0_1_write;
output  [7:0] pe_input_stream_V_0_2_din;
input   pe_input_stream_V_0_2_full_n;
output   pe_input_stream_V_0_2_write;
output  [7:0] pe_input_stream_V_1_0_din;
input   pe_input_stream_V_1_0_full_n;
output   pe_input_stream_V_1_0_write;
output  [7:0] pe_input_stream_V_1_1_din;
input   pe_input_stream_V_1_1_full_n;
output   pe_input_stream_V_1_1_write;
output  [7:0] pe_input_stream_V_1_2_din;
input   pe_input_stream_V_1_2_full_n;
output   pe_input_stream_V_1_2_write;
output  [7:0] pe_input_stream_V_2_0_din;
input   pe_input_stream_V_2_0_full_n;
output   pe_input_stream_V_2_0_write;
output  [7:0] pe_input_stream_V_2_1_din;
input   pe_input_stream_V_2_1_full_n;
output   pe_input_stream_V_2_1_write;
output  [7:0] pe_input_stream_V_2_2_din;
input   pe_input_stream_V_2_2_full_n;
output   pe_input_stream_V_2_2_write;
output  [7:0] pe_weight_stream_V_din;
input   pe_weight_stream_V_full_n;
output   pe_weight_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] input_buffers_address0;
reg input_buffers_ce0;
reg[5:0] input_buffers_address1;
reg input_buffers_ce1;
reg weight_stream_V_read;
reg pe_input_stream_V_0_0_write;
reg pe_input_stream_V_0_1_write;
reg pe_input_stream_V_0_2_write;
reg pe_input_stream_V_1_0_write;
reg pe_input_stream_V_1_1_write;
reg pe_input_stream_V_1_2_write;
reg pe_input_stream_V_2_0_write;
reg pe_input_stream_V_2_1_write;
reg pe_input_stream_V_2_2_write;
reg pe_weight_stream_V_write;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    weight_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln25_reg_1944;
reg   [0:0] select_ln27_1_reg_1981;
reg    pe_input_stream_V_0_0_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg    pe_input_stream_V_0_1_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg    pe_input_stream_V_0_2_blk_n;
reg    pe_input_stream_V_1_0_blk_n;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg    pe_input_stream_V_1_1_blk_n;
reg    pe_input_stream_V_1_2_blk_n;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] icmp_ln25_reg_1944_pp0_iter1_reg;
reg    pe_input_stream_V_2_0_blk_n;
reg    pe_input_stream_V_2_1_blk_n;
reg    pe_input_stream_V_2_2_blk_n;
reg   [0:0] icmp_ln25_reg_1944_pp0_iter2_reg;
reg    pe_weight_stream_V_blk_n;
reg   [5:0] indvar_flatten209_reg_470;
reg   [1:0] output_x_reg_482;
reg   [5:0] indvar_flatten97_reg_493;
reg   [1:0] output_y_reg_504;
reg   [3:0] indvar_flatten_reg_515;
reg   [1:0] kernel_y_reg_526;
reg   [1:0] iwo_reg_538;
wire   [2:0] kernel_y_cast1_fu_615_p1;
reg   [2:0] kernel_y_cast1_reg_1928;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state7_pp0_stage0_iter1;
wire    inner_fifos_0_0_V_V_full_n;
reg    inner_fifos_0_0_V_V_write;
reg   [0:0] select_ln30_4_reg_2044;
reg   [0:0] select_ln30_4_reg_2044_pp0_iter1_reg;
wire   [7:0] inner_fifos_1_1_V_V_dout;
wire    inner_fifos_1_1_V_V_empty_n;
reg    inner_fifos_1_1_V_V_read;
reg   [0:0] icmp_ln68_reg_2115;
reg   [0:0] select_ln30_3_reg_2038;
reg   [0:0] select_ln30_3_reg_2038_pp0_iter1_reg;
reg    ap_predicate_op391_read_state12;
wire   [7:0] inner_fifos_1_2_V_V_dout;
wire    inner_fifos_1_2_V_V_empty_n;
reg    inner_fifos_1_2_V_V_read;
reg    ap_predicate_op403_read_state12;
reg    ap_block_state12_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln25_fu_645_p2;
wire   [0:0] icmp_ln27_fu_651_p2;
reg   [0:0] icmp_ln27_reg_1948;
wire   [0:0] xor_ln25_fu_703_p2;
reg   [0:0] xor_ln25_reg_1957;
reg   [0:0] xor_ln25_reg_1957_pp0_iter1_reg;
wire   [0:0] icmp_ln30_fu_709_p2;
reg   [0:0] icmp_ln30_reg_1963;
wire   [0:0] and_ln25_2_fu_715_p2;
reg   [0:0] and_ln25_2_reg_1968;
wire   [1:0] select_ln25_3_fu_721_p3;
reg   [1:0] select_ln25_3_reg_1976;
wire   [0:0] select_ln27_1_fu_753_p3;
wire   [1:0] select_ln27_6_fu_761_p3;
reg   [1:0] select_ln27_6_reg_1985;
wire   [3:0] add_ln30_1_fu_769_p2;
reg   [3:0] add_ln30_1_reg_1990;
wire   [5:0] select_ln27_7_fu_781_p3;
reg   [5:0] select_ln27_7_reg_1995;
wire   [0:0] or_ln27_fu_840_p2;
reg   [0:0] or_ln27_reg_2000;
reg    ap_predicate_op156_read_state3;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] or_ln27_reg_2000_pp0_iter1_reg;
wire   [0:0] or_ln27_1_fu_865_p2;
reg   [0:0] or_ln27_1_reg_2008;
wire   [0:0] and_ln27_1_fu_880_p2;
reg   [0:0] and_ln27_1_reg_2013;
reg   [0:0] and_ln27_1_reg_2013_pp0_iter1_reg;
wire   [1:0] select_ln30_fu_902_p3;
reg   [1:0] select_ln30_reg_2021;
reg   [1:0] select_ln30_reg_2021_pp0_iter1_reg;
wire   [2:0] kernel_y_cast1_mid1_fu_936_p1;
reg   [2:0] kernel_y_cast1_mid1_reg_2032;
wire   [0:0] select_ln30_3_fu_946_p3;
wire   [0:0] select_ln30_4_fu_960_p3;
reg   [0:0] select_ln30_4_reg_2044_pp0_iter2_reg;
wire   [1:0] select_ln30_8_fu_994_p3;
reg   [1:0] select_ln30_8_reg_2058;
wire   [63:0] zext_ln37_fu_1012_p1;
reg   [63:0] zext_ln37_reg_2064;
reg   [63:0] zext_ln37_reg_2064_pp0_iter1_reg;
reg   [63:0] zext_ln37_reg_2064_pp0_iter2_reg;
wire   [2:0] kernel_x_cast2_fu_1017_p1;
reg   [2:0] kernel_x_cast2_reg_2069;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire   [7:0] inner_fifos_1_1_V_V_din;
wire    inner_fifos_1_1_V_V_full_n;
reg    inner_fifos_1_1_V_V_write;
wire   [7:0] inner_fifos_1_2_V_V_din;
wire    inner_fifos_1_2_V_V_full_n;
reg    inner_fifos_1_2_V_V_write;
reg    ap_block_state14_pp0_stage2_iter2;
reg    ap_block_pp0_stage2_11001;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    inner_fifos_0_1_V_V_full_n;
reg    inner_fifos_0_1_V_V_write;
wire    inner_fifos_0_2_V_V_full_n;
reg    inner_fifos_0_2_V_V_write;
reg    ap_block_state15_pp0_stage3_iter2;
reg    ap_block_pp0_stage3_11001;
wire   [5:0] add_ln25_fu_1067_p2;
reg   [5:0] add_ln25_reg_2095;
wire    ap_block_state6_pp0_stage4_iter0;
wire   [7:0] inner_fifos_0_0_V_V_dout;
wire    inner_fifos_0_0_V_V_empty_n;
reg    inner_fifos_0_0_V_V_read;
reg    ap_predicate_op315_read_state11;
wire   [7:0] inner_fifos_0_1_V_V_dout;
wire    inner_fifos_0_1_V_V_empty_n;
reg    inner_fifos_0_1_V_V_read;
reg    ap_predicate_op324_read_state11;
wire   [7:0] inner_fifos_0_2_V_V_dout;
wire    inner_fifos_0_2_V_V_empty_n;
reg    inner_fifos_0_2_V_V_read;
reg    ap_predicate_op336_read_state11;
wire   [7:0] inner_fifos_1_0_V_V_dout;
wire    inner_fifos_1_0_V_V_empty_n;
reg    inner_fifos_1_0_V_V_read;
reg    ap_predicate_op351_read_state11;
wire   [7:0] inner_fifos_1_0_V_V_din;
wire    inner_fifos_1_0_V_V_full_n;
reg    inner_fifos_1_0_V_V_write;
reg    ap_predicate_op369_write_state11;
reg    ap_block_state11_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
wire   [3:0] select_ln30_9_fu_1084_p3;
reg   [3:0] select_ln30_9_reg_2105;
reg   [0:0] tmp_reg_2110;
wire   [0:0] icmp_ln68_fu_1117_p2;
wire   [1:0] add_ln33_fu_1132_p2;
reg   [1:0] add_ln33_reg_2119;
wire   [1:0] grp_fu_625_p2;
reg   [1:0] input_num_index_0_reg_2124;
wire   [1:0] grp_fu_639_p2;
reg   [1:0] input_num_index_1_reg_2129;
wire   [0:0] select_ln30_2_fu_1169_p3;
reg   [0:0] select_ln30_2_reg_2134;
wire   [1:0] grp_fu_974_p2;
reg   [1:0] input_num_index_0_mid1_reg_2139;
wire   [1:0] grp_fu_988_p2;
reg   [1:0] input_num_index_1_mid1_reg_2144;
reg   [0:0] tmp_2_reg_2149;
wire   [5:0] input_depth_index_cast_fu_1249_p1;
reg   [5:0] input_depth_index_cast_reg_2154;
wire   [5:0] add_ln57_fu_1253_p2;
reg   [5:0] add_ln57_reg_2160;
wire   [5:0] sub_ln58_fu_1285_p2;
reg   [5:0] sub_ln58_reg_2165;
wire   [5:0] sub_ln58_1_fu_1328_p2;
reg   [5:0] sub_ln58_1_reg_2176;
wire   [0:0] cmp56_fu_1435_p2;
reg   [0:0] cmp56_reg_2187;
wire   [0:0] and_ln70_fu_1445_p2;
reg   [0:0] and_ln70_reg_2193;
reg   [0:0] tmp_3_reg_2199;
wire   [5:0] add_ln57_1_fu_1527_p2;
reg   [5:0] add_ln57_1_reg_2205;
wire   [5:0] add_ln57_2_fu_1574_p2;
reg   [5:0] add_ln57_2_reg_2220;
wire   [5:0] add_ln58_6_fu_1693_p2;
reg   [5:0] add_ln58_6_reg_2237;
wire   [5:0] add_ln58_7_fu_1697_p2;
reg   [5:0] add_ln58_7_reg_2242;
wire   [5:0] add_ln58_8_fu_1701_p2;
reg   [5:0] add_ln58_8_reg_2247;
wire   [7:0] input_registers_2_2_V_2_fu_1766_p3;
reg   [7:0] input_registers_2_2_V_2_reg_2262;
reg    ap_block_pp0_stage4_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter1_state11;
reg   [3:0] weight_registers_V_address0;
reg    weight_registers_V_ce0;
reg    weight_registers_V_we0;
wire   [7:0] weight_registers_V_q0;
reg   [5:0] ap_phi_mux_indvar_flatten209_phi_fu_474_p4;
reg   [1:0] ap_phi_mux_output_x_phi_fu_486_p4;
reg   [5:0] ap_phi_mux_indvar_flatten97_phi_fu_497_p4;
reg   [1:0] ap_phi_mux_output_y_phi_fu_508_p4;
reg   [3:0] ap_phi_mux_indvar_flatten_phi_fu_519_p4;
reg   [1:0] ap_phi_mux_kernel_y_phi_fu_530_p4;
reg   [1:0] ap_phi_mux_iwo_phi_fu_542_p4;
wire   [63:0] zext_ln76_fu_1297_p1;
wire   [63:0] zext_ln76_1_fu_1340_p1;
wire   [63:0] zext_ln76_3_fu_1555_p1;
wire   [63:0] zext_ln76_4_fu_1565_p1;
wire   [63:0] zext_ln76_2_fu_1630_p1;
wire   [63:0] zext_ln76_5_fu_1688_p1;
wire   [63:0] zext_ln76_6_fu_1742_p1;
wire   [63:0] zext_ln76_7_fu_1746_p1;
wire   [63:0] zext_ln76_8_fu_1779_p1;
wire    ap_block_pp0_stage2;
reg   [7:0] input_registers_0_2_V_fu_150;
wire   [7:0] input_registers_0_3_V_1_fu_1716_p3;
reg   [7:0] input_registers_1_2_V_fu_154;
wire   [7:0] input_registers_1_3_V_1_fu_1729_p3;
reg   [7:0] input_registers_V_2_0_3_fu_158;
wire   [7:0] select_ln73_fu_1579_p3;
reg   [7:0] input_registers_2_0_V_fu_162;
wire   [7:0] input_registers_2_1_V_2_fu_1753_p3;
reg   [7:0] input_registers_2_1_V_fu_166;
reg   [7:0] input_registers_2_2_V_fu_170;
wire   [7:0] input_registers_2_3_V_1_fu_1791_p3;
reg   [7:0] input_registers_0_0_V_1_fu_174;
wire   [7:0] select_ln78_fu_1450_p3;
reg   [7:0] input_registers_0_0_V_fu_178;
wire   [7:0] select_ln78_1_fu_1471_p3;
reg   [7:0] input_registers_0_1_V_fu_182;
wire   [7:0] select_ln78_2_fu_1497_p3;
reg   [7:0] input_registers_1_0_V_1_fu_186;
wire   [7:0] select_ln78_3_fu_1532_p3;
reg   [7:0] input_registers_1_0_V_fu_190;
wire   [7:0] select_ln78_4_fu_1639_p3;
reg   [7:0] input_registers_1_1_V_fu_194;
wire   [7:0] select_ln78_5_fu_1661_p3;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
wire   [1:0] empty_13_fu_587_p2;
wire   [0:0] trunc_ln27_fu_597_p1;
wire   [2:0] zext_ln27_fu_593_p1;
wire   [2:0] add_cast_fu_601_p3;
wire   [2:0] grp_fu_625_p0;
wire   [2:0] grp_fu_639_p0;
wire   [1:0] add_ln25_1_fu_665_p2;
wire   [1:0] empty_23_fu_671_p2;
wire   [1:0] select_ln25_1_fu_677_p3;
wire   [0:0] cmp28_mid1149_fu_689_p2;
wire   [0:0] cmp28_fu_609_p2;
wire   [1:0] select_ln25_fu_657_p3;
wire   [1:0] output_y_2_fu_729_p2;
wire   [0:0] trunc_ln27_1_fu_735_p1;
wire   [2:0] zext_ln27_1_fu_685_p1;
wire   [2:0] add_cast_mid1_fu_739_p3;
wire   [0:0] cmp28_mid1_fu_747_p2;
wire   [0:0] select_ln25_2_fu_695_p3;
wire   [5:0] add_ln27_1_fu_775_p2;
wire   [3:0] p_shl_fu_793_p3;
wire   [3:0] zext_ln30_fu_789_p1;
wire   [0:0] cmp59_fu_807_p2;
wire   [0:0] notrhs_fu_813_p2;
wire   [0:0] icmp_ln33_fu_829_p2;
wire   [3:0] empty_14_fu_801_p2;
wire   [0:0] xor_ln27_fu_860_p2;
wire   [0:0] or_ln25_fu_819_p2;
wire   [0:0] or_ln25_1_fu_824_p2;
wire   [0:0] and_ln25_1_fu_835_p2;
wire   [1:0] select_ln27_fu_844_p3;
wire   [0:0] or_ln30_fu_892_p2;
wire   [0:0] or_ln30_1_fu_897_p2;
wire   [1:0] add_ln30_fu_886_p2;
wire   [3:0] p_shl_mid1_fu_914_p3;
wire   [3:0] zext_ln30_1_fu_910_p1;
wire   [3:0] p_mid1_fu_922_p2;
wire   [3:0] select_ln27_2_fu_852_p3;
wire   [0:0] cmp59_mid1_fu_940_p2;
wire   [0:0] or_ln27_2_fu_870_p2;
wire   [0:0] notrhs_mid1_fu_954_p2;
wire   [0:0] or_ln27_3_fu_875_p2;
wire   [2:0] grp_fu_974_p0;
wire   [2:0] grp_fu_988_p0;
wire   [3:0] zext_ln182_fu_1002_p1;
wire   [3:0] select_ln30_1_fu_928_p3;
wire   [3:0] add_ln35_fu_1006_p2;
wire   [2:0] grp_fu_1026_p0;
wire   [2:0] grp_fu_1039_p0;
wire   [2:0] grp_fu_1050_p0;
wire   [2:0] grp_fu_1061_p0;
wire   [2:0] grp_fu_1078_p0;
wire   [2:0] empty_15_fu_1090_p2;
wire   [4:0] mul216_fu_1099_p0;
wire   [2:0] mul216_fu_1099_p1;
wire   [6:0] mul216_fu_1099_p2;
wire   [1:0] or_ln68_fu_1113_p2;
wire   [0:0] and_ln25_fu_1137_p2;
wire   [2:0] p_mid16_fu_1146_p2;
wire   [4:0] mul218_fu_1155_p0;
wire   [2:0] mul218_fu_1155_p1;
wire   [6:0] mul218_fu_1155_p2;
wire   [0:0] tmp_1_fu_1161_p3;
wire   [0:0] and_ln27_fu_1141_p2;
wire   [2:0] empty_21_fu_1176_p2;
wire   [2:0] mul220_fu_1185_p0;
wire   [4:0] mul220_fu_1185_p1;
wire   [6:0] mul220_fu_1185_p2;
wire   [1:0] empty_17_fu_1199_p1;
wire   [5:0] mul1_fu_1202_p5;
wire   [1:0] empty_24_fu_1221_p1;
wire   [5:0] mul46_mid1_fu_1224_p5;
wire   [5:0] select_ln27_3_fu_1214_p3;
wire   [1:0] input_depth_index_fu_1243_p3;
wire   [5:0] select_ln30_5_fu_1236_p3;
wire   [2:0] grp_fu_1026_p2;
wire   [1:0] trunc_ln58_fu_1259_p1;
wire   [4:0] shl_ln58_2_fu_1263_p3;
wire   [2:0] shl_ln58_fu_1275_p2;
wire   [5:0] zext_ln58_fu_1271_p1;
wire   [5:0] zext_ln58_1_fu_1281_p1;
wire   [5:0] add_ln58_fu_1291_p2;
wire   [2:0] grp_fu_1039_p2;
wire   [1:0] trunc_ln58_1_fu_1302_p1;
wire   [4:0] shl_ln58_4_fu_1306_p3;
wire   [2:0] shl_ln58_1_fu_1318_p2;
wire   [5:0] zext_ln58_2_fu_1314_p1;
wire   [5:0] zext_ln58_3_fu_1324_p1;
wire   [5:0] add_ln58_1_fu_1334_p2;
wire   [1:0] empty_18_fu_1345_p1;
wire   [1:0] grp_fu_1050_p2;
wire   [1:0] empty_20_fu_1360_p1;
wire   [5:0] mul46_1_fu_1348_p5;
wire   [5:0] mul46_2_fu_1364_p5;
wire   [1:0] empty_25_fu_1390_p1;
wire   [5:0] mul46_1_mid1_fu_1393_p5;
wire   [5:0] select_ln27_4_fu_1376_p3;
wire   [1:0] grp_fu_1061_p2;
wire   [1:0] empty_26_fu_1412_p1;
wire   [5:0] mul46_2_mid1_fu_1416_p5;
wire   [5:0] select_ln27_5_fu_1383_p3;
wire   [0:0] cmp65_fu_1440_p2;
wire   [5:0] select_ln30_6_fu_1405_p3;
wire   [5:0] add_ln58_3_fu_1550_p2;
wire   [5:0] add_ln58_4_fu_1560_p2;
wire   [5:0] select_ln30_7_fu_1428_p3;
wire   [2:0] grp_fu_1078_p2;
wire   [1:0] trunc_ln58_2_fu_1593_p1;
wire   [4:0] shl_ln58_6_fu_1597_p3;
wire   [2:0] shl_ln58_3_fu_1609_p2;
wire   [5:0] zext_ln58_4_fu_1605_p1;
wire   [5:0] zext_ln58_5_fu_1615_p1;
wire   [5:0] sub_ln58_2_fu_1619_p2;
wire   [5:0] add_ln58_2_fu_1625_p2;
wire   [5:0] add_ln58_5_fu_1683_p2;
wire   [0:0] xor_ln69_fu_1706_p2;
wire   [0:0] and_ln69_fu_1711_p2;
reg    grp_fu_625_ce;
reg    grp_fu_639_ce;
reg    grp_fu_974_ce;
reg    grp_fu_988_ce;
reg    grp_fu_1026_ce;
reg    grp_fu_1039_ce;
reg    grp_fu_1050_ce;
reg    grp_fu_1061_ce;
reg    grp_fu_1078_ce;
wire    ap_CS_fsm_state16;
reg   [6:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [6:0] mul216_fu_1099_p10;
wire   [6:0] mul218_fu_1155_p10;
wire   [6:0] mul220_fu_1185_p00;
reg    ap_condition_636;
reg    ap_condition_1643;
reg    ap_condition_1648;
reg    ap_condition_1653;
reg    ap_condition_706;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

pe_weight_registers_V #(
    .DataWidth( 8 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_registers_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_registers_V_address0),
    .ce0(weight_registers_V_ce0),
    .we0(weight_registers_V_we0),
    .d0(weight_stream_V_dout),
    .q0(weight_registers_V_q0)
);

pe_urem_3ns_3ns_2_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_3ns_3ns_2_7_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_625_p0),
    .din1(3'd3),
    .ce(grp_fu_625_ce),
    .dout(grp_fu_625_p2)
);

pe_urem_3ns_3ns_2_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_3ns_3ns_2_7_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_639_p0),
    .din1(3'd3),
    .ce(grp_fu_639_ce),
    .dout(grp_fu_639_p2)
);

pe_urem_3ns_3ns_2_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_3ns_3ns_2_7_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_974_p0),
    .din1(3'd3),
    .ce(grp_fu_974_ce),
    .dout(grp_fu_974_p2)
);

pe_urem_3ns_3ns_2_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_3ns_3ns_2_7_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_988_p0),
    .din1(3'd3),
    .ce(grp_fu_988_ce),
    .dout(grp_fu_988_p2)
);

pe_urem_3ns_3ns_3_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
urem_3ns_3ns_3_7_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1026_p0),
    .din1(3'd3),
    .ce(grp_fu_1026_ce),
    .dout(grp_fu_1026_p2)
);

pe_urem_3ns_3ns_3_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
urem_3ns_3ns_3_7_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1039_p0),
    .din1(3'd3),
    .ce(grp_fu_1039_ce),
    .dout(grp_fu_1039_p2)
);

pe_urem_3ns_3ns_2_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_3ns_3ns_2_7_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1050_p0),
    .din1(3'd3),
    .ce(grp_fu_1050_ce),
    .dout(grp_fu_1050_p2)
);

pe_urem_3ns_3ns_2_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_3ns_3ns_2_7_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1061_p0),
    .din1(3'd3),
    .ce(grp_fu_1061_ce),
    .dout(grp_fu_1061_p2)
);

pe_urem_3ns_3ns_3_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
urem_3ns_3ns_3_7_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1078_p0),
    .din1(3'd3),
    .ce(grp_fu_1078_ce),
    .dout(grp_fu_1078_p2)
);

pe_mul_5ns_3ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
mul_5ns_3ns_7_1_1_U10(
    .din0(mul216_fu_1099_p0),
    .din1(mul216_fu_1099_p1),
    .dout(mul216_fu_1099_p2)
);

pe_mul_5ns_3ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
mul_5ns_3ns_7_1_1_U11(
    .din0(mul218_fu_1155_p0),
    .din1(mul218_fu_1155_p1),
    .dout(mul218_fu_1155_p2)
);

pe_mul_3ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_3ns_5ns_7_1_1_U12(
    .din0(mul220_fu_1185_p0),
    .din1(mul220_fu_1185_p1),
    .dout(mul220_fu_1185_p2)
);

pe_fifo_w8_d6_S inner_fifos_0_0_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(input_registers_1_0_V_1_fu_186),
    .if_full_n(inner_fifos_0_0_V_V_full_n),
    .if_write(inner_fifos_0_0_V_V_write),
    .if_dout(inner_fifos_0_0_V_V_dout),
    .if_empty_n(inner_fifos_0_0_V_V_empty_n),
    .if_read(inner_fifos_0_0_V_V_read)
);

pe_fifo_w8_d6_S inner_fifos_0_1_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(input_registers_1_0_V_fu_190),
    .if_full_n(inner_fifos_0_1_V_V_full_n),
    .if_write(inner_fifos_0_1_V_V_write),
    .if_dout(inner_fifos_0_1_V_V_dout),
    .if_empty_n(inner_fifos_0_1_V_V_empty_n),
    .if_read(inner_fifos_0_1_V_V_read)
);

pe_fifo_w8_d6_S inner_fifos_0_2_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(input_registers_1_1_V_fu_194),
    .if_full_n(inner_fifos_0_2_V_V_full_n),
    .if_write(inner_fifos_0_2_V_V_write),
    .if_dout(inner_fifos_0_2_V_V_dout),
    .if_empty_n(inner_fifos_0_2_V_V_empty_n),
    .if_read(inner_fifos_0_2_V_V_read)
);

pe_fifo_w8_d6_S inner_fifos_1_0_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(inner_fifos_1_0_V_V_din),
    .if_full_n(inner_fifos_1_0_V_V_full_n),
    .if_write(inner_fifos_1_0_V_V_write),
    .if_dout(inner_fifos_1_0_V_V_dout),
    .if_empty_n(inner_fifos_1_0_V_V_empty_n),
    .if_read(inner_fifos_1_0_V_V_read)
);

pe_fifo_w8_d6_S inner_fifos_1_1_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(inner_fifos_1_1_V_V_din),
    .if_full_n(inner_fifos_1_1_V_V_full_n),
    .if_write(inner_fifos_1_1_V_V_write),
    .if_dout(inner_fifos_1_1_V_V_dout),
    .if_empty_n(inner_fifos_1_1_V_V_empty_n),
    .if_read(inner_fifos_1_1_V_V_read)
);

pe_fifo_w8_d6_S inner_fifos_1_2_V_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(inner_fifos_1_2_V_V_din),
    .if_full_n(inner_fifos_1_2_V_V_full_n),
    .if_write(inner_fifos_1_2_V_V_write),
    .if_dout(inner_fifos_1_2_V_V_dout),
    .if_empty_n(inner_fifos_1_2_V_V_empty_n),
    .if_read(inner_fifos_1_2_V_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter1_state11) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state11) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten209_reg_470 <= add_ln25_reg_2095;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten209_reg_470 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten97_reg_493 <= select_ln27_7_reg_1995;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten97_reg_493 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_515 <= select_ln30_9_reg_2105;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_515 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln30_3_reg_2038_pp0_iter1_reg == 1'd1) & (icmp_ln68_reg_2115 == 1'd0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_registers_0_0_V_1_fu_174 <= select_ln78_fu_1450_p3;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_registers_0_0_V_1_fu_174 <= inner_fifos_0_0_V_V_dout;
    end else if ((((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln68_fu_1117_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        input_registers_0_0_V_1_fu_174 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_636)) begin
        if ((icmp_ln68_reg_2115 == 1'd1)) begin
            input_registers_0_0_V_fu_178 <= input_buffers_q0;
        end else if (((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd1) & (icmp_ln68_reg_2115 == 1'd0))) begin
            input_registers_0_0_V_fu_178 <= select_ln78_1_fu_1471_p3;
        end else if (((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0))) begin
            input_registers_0_0_V_fu_178 <= inner_fifos_0_1_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_636)) begin
        if ((icmp_ln68_reg_2115 == 1'd1)) begin
            input_registers_0_1_V_fu_182 <= input_buffers_q1;
        end else if (((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd1) & (icmp_ln68_reg_2115 == 1'd0))) begin
            input_registers_0_1_V_fu_182 <= select_ln78_2_fu_1497_p3;
        end else if (((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0))) begin
            input_registers_0_1_V_fu_182 <= inner_fifos_0_2_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_1653)) begin
            input_registers_1_0_V_1_fu_186 <= select_ln78_3_fu_1532_p3;
        end else if ((1'b1 == ap_condition_1648)) begin
            input_registers_1_0_V_1_fu_186 <= inner_fifos_1_0_V_V_dout;
        end else if ((1'b1 == ap_condition_1643)) begin
            input_registers_1_0_V_1_fu_186 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_706)) begin
        if ((icmp_ln68_reg_2115 == 1'd1)) begin
            input_registers_1_0_V_fu_190 <= input_buffers_q0;
        end else if (((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd1) & (icmp_ln68_reg_2115 == 1'd0))) begin
            input_registers_1_0_V_fu_190 <= select_ln78_4_fu_1639_p3;
        end else if (((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0))) begin
            input_registers_1_0_V_fu_190 <= inner_fifos_1_1_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_706)) begin
        if ((icmp_ln68_reg_2115 == 1'd1)) begin
            input_registers_1_1_V_fu_194 <= input_buffers_q1;
        end else if (((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd1) & (icmp_ln68_reg_2115 == 1'd0))) begin
            input_registers_1_1_V_fu_194 <= select_ln78_5_fu_1661_p3;
        end else if (((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0))) begin
            input_registers_1_1_V_fu_194 <= inner_fifos_1_2_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        iwo_reg_538 <= add_ln33_reg_2119;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        iwo_reg_538 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_y_reg_526 <= select_ln30_8_reg_2058;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        kernel_y_reg_526 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        output_x_reg_482 <= select_ln25_3_reg_1976;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        output_x_reg_482 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        output_y_reg_504 <= select_ln27_6_reg_1985;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        output_y_reg_504 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln25_reg_2095 <= add_ln25_fu_1067_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln25_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln30_1_reg_1990 <= add_ln30_1_fu_769_p2;
        and_ln25_2_reg_1968 <= and_ln25_2_fu_715_p2;
        icmp_ln27_reg_1948 <= icmp_ln27_fu_651_p2;
        icmp_ln30_reg_1963 <= icmp_ln30_fu_709_p2;
        select_ln27_1_reg_1981 <= select_ln27_1_fu_753_p3;
        xor_ln25_reg_1957 <= xor_ln25_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add_ln33_reg_2119 <= add_ln33_fu_1132_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0))) begin
        add_ln57_1_reg_2205 <= add_ln57_1_fu_1527_p2;
        add_ln57_2_reg_2220 <= add_ln57_2_fu_1574_p2;
        and_ln70_reg_2193 <= and_ln70_fu_1445_p2;
        cmp56_reg_2187 <= cmp56_fu_1435_p2;
        tmp_3_reg_2199 <= select_ln30_reg_2021_pp0_iter1_reg[32'd1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0))) begin
        add_ln57_reg_2160 <= add_ln57_fu_1253_p2;
        input_depth_index_cast_reg_2154[1 : 0] <= input_depth_index_cast_fu_1249_p1[1 : 0];
        sub_ln58_1_reg_2176[5 : 1] <= sub_ln58_1_fu_1328_p2[5 : 1];
        sub_ln58_reg_2165[5 : 1] <= sub_ln58_fu_1285_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp56_reg_2187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln58_6_reg_2237 <= add_ln58_6_fu_1693_p2;
        add_ln58_7_reg_2242 <= add_ln58_7_fu_1697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_3_reg_2199 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0))) begin
        add_ln58_8_reg_2247 <= add_ln58_8_fu_1701_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln27_1_reg_2013 <= and_ln27_1_fu_880_p2;
        kernel_y_cast1_mid1_reg_2032[1 : 0] <= kernel_y_cast1_mid1_fu_936_p1[1 : 0];
        or_ln27_1_reg_2008 <= or_ln27_1_fu_865_p2;
        or_ln27_reg_2000 <= or_ln27_fu_840_p2;
        select_ln30_3_reg_2038 <= select_ln30_3_fu_946_p3;
        select_ln30_4_reg_2044 <= select_ln30_4_fu_960_p3;
        select_ln30_reg_2021 <= select_ln30_fu_902_p3;
        zext_ln37_reg_2064[3 : 0] <= zext_ln37_fu_1012_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln27_1_reg_2013_pp0_iter1_reg <= and_ln27_1_reg_2013;
        input_num_index_0_reg_2124 <= grp_fu_625_p2;
        input_num_index_1_reg_2129 <= grp_fu_639_p2;
        or_ln27_reg_2000_pp0_iter1_reg <= or_ln27_reg_2000;
        select_ln30_3_reg_2038_pp0_iter1_reg <= select_ln30_3_reg_2038;
        select_ln30_4_reg_2044_pp0_iter1_reg <= select_ln30_4_reg_2044;
        select_ln30_4_reg_2044_pp0_iter2_reg <= select_ln30_4_reg_2044_pp0_iter1_reg;
        select_ln30_reg_2021_pp0_iter1_reg <= select_ln30_reg_2021;
        zext_ln37_reg_2064_pp0_iter1_reg[3 : 0] <= zext_ln37_reg_2064[3 : 0];
        zext_ln37_reg_2064_pp0_iter2_reg[3 : 0] <= zext_ln37_reg_2064_pp0_iter1_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln25_reg_1944 <= icmp_ln25_fu_645_p2;
        icmp_ln25_reg_1944_pp0_iter1_reg <= icmp_ln25_reg_1944;
        icmp_ln25_reg_1944_pp0_iter2_reg <= icmp_ln25_reg_1944_pp0_iter1_reg;
        kernel_y_cast1_reg_1928[1 : 0] <= kernel_y_cast1_fu_615_p1[1 : 0];
        xor_ln25_reg_1957_pp0_iter1_reg <= xor_ln25_reg_1957;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln68_reg_2115 <= icmp_ln68_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0))) begin
        input_num_index_0_mid1_reg_2139 <= grp_fu_974_p2;
        input_num_index_1_mid1_reg_2144 <= grp_fu_988_p2;
        tmp_2_reg_2149 <= mul220_fu_1185_p2[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_registers_0_2_V_fu_150 <= input_registers_0_3_V_1_fu_1716_p3;
        input_registers_1_2_V_fu_154 <= input_registers_1_3_V_1_fu_1729_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_registers_2_0_V_fu_162 <= input_registers_2_1_V_2_fu_1753_p3;
        input_registers_2_1_V_fu_166 <= input_registers_2_2_V_2_fu_1766_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_registers_2_2_V_2_reg_2262 <= input_registers_2_2_V_2_fu_1766_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_registers_2_2_V_fu_170 <= input_registers_2_3_V_1_fu_1791_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_registers_V_2_0_3_fu_158 <= select_ln73_fu_1579_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        kernel_x_cast2_reg_2069[1 : 0] <= kernel_x_cast2_fu_1017_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln25_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln25_3_reg_1976 <= select_ln25_3_fu_721_p3;
        select_ln27_6_reg_1985 <= select_ln27_6_fu_761_p3;
        select_ln27_7_reg_1995 <= select_ln27_7_fu_781_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0))) begin
        select_ln30_2_reg_2134 <= select_ln30_2_fu_1169_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln30_8_reg_2058 <= select_ln30_8_fu_994_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        select_ln30_9_reg_2105 <= select_ln30_9_fu_1084_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln27_1_reg_2013) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_2110 <= mul216_fu_1099_p2[32'd5];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state11 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten209_phi_fu_474_p4 = add_ln25_reg_2095;
    end else begin
        ap_phi_mux_indvar_flatten209_phi_fu_474_p4 = indvar_flatten209_reg_470;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten97_phi_fu_497_p4 = select_ln27_7_reg_1995;
    end else begin
        ap_phi_mux_indvar_flatten97_phi_fu_497_p4 = indvar_flatten97_reg_493;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_519_p4 = select_ln30_9_reg_2105;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_519_p4 = indvar_flatten_reg_515;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_iwo_phi_fu_542_p4 = add_ln33_reg_2119;
    end else begin
        ap_phi_mux_iwo_phi_fu_542_p4 = iwo_reg_538;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_kernel_y_phi_fu_530_p4 = select_ln30_8_reg_2058;
    end else begin
        ap_phi_mux_kernel_y_phi_fu_530_p4 = kernel_y_reg_526;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_output_x_phi_fu_486_p4 = select_ln25_3_reg_1976;
    end else begin
        ap_phi_mux_output_x_phi_fu_486_p4 = output_x_reg_482;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_output_y_phi_fu_508_p4 = select_ln27_6_reg_1985;
    end else begin
        ap_phi_mux_output_y_phi_fu_508_p4 = output_y_reg_504;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1026_ce = 1'b1;
    end else begin
        grp_fu_1026_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1039_ce = 1'b1;
    end else begin
        grp_fu_1039_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1050_ce = 1'b1;
    end else begin
        grp_fu_1050_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1061_ce = 1'b1;
    end else begin
        grp_fu_1061_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1078_ce = 1'b1;
    end else begin
        grp_fu_1078_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_625_ce = 1'b1;
    end else begin
        grp_fu_625_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_639_ce = 1'b1;
    end else begin
        grp_fu_639_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_974_ce = 1'b1;
    end else begin
        grp_fu_974_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_988_ce = 1'b1;
    end else begin
        grp_fu_988_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op315_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        inner_fifos_0_0_V_V_read = 1'b1;
    end else begin
        inner_fifos_0_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln30_4_reg_2044_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        inner_fifos_0_0_V_V_write = 1'b1;
    end else begin
        inner_fifos_0_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op324_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        inner_fifos_0_1_V_V_read = 1'b1;
    end else begin
        inner_fifos_0_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        inner_fifos_0_1_V_V_write = 1'b1;
    end else begin
        inner_fifos_0_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op336_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        inner_fifos_0_2_V_V_read = 1'b1;
    end else begin
        inner_fifos_0_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        inner_fifos_0_2_V_V_write = 1'b1;
    end else begin
        inner_fifos_0_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op351_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        inner_fifos_1_0_V_V_read = 1'b1;
    end else begin
        inner_fifos_1_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op369_write_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        inner_fifos_1_0_V_V_write = 1'b1;
    end else begin
        inner_fifos_1_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op391_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        inner_fifos_1_1_V_V_read = 1'b1;
    end else begin
        inner_fifos_1_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        inner_fifos_1_1_V_V_write = 1'b1;
    end else begin
        inner_fifos_1_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op403_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        inner_fifos_1_2_V_V_read = 1'b1;
    end else begin
        inner_fifos_1_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        inner_fifos_1_2_V_V_write = 1'b1;
    end else begin
        inner_fifos_1_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffers_address0 = zext_ln76_8_fu_1779_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffers_address0 = zext_ln76_7_fu_1746_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffers_address0 = zext_ln76_5_fu_1688_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_buffers_address0 = zext_ln76_3_fu_1555_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_buffers_address0 = zext_ln76_fu_1297_p1;
    end else begin
        input_buffers_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffers_address1 = zext_ln76_6_fu_1742_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_buffers_address1 = zext_ln76_2_fu_1630_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_buffers_address1 = zext_ln76_4_fu_1565_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_buffers_address1 = zext_ln76_1_fu_1340_p1;
    end else begin
        input_buffers_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        input_buffers_ce0 = 1'b1;
    end else begin
        input_buffers_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        input_buffers_ce1 = 1'b1;
    end else begin
        input_buffers_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_0_0_blk_n = pe_input_stream_V_0_0_full_n;
    end else begin
        pe_input_stream_V_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_0_0_write = 1'b1;
    end else begin
        pe_input_stream_V_0_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        pe_input_stream_V_0_1_blk_n = pe_input_stream_V_0_1_full_n;
    end else begin
        pe_input_stream_V_0_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        pe_input_stream_V_0_1_write = 1'b1;
    end else begin
        pe_input_stream_V_0_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        pe_input_stream_V_0_2_blk_n = pe_input_stream_V_0_2_full_n;
    end else begin
        pe_input_stream_V_0_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        pe_input_stream_V_0_2_write = 1'b1;
    end else begin
        pe_input_stream_V_0_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_1_0_blk_n = pe_input_stream_V_1_0_full_n;
    end else begin
        pe_input_stream_V_1_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_1_0_write = 1'b1;
    end else begin
        pe_input_stream_V_1_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_1_1_blk_n = pe_input_stream_V_1_1_full_n;
    end else begin
        pe_input_stream_V_1_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_1_1_write = 1'b1;
    end else begin
        pe_input_stream_V_1_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        pe_input_stream_V_1_2_blk_n = pe_input_stream_V_1_2_full_n;
    end else begin
        pe_input_stream_V_1_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        pe_input_stream_V_1_2_write = 1'b1;
    end else begin
        pe_input_stream_V_1_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_2_0_blk_n = pe_input_stream_V_2_0_full_n;
    end else begin
        pe_input_stream_V_2_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_2_0_write = 1'b1;
    end else begin
        pe_input_stream_V_2_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_2_1_blk_n = pe_input_stream_V_2_1_full_n;
    end else begin
        pe_input_stream_V_2_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_2_1_write = 1'b1;
    end else begin
        pe_input_stream_V_2_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_2_2_blk_n = pe_input_stream_V_2_2_full_n;
    end else begin
        pe_input_stream_V_2_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_input_stream_V_2_2_write = 1'b1;
    end else begin
        pe_input_stream_V_2_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_weight_stream_V_blk_n = pe_weight_stream_V_full_n;
    end else begin
        pe_weight_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pe_weight_stream_V_write = 1'b1;
    end else begin
        pe_weight_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weight_registers_V_address0 = zext_ln37_reg_2064_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weight_registers_V_address0 = zext_ln37_fu_1012_p1;
    end else begin
        weight_registers_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        weight_registers_V_ce0 = 1'b1;
    end else begin
        weight_registers_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln27_1_reg_1981 == 1'd1) & (icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weight_registers_V_we0 = 1'b1;
    end else begin
        weight_registers_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln27_1_reg_1981 == 1'd1) & (icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weight_stream_V_blk_n = weight_stream_V_empty_n;
    end else begin
        weight_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op156_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weight_stream_V_read = 1'b1;
    end else begin
        weight_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_cast_fu_601_p3 = ((trunc_ln27_fu_597_p1[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign add_cast_mid1_fu_739_p3 = ((trunc_ln27_1_fu_735_p1[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign add_ln25_1_fu_665_p2 = (2'd1 + ap_phi_mux_output_x_phi_fu_486_p4);

assign add_ln25_fu_1067_p2 = (6'd1 + indvar_flatten209_reg_470);

assign add_ln27_1_fu_775_p2 = (ap_phi_mux_indvar_flatten97_phi_fu_497_p4 + 6'd1);

assign add_ln30_1_fu_769_p2 = (ap_phi_mux_indvar_flatten_phi_fu_519_p4 + 4'd1);

assign add_ln30_fu_886_p2 = (2'd1 + select_ln27_fu_844_p3);

assign add_ln33_fu_1132_p2 = (select_ln30_reg_2021 + 2'd1);

assign add_ln35_fu_1006_p2 = (zext_ln182_fu_1002_p1 + select_ln30_1_fu_928_p3);

assign add_ln57_1_fu_1527_p2 = (input_depth_index_cast_reg_2154 + select_ln30_6_fu_1405_p3);

assign add_ln57_2_fu_1574_p2 = (select_ln30_7_fu_1428_p3 + input_depth_index_cast_reg_2154);

assign add_ln57_fu_1253_p2 = (select_ln30_5_fu_1236_p3 + input_depth_index_cast_fu_1249_p1);

assign add_ln58_1_fu_1334_p2 = (sub_ln58_1_fu_1328_p2 + add_ln57_fu_1253_p2);

assign add_ln58_2_fu_1625_p2 = (sub_ln58_2_fu_1619_p2 + add_ln57_reg_2160);

assign add_ln58_3_fu_1550_p2 = (add_ln57_1_fu_1527_p2 + sub_ln58_reg_2165);

assign add_ln58_4_fu_1560_p2 = (add_ln57_1_fu_1527_p2 + sub_ln58_1_reg_2176);

assign add_ln58_5_fu_1683_p2 = (add_ln57_1_reg_2205 + sub_ln58_2_fu_1619_p2);

assign add_ln58_6_fu_1693_p2 = (add_ln57_2_reg_2220 + sub_ln58_reg_2165);

assign add_ln58_7_fu_1697_p2 = (add_ln57_2_reg_2220 + sub_ln58_1_reg_2176);

assign add_ln58_8_fu_1701_p2 = (sub_ln58_2_fu_1619_p2 + add_ln57_2_reg_2220);

assign add_ln58_fu_1291_p2 = (sub_ln58_fu_1285_p2 + add_ln57_fu_1253_p2);

assign and_ln25_1_fu_835_p2 = (xor_ln25_reg_1957 & icmp_ln33_fu_829_p2);

assign and_ln25_2_fu_715_p2 = (xor_ln25_fu_703_p2 & icmp_ln30_fu_709_p2);

assign and_ln25_fu_1137_p2 = (xor_ln25_reg_1957_pp0_iter1_reg & tmp_reg_2110);

assign and_ln27_1_fu_880_p2 = (or_ln27_1_fu_865_p2 & and_ln25_1_fu_835_p2);

assign and_ln27_fu_1141_p2 = (or_ln27_1_reg_2008 & and_ln25_fu_1137_p2);

assign and_ln69_fu_1711_p2 = (xor_ln69_fu_1706_p2 & select_ln30_3_reg_2038_pp0_iter1_reg);

assign and_ln70_fu_1445_p2 = (select_ln30_3_reg_2038_pp0_iter1_reg & cmp65_fu_1440_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_reg_1944 == 1'd0) & (pe_input_stream_V_0_2_full_n == 1'b0)) | ((icmp_ln25_reg_1944 == 1'd0) & (pe_input_stream_V_0_1_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((pe_input_stream_V_0_0_full_n == 1'b0) | ((ap_predicate_op403_read_state12 == 1'b1) & (inner_fifos_1_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op391_read_state12 == 1'b1) & (inner_fifos_1_1_V_V_empty_n == 1'b0)) | ((select_ln30_4_reg_2044_pp0_iter1_reg == 1'd1) & (inner_fifos_0_0_V_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_reg_1944 == 1'd0) & (pe_input_stream_V_0_2_full_n == 1'b0)) | ((icmp_ln25_reg_1944 == 1'd0) & (pe_input_stream_V_0_1_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((pe_input_stream_V_0_0_full_n == 1'b0) | ((ap_predicate_op403_read_state12 == 1'b1) & (inner_fifos_1_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op391_read_state12 == 1'b1) & (inner_fifos_1_1_V_V_empty_n == 1'b0)) | ((select_ln30_4_reg_2044_pp0_iter1_reg == 1'd1) & (inner_fifos_0_0_V_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_reg_1944 == 1'd0) & (pe_input_stream_V_0_2_full_n == 1'b0)) | ((icmp_ln25_reg_1944 == 1'd0) & (pe_input_stream_V_0_1_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((pe_input_stream_V_0_0_full_n == 1'b0) | ((ap_predicate_op403_read_state12 == 1'b1) & (inner_fifos_1_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op391_read_state12 == 1'b1) & (inner_fifos_1_1_V_V_empty_n == 1'b0)) | ((select_ln30_4_reg_2044_pp0_iter1_reg == 1'd1) & (inner_fifos_0_0_V_V_full_n == 1'b0)))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (weight_stream_V_empty_n == 1'b0) & (ap_predicate_op156_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (weight_stream_V_empty_n == 1'b0) & (ap_predicate_op156_read_state3 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((inner_fifos_1_2_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1)) | ((inner_fifos_1_1_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((inner_fifos_1_2_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1)) | ((inner_fifos_1_1_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((inner_fifos_1_2_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1)) | ((inner_fifos_1_1_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((pe_input_stream_V_2_1_full_n == 1'b0) | (pe_input_stream_V_2_0_full_n == 1'b0) | (pe_input_stream_V_1_1_full_n == 1'b0) | (pe_input_stream_V_1_0_full_n == 1'b0) | ((pe_weight_stream_V_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0)) | ((pe_input_stream_V_2_2_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0)) | ((inner_fifos_0_2_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1)) | ((inner_fifos_0_1_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((pe_input_stream_V_2_1_full_n == 1'b0) | (pe_input_stream_V_2_0_full_n == 1'b0) | (pe_input_stream_V_1_1_full_n == 1'b0) | (pe_input_stream_V_1_0_full_n == 1'b0) | ((pe_weight_stream_V_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0)) | ((pe_input_stream_V_2_2_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0)) | ((inner_fifos_0_2_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1)) | ((inner_fifos_0_1_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((pe_input_stream_V_2_1_full_n == 1'b0) | (pe_input_stream_V_2_0_full_n == 1'b0) | (pe_input_stream_V_1_1_full_n == 1'b0) | (pe_input_stream_V_1_0_full_n == 1'b0) | ((pe_weight_stream_V_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0)) | ((pe_input_stream_V_2_2_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0)) | ((inner_fifos_0_2_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1)) | ((inner_fifos_0_1_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op369_write_state11 == 1'b1) & (inner_fifos_1_0_V_V_full_n == 1'b0)) | ((pe_input_stream_V_1_2_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0)) | ((ap_predicate_op351_read_state11 == 1'b1) & (inner_fifos_1_0_V_V_empty_n == 1'b0)) | ((ap_predicate_op336_read_state11 == 1'b1) & (inner_fifos_0_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op324_read_state11 == 1'b1) & (inner_fifos_0_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op315_read_state11 == 1'b1) & (inner_fifos_0_0_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op369_write_state11 == 1'b1) & (inner_fifos_1_0_V_V_full_n == 1'b0)) | ((pe_input_stream_V_1_2_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0)) | ((ap_predicate_op351_read_state11 == 1'b1) & (inner_fifos_1_0_V_V_empty_n == 1'b0)) | ((ap_predicate_op336_read_state11 == 1'b1) & (inner_fifos_0_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op324_read_state11 == 1'b1) & (inner_fifos_0_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op315_read_state11 == 1'b1) & (inner_fifos_0_0_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op369_write_state11 == 1'b1) & (inner_fifos_1_0_V_V_full_n == 1'b0)) | ((pe_input_stream_V_1_2_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0)) | ((ap_predicate_op351_read_state11 == 1'b1) & (inner_fifos_1_0_V_V_empty_n == 1'b0)) | ((ap_predicate_op336_read_state11 == 1'b1) & (inner_fifos_0_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op324_read_state11 == 1'b1) & (inner_fifos_0_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op315_read_state11 == 1'b1) & (inner_fifos_0_0_V_V_empty_n == 1'b0))));
end

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage4_iter1 = (((ap_predicate_op369_write_state11 == 1'b1) & (inner_fifos_1_0_V_V_full_n == 1'b0)) | ((pe_input_stream_V_1_2_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0)) | ((ap_predicate_op351_read_state11 == 1'b1) & (inner_fifos_1_0_V_V_empty_n == 1'b0)) | ((ap_predicate_op336_read_state11 == 1'b1) & (inner_fifos_0_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op324_read_state11 == 1'b1) & (inner_fifos_0_1_V_V_empty_n == 1'b0)) | ((ap_predicate_op315_read_state11 == 1'b1) & (inner_fifos_0_0_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state12_pp0_stage0_iter2 = ((pe_input_stream_V_0_0_full_n == 1'b0) | ((ap_predicate_op403_read_state12 == 1'b1) & (inner_fifos_1_2_V_V_empty_n == 1'b0)) | ((ap_predicate_op391_read_state12 == 1'b1) & (inner_fifos_1_1_V_V_empty_n == 1'b0)) | ((select_ln30_4_reg_2044_pp0_iter1_reg == 1'd1) & (inner_fifos_0_0_V_V_full_n == 1'b0)));
end

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage2_iter2 = (((inner_fifos_1_2_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1)) | ((inner_fifos_1_1_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state15_pp0_stage3_iter2 = ((pe_input_stream_V_2_1_full_n == 1'b0) | (pe_input_stream_V_2_0_full_n == 1'b0) | (pe_input_stream_V_1_1_full_n == 1'b0) | (pe_input_stream_V_1_0_full_n == 1'b0) | ((pe_weight_stream_V_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0)) | ((pe_input_stream_V_2_2_full_n == 1'b0) & (icmp_ln25_reg_1944_pp0_iter2_reg == 1'd0)) | ((inner_fifos_0_2_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1)) | ((inner_fifos_0_1_V_V_full_n == 1'b0) & (select_ln30_4_reg_2044_pp0_iter2_reg == 1'd1)));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((weight_stream_V_empty_n == 1'b0) & (ap_predicate_op156_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = (((icmp_ln25_reg_1944 == 1'd0) & (pe_input_stream_V_0_2_full_n == 1'b0)) | ((icmp_ln25_reg_1944 == 1'd0) & (pe_input_stream_V_0_1_full_n == 1'b0)));
end

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1643 = ((icmp_ln25_reg_1944 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln68_fu_1117_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_1648 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1653 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln30_3_reg_2038_pp0_iter1_reg == 1'd1) & (icmp_ln68_reg_2115 == 1'd0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_636 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_706 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op156_read_state3 = ((select_ln27_1_reg_1981 == 1'd1) & (icmp_ln25_reg_1944 == 1'd0));
end

always @ (*) begin
    ap_predicate_op315_read_state11 = ((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op324_read_state11 = ((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op336_read_state11 = ((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op351_read_state11 = ((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op369_write_state11 = ((select_ln30_4_reg_2044_pp0_iter1_reg == 1'd1) & (icmp_ln25_reg_1944_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op391_read_state12 = ((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0));
end

always @ (*) begin
    ap_predicate_op403_read_state12 = ((select_ln30_3_reg_2038_pp0_iter1_reg == 1'd0) & (icmp_ln68_reg_2115 == 1'd0));
end

assign cmp28_fu_609_p2 = ((zext_ln27_fu_593_p1 == add_cast_fu_601_p3) ? 1'b1 : 1'b0);

assign cmp28_mid1149_fu_689_p2 = ((empty_23_fu_671_p2 == 2'd0) ? 1'b1 : 1'b0);

assign cmp28_mid1_fu_747_p2 = ((zext_ln27_1_fu_685_p1 == add_cast_mid1_fu_739_p3) ? 1'b1 : 1'b0);

assign cmp56_fu_1435_p2 = ((select_ln30_reg_2021_pp0_iter1_reg == 2'd0) ? 1'b1 : 1'b0);

assign cmp59_fu_807_p2 = ((kernel_y_reg_526 == 2'd0) ? 1'b1 : 1'b0);

assign cmp59_mid1_fu_940_p2 = ((add_ln30_fu_886_p2 == 2'd0) ? 1'b1 : 1'b0);

assign cmp65_fu_1440_p2 = ((select_ln30_reg_2021_pp0_iter1_reg != 2'd0) ? 1'b1 : 1'b0);

assign empty_13_fu_587_p2 = ap_phi_mux_output_x_phi_fu_486_p4 << 2'd1;

assign empty_14_fu_801_p2 = (p_shl_fu_793_p3 - zext_ln30_fu_789_p1);

assign empty_15_fu_1090_p2 = (3'd2 + kernel_y_cast1_reg_1928);

assign empty_17_fu_1199_p1 = input_num_index_0_reg_2124[1:0];

assign empty_18_fu_1345_p1 = input_num_index_1_reg_2129[1:0];

assign empty_20_fu_1360_p1 = grp_fu_1050_p2[1:0];

assign empty_21_fu_1176_p2 = (kernel_x_cast2_reg_2069 + 3'd2);

assign empty_23_fu_671_p2 = add_ln25_1_fu_665_p2 << 2'd1;

assign empty_24_fu_1221_p1 = input_num_index_0_mid1_reg_2139[1:0];

assign empty_25_fu_1390_p1 = input_num_index_1_mid1_reg_2144[1:0];

assign empty_26_fu_1412_p1 = grp_fu_1061_p2[1:0];

assign grp_fu_1026_p0 = (3'd3 + kernel_x_cast2_fu_1017_p1);

assign grp_fu_1039_p0 = {{1'd1}, {select_ln30_reg_2021}};

assign grp_fu_1050_p0 = ($signed(3'd5) + $signed(kernel_y_cast1_reg_1928));

assign grp_fu_1061_p0 = ($signed(3'd5) + $signed(kernel_y_cast1_mid1_reg_2032));

assign grp_fu_1078_p0 = ($signed(3'd5) + $signed(kernel_x_cast2_reg_2069));

assign grp_fu_625_p0 = (3'd3 + kernel_y_cast1_fu_615_p1);

assign grp_fu_639_p0 = {{1'd1}, {ap_phi_mux_kernel_y_phi_fu_530_p4}};

assign grp_fu_974_p0 = (3'd3 + kernel_y_cast1_mid1_fu_936_p1);

assign grp_fu_988_p0 = {{1'd1}, {add_ln30_fu_886_p2}};

assign icmp_ln25_fu_645_p2 = ((ap_phi_mux_indvar_flatten209_phi_fu_474_p4 == 6'd36) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_651_p2 = ((ap_phi_mux_indvar_flatten97_phi_fu_497_p4 == 6'd18) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_709_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_519_p4 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_829_p2 = ((ap_phi_mux_iwo_phi_fu_542_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_1117_p2 = ((or_ln68_fu_1113_p2 == 2'd0) ? 1'b1 : 1'b0);

assign inner_fifos_1_0_V_V_din = ((cmp56_fu_1435_p2[0:0] === 1'b1) ? 8'd0 : input_registers_2_0_V_fu_162);

assign inner_fifos_1_1_V_V_din = ((cmp56_reg_2187[0:0] === 1'b1) ? input_buffers_q1 : input_registers_2_1_V_fu_166);

assign inner_fifos_1_2_V_V_din = ((cmp56_reg_2187[0:0] === 1'b1) ? input_buffers_q0 : input_registers_2_2_V_fu_170);

assign input_depth_index_cast_fu_1249_p1 = input_depth_index_fu_1243_p3;

assign input_depth_index_fu_1243_p3 = {{select_ln30_2_reg_2134}, {tmp_2_reg_2149}};

assign input_registers_0_3_V_1_fu_1716_p3 = ((and_ln69_fu_1711_p2[0:0] === 1'b1) ? input_buffers_q1 : input_registers_0_2_V_fu_150);

assign input_registers_1_3_V_1_fu_1729_p3 = ((and_ln69_fu_1711_p2[0:0] === 1'b1) ? input_buffers_q0 : input_registers_1_2_V_fu_154);

assign input_registers_2_1_V_2_fu_1753_p3 = ((cmp56_reg_2187[0:0] === 1'b1) ? input_buffers_q1 : input_registers_2_1_V_fu_166);

assign input_registers_2_2_V_2_fu_1766_p3 = ((cmp56_reg_2187[0:0] === 1'b1) ? input_buffers_q0 : input_registers_2_2_V_fu_170);

assign input_registers_2_3_V_1_fu_1791_p3 = ((tmp_3_reg_2199[0:0] === 1'b1) ? input_registers_2_2_V_fu_170 : input_buffers_q0);

assign kernel_x_cast2_fu_1017_p1 = select_ln30_reg_2021;

assign kernel_y_cast1_fu_615_p1 = ap_phi_mux_kernel_y_phi_fu_530_p4;

assign kernel_y_cast1_mid1_fu_936_p1 = add_ln30_fu_886_p2;

assign mul1_fu_1202_p5 = {{{{empty_17_fu_1199_p1}, {1'd0}}, {empty_17_fu_1199_p1}}, {1'd0}};

assign mul216_fu_1099_p0 = 7'd11;

assign mul216_fu_1099_p1 = mul216_fu_1099_p10;

assign mul216_fu_1099_p10 = empty_15_fu_1090_p2;

assign mul218_fu_1155_p0 = 7'd11;

assign mul218_fu_1155_p1 = mul218_fu_1155_p10;

assign mul218_fu_1155_p10 = p_mid16_fu_1146_p2;

assign mul220_fu_1185_p0 = mul220_fu_1185_p00;

assign mul220_fu_1185_p00 = empty_21_fu_1176_p2;

assign mul220_fu_1185_p1 = 7'd11;

assign mul46_1_fu_1348_p5 = {{{{empty_18_fu_1345_p1}, {1'd0}}, {empty_18_fu_1345_p1}}, {1'd0}};

assign mul46_1_mid1_fu_1393_p5 = {{{{empty_25_fu_1390_p1}, {1'd0}}, {empty_25_fu_1390_p1}}, {1'd0}};

assign mul46_2_fu_1364_p5 = {{{{empty_20_fu_1360_p1}, {1'd0}}, {empty_20_fu_1360_p1}}, {1'd0}};

assign mul46_2_mid1_fu_1416_p5 = {{{{empty_26_fu_1412_p1}, {1'd0}}, {empty_26_fu_1412_p1}}, {1'd0}};

assign mul46_mid1_fu_1224_p5 = {{{{empty_24_fu_1221_p1}, {1'd0}}, {empty_24_fu_1221_p1}}, {1'd0}};

assign notrhs_fu_813_p2 = ((kernel_y_reg_526 != 2'd2) ? 1'b1 : 1'b0);

assign notrhs_mid1_fu_954_p2 = ((add_ln30_fu_886_p2 != 2'd2) ? 1'b1 : 1'b0);

assign or_ln25_1_fu_824_p2 = (notrhs_fu_813_p2 | icmp_ln27_reg_1948);

assign or_ln25_fu_819_p2 = (icmp_ln27_reg_1948 | cmp59_fu_807_p2);

assign or_ln27_1_fu_865_p2 = (xor_ln27_fu_860_p2 | icmp_ln27_reg_1948);

assign or_ln27_2_fu_870_p2 = (or_ln25_fu_819_p2 | and_ln25_2_reg_1968);

assign or_ln27_3_fu_875_p2 = (or_ln25_1_fu_824_p2 | and_ln25_2_reg_1968);

assign or_ln27_fu_840_p2 = (icmp_ln27_reg_1948 | and_ln25_2_reg_1968);

assign or_ln30_1_fu_897_p2 = (or_ln30_fu_892_p2 | icmp_ln27_reg_1948);

assign or_ln30_fu_892_p2 = (and_ln27_1_fu_880_p2 | and_ln25_2_reg_1968);

assign or_ln68_fu_1113_p2 = (select_ln30_reg_2021 | select_ln30_8_reg_2058);

assign output_y_2_fu_729_p2 = (2'd1 + select_ln25_fu_657_p3);

assign p_mid16_fu_1146_p2 = (3'd2 + kernel_y_cast1_mid1_reg_2032);

assign p_mid1_fu_922_p2 = (p_shl_mid1_fu_914_p3 - zext_ln30_1_fu_910_p1);

assign p_shl_fu_793_p3 = {{kernel_y_reg_526}, {2'd0}};

assign p_shl_mid1_fu_914_p3 = {{add_ln30_fu_886_p2}, {2'd0}};

assign pe_input_stream_V_0_0_din = input_registers_0_0_V_1_fu_174;

assign pe_input_stream_V_0_1_din = input_registers_1_0_V_1_fu_186;

assign pe_input_stream_V_0_2_din = input_registers_V_2_0_3_fu_158;

assign pe_input_stream_V_1_0_din = input_registers_0_0_V_fu_178;

assign pe_input_stream_V_1_1_din = input_registers_1_0_V_fu_190;

assign pe_input_stream_V_1_2_din = input_registers_2_0_V_fu_162;

assign pe_input_stream_V_2_0_din = input_registers_0_1_V_fu_182;

assign pe_input_stream_V_2_1_din = input_registers_1_1_V_fu_194;

assign pe_input_stream_V_2_2_din = input_registers_2_2_V_2_reg_2262;

assign pe_weight_stream_V_din = weight_registers_V_q0;

assign select_ln25_1_fu_677_p3 = ((icmp_ln27_fu_651_p2[0:0] === 1'b1) ? empty_23_fu_671_p2 : empty_13_fu_587_p2);

assign select_ln25_2_fu_695_p3 = ((icmp_ln27_fu_651_p2[0:0] === 1'b1) ? cmp28_mid1149_fu_689_p2 : cmp28_fu_609_p2);

assign select_ln25_3_fu_721_p3 = ((icmp_ln27_fu_651_p2[0:0] === 1'b1) ? add_ln25_1_fu_665_p2 : ap_phi_mux_output_x_phi_fu_486_p4);

assign select_ln25_fu_657_p3 = ((icmp_ln27_fu_651_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_output_y_phi_fu_508_p4);

assign select_ln27_1_fu_753_p3 = ((and_ln25_2_fu_715_p2[0:0] === 1'b1) ? cmp28_mid1_fu_747_p2 : select_ln25_2_fu_695_p3);

assign select_ln27_2_fu_852_p3 = ((or_ln27_fu_840_p2[0:0] === 1'b1) ? 4'd0 : empty_14_fu_801_p2);

assign select_ln27_3_fu_1214_p3 = ((or_ln27_reg_2000_pp0_iter1_reg[0:0] === 1'b1) ? 6'd0 : mul1_fu_1202_p5);

assign select_ln27_4_fu_1376_p3 = ((or_ln27_reg_2000_pp0_iter1_reg[0:0] === 1'b1) ? 6'd18 : mul46_1_fu_1348_p5);

assign select_ln27_5_fu_1383_p3 = ((or_ln27_reg_2000_pp0_iter1_reg[0:0] === 1'b1) ? 6'd36 : mul46_2_fu_1364_p5);

assign select_ln27_6_fu_761_p3 = ((and_ln25_2_fu_715_p2[0:0] === 1'b1) ? output_y_2_fu_729_p2 : select_ln25_fu_657_p3);

assign select_ln27_7_fu_781_p3 = ((icmp_ln27_fu_651_p2[0:0] === 1'b1) ? 6'd1 : add_ln27_1_fu_775_p2);

assign select_ln27_fu_844_p3 = ((or_ln27_fu_840_p2[0:0] === 1'b1) ? 2'd0 : kernel_y_reg_526);

assign select_ln30_1_fu_928_p3 = ((and_ln27_1_fu_880_p2[0:0] === 1'b1) ? p_mid1_fu_922_p2 : select_ln27_2_fu_852_p3);

assign select_ln30_2_fu_1169_p3 = ((and_ln27_1_reg_2013[0:0] === 1'b1) ? tmp_1_fu_1161_p3 : and_ln27_fu_1141_p2);

assign select_ln30_3_fu_946_p3 = ((and_ln27_1_fu_880_p2[0:0] === 1'b1) ? cmp59_mid1_fu_940_p2 : or_ln27_2_fu_870_p2);

assign select_ln30_4_fu_960_p3 = ((and_ln27_1_fu_880_p2[0:0] === 1'b1) ? notrhs_mid1_fu_954_p2 : or_ln27_3_fu_875_p2);

assign select_ln30_5_fu_1236_p3 = ((and_ln27_1_reg_2013_pp0_iter1_reg[0:0] === 1'b1) ? mul46_mid1_fu_1224_p5 : select_ln27_3_fu_1214_p3);

assign select_ln30_6_fu_1405_p3 = ((and_ln27_1_reg_2013_pp0_iter1_reg[0:0] === 1'b1) ? mul46_1_mid1_fu_1393_p5 : select_ln27_4_fu_1376_p3);

assign select_ln30_7_fu_1428_p3 = ((and_ln27_1_reg_2013_pp0_iter1_reg[0:0] === 1'b1) ? mul46_2_mid1_fu_1416_p5 : select_ln27_5_fu_1383_p3);

assign select_ln30_8_fu_994_p3 = ((and_ln27_1_fu_880_p2[0:0] === 1'b1) ? add_ln30_fu_886_p2 : select_ln27_fu_844_p3);

assign select_ln30_9_fu_1084_p3 = ((or_ln27_reg_2000[0:0] === 1'b1) ? 4'd1 : add_ln30_1_reg_1990);

assign select_ln30_fu_902_p3 = ((or_ln30_1_fu_897_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_iwo_phi_fu_542_p4);

assign select_ln73_fu_1579_p3 = ((cmp56_fu_1435_p2[0:0] === 1'b1) ? 8'd0 : input_registers_2_0_V_fu_162);

assign select_ln78_1_fu_1471_p3 = ((and_ln70_fu_1445_p2[0:0] === 1'b1) ? input_registers_0_1_V_fu_182 : input_registers_0_0_V_fu_178);

assign select_ln78_2_fu_1497_p3 = ((and_ln70_fu_1445_p2[0:0] === 1'b1) ? input_registers_0_2_V_fu_150 : input_registers_0_1_V_fu_182);

assign select_ln78_3_fu_1532_p3 = ((and_ln70_fu_1445_p2[0:0] === 1'b1) ? input_registers_1_0_V_fu_190 : input_registers_1_0_V_1_fu_186);

assign select_ln78_4_fu_1639_p3 = ((and_ln70_reg_2193[0:0] === 1'b1) ? input_registers_1_1_V_fu_194 : input_registers_1_0_V_fu_190);

assign select_ln78_5_fu_1661_p3 = ((and_ln70_reg_2193[0:0] === 1'b1) ? input_registers_1_2_V_fu_154 : input_registers_1_1_V_fu_194);

assign select_ln78_fu_1450_p3 = ((and_ln70_fu_1445_p2[0:0] === 1'b1) ? input_registers_0_0_V_fu_178 : input_registers_0_0_V_1_fu_174);

assign shl_ln58_1_fu_1318_p2 = grp_fu_1039_p2 << 3'd1;

assign shl_ln58_2_fu_1263_p3 = {{trunc_ln58_fu_1259_p1}, {3'd0}};

assign shl_ln58_3_fu_1609_p2 = grp_fu_1078_p2 << 3'd1;

assign shl_ln58_4_fu_1306_p3 = {{trunc_ln58_1_fu_1302_p1}, {3'd0}};

assign shl_ln58_6_fu_1597_p3 = {{trunc_ln58_2_fu_1593_p1}, {3'd0}};

assign shl_ln58_fu_1275_p2 = grp_fu_1026_p2 << 3'd1;

assign sub_ln58_1_fu_1328_p2 = (zext_ln58_2_fu_1314_p1 - zext_ln58_3_fu_1324_p1);

assign sub_ln58_2_fu_1619_p2 = (zext_ln58_4_fu_1605_p1 - zext_ln58_5_fu_1615_p1);

assign sub_ln58_fu_1285_p2 = (zext_ln58_fu_1271_p1 - zext_ln58_1_fu_1281_p1);

assign tmp_1_fu_1161_p3 = mul218_fu_1155_p2[32'd5];

assign trunc_ln27_1_fu_735_p1 = output_y_2_fu_729_p2[0:0];

assign trunc_ln27_fu_597_p1 = ap_phi_mux_output_y_phi_fu_508_p4[0:0];

assign trunc_ln58_1_fu_1302_p1 = grp_fu_1039_p2[1:0];

assign trunc_ln58_2_fu_1593_p1 = grp_fu_1078_p2[1:0];

assign trunc_ln58_fu_1259_p1 = grp_fu_1026_p2[1:0];

assign xor_ln25_fu_703_p2 = (icmp_ln27_fu_651_p2 ^ 1'd1);

assign xor_ln27_fu_860_p2 = (icmp_ln30_reg_1963 ^ 1'd1);

assign xor_ln69_fu_1706_p2 = (tmp_3_reg_2199 ^ 1'd1);

assign zext_ln182_fu_1002_p1 = select_ln30_fu_902_p3;

assign zext_ln27_1_fu_685_p1 = select_ln25_1_fu_677_p3;

assign zext_ln27_fu_593_p1 = empty_13_fu_587_p2;

assign zext_ln30_1_fu_910_p1 = add_ln30_fu_886_p2;

assign zext_ln30_fu_789_p1 = kernel_y_reg_526;

assign zext_ln37_fu_1012_p1 = add_ln35_fu_1006_p2;

assign zext_ln58_1_fu_1281_p1 = shl_ln58_fu_1275_p2;

assign zext_ln58_2_fu_1314_p1 = shl_ln58_4_fu_1306_p3;

assign zext_ln58_3_fu_1324_p1 = shl_ln58_1_fu_1318_p2;

assign zext_ln58_4_fu_1605_p1 = shl_ln58_6_fu_1597_p3;

assign zext_ln58_5_fu_1615_p1 = shl_ln58_3_fu_1609_p2;

assign zext_ln58_fu_1271_p1 = shl_ln58_2_fu_1263_p3;

assign zext_ln76_1_fu_1340_p1 = add_ln58_1_fu_1334_p2;

assign zext_ln76_2_fu_1630_p1 = add_ln58_2_fu_1625_p2;

assign zext_ln76_3_fu_1555_p1 = add_ln58_3_fu_1550_p2;

assign zext_ln76_4_fu_1565_p1 = add_ln58_4_fu_1560_p2;

assign zext_ln76_5_fu_1688_p1 = add_ln58_5_fu_1683_p2;

assign zext_ln76_6_fu_1742_p1 = add_ln58_6_reg_2237;

assign zext_ln76_7_fu_1746_p1 = add_ln58_7_reg_2242;

assign zext_ln76_8_fu_1779_p1 = add_ln58_8_reg_2247;

assign zext_ln76_fu_1297_p1 = add_ln58_fu_1291_p2;

always @ (posedge ap_clk) begin
    kernel_y_cast1_reg_1928[2] <= 1'b0;
    kernel_y_cast1_mid1_reg_2032[2] <= 1'b0;
    zext_ln37_reg_2064[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln37_reg_2064_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln37_reg_2064_pp0_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    kernel_x_cast2_reg_2069[2] <= 1'b0;
    input_depth_index_cast_reg_2154[5:2] <= 4'b0000;
    sub_ln58_reg_2165[0] <= 1'b0;
    sub_ln58_1_reg_2176[0] <= 1'b0;
end

endmodule //pe
